/*  TextField.incl  Bernie Wylde 20170704  syntax:    textfield tag, enabled, text, rect, wndTag*/// lineBreakMode - see Control.incl// text field events - same values as _controlDidXxxx eventsbegin enum not output_textFieldDidBeginEditing = _controlTextDidBeginEditing_textFieldDidChange       = _controlTextDidChange_textFieldDidEndEditing   = _controlTextDidEndEditingend enumtoolbox TextFieldSetEditable( SInt32 tag, Boolean flag )toolbox TextFieldSetSelectable( SInt32 tag, Boolean flag )// importsGraphicstoolbox TextFieldSetDrawsBackground( SInt32 tag, Boolean flag )toolbox TextFieldSelectText( SInt32 tag )toolbox fn TextFieldIsEnabled( SInt32 tag ) = Booleantoolbox TextFieldSetPlaceholderString( SInt32 tag, CFStringRef string )// macOS 10.10toolbox TextFieldSetPlaceholderAttributedString( SInt32 tag, CFAttributedStringRef string )// macOS 10.10toolbox TextFieldSetTextColor( SInt32 tag, CGColorRef col )// macOS 10.8toolbox TextFieldSetBackgroundColor( SInt32 tag, CGColorRef col )// macOS 10.8toolbox TextFieldSetAllowsEditingTextAttributes( SInt32 tag, Boolean flag )toolbox TextFieldSetImportsGraphics( SInt32 tag, Boolean flag )// customtoolbox TextFieldSetTextRGB( SInt32 tag, CGFloat r, CGFloat g, CGFloat b, CGFloat a )toolbox TextFieldSetBackgroundRGB( SInt32 tag, CGFloat r, CGFloat g, CGFloat b, CGFloat a )/*  TextFieldSetFormat  Params    tag:           the textfield tag    characters:    a string of characters to either pass or block    pass:          a boolean to indicate whether to pass or block the characters    maxLength:     the maximum length of the string in the textfield. 0 = no limit    caseSensitive: is case sensitive*/toolbox TextFieldSetFormat( SInt32 tag, CFStringRef characters, Boolean pass, UInt32 maxLength, Boolean caseSensitive )