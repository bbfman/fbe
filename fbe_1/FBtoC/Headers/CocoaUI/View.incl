/*  View.incl  Bernie Wylde 20170704  syntax:    view tag, rect, subclass, wndTag  nibview tag, nibName, viewIdentifier, origin, superviewTag*/// border types#if ndef _DEFINEDINCOCOA#define NSBorderType as SInt32#endifsystem NSBorderType NSNoBordersystem NSBorderType NSLineBordersystem NSBorderType NSBezelBordersystem NSBorderType NSGrooveBorder// autoresizing maskssystem UInt32 NSViewNotSizablesystem UInt32 NSViewMinXMarginsystem UInt32 NSViewWidthSizablesystem UInt32 NSViewMaxXMarginsystem UInt32 NSViewMinYMarginsystem UInt32 NSViewHeightSizablesystem UInt32 NSViewMaxYMargin/*  dialog events  window content views, and views created with 'subclass' param set to _true, trigger these events*/begin enum not output 231_viewDrawRect_viewMouseDown_viewMouseDragged_viewMouseUp_viewMouseMoved_viewMouseEntered_viewMouseExited_viewRightMouseDown_viewRightMouseDragged_viewRightMouseUp_viewKeyDown_viewKeyUp_viewFlagsChangedend enumtoolbox fn ViewSuperview( SInt32 tag ) = SInt32// toolbox ViewSubviews( SInt32 tag ) = CFArrayReftoolbox fn ViewWindow( SInt32 tag ) = Sint32toolbox ViewAddSubview( SInt32 viewTag, SInt32 subviewTag )toolbox ViewAddSubviewPositioned( SInt32 superviewTag, SInt32 subviewTag, NSWindowOrderingMode position, SInt32 otherViewTag )toolbox ViewRemoveFromSuperview( SInt32 tag )// toolbox ViewReplaceSubview( SInt32 tag, SInt32 subview1, SInt32 subview2 )// toolbox fn ViewIsDescendantOf( SInt32 tag, SInt32 superTag ) = Booleantoolbox fn ViewFrame( SInt32 tag ) = CGRecttoolbox ViewSetFrame( SInt32 tag, CGRect r )toolbox ViewSetFrameOrigin( SInt32 tag, CGPoint origin )toolbox ViewSetFrameSize( SInt32 tag, CGSize size )toolbox ViewSetFrameRotation( SInt32 tag, CGFloat rotation )toolbox fn ViewBounds( SInt32 tag ) = CGRecttoolbox ViewSetBounds( SInt32 tag, CGRect bounds )toolbox ViewSetBoundsOrigin( SInt32 tag, CGPoint origin )toolbox ViewSetBoundsSize( SInt32 tag, CGSize size )toolbox ViewSetBoundsRotation( SInt32 tag, CGFloat rotation )toolbox ViewSetWantsLayer( SInt32 tag, Boolean flag )toolbox fn ViewAlphaValue( SInt32 tag ) = CGFloattoolbox ViewSetAlphaValue( SInt32 tag, CGFloat value )toolbox fn ViewFrameCenterRotation( SInt32 tag ) = CGFloattoolbox ViewSetFrameCenterRotation( SInt32 tag, CGFloat rotation )// shadowtoolbox ViewPrint( SInt32 tag )toolbox ViewSetNeedsDisplayInRect( SInt32 tag, CGRect r )toolbox ViewSetNeedsDisplay( SInt32 tag )// opaquetoolbox ViewRotateByAngle( SInt32 tag, CGFloat angle )// isFlippedtoolbox ViewSetAutoresizingMask( SInt32 tag, SInt32 mask )// registerForDraggedTypestoolbox ViewSetToolTip( SInt32 tag, CFStringRef string )toolbox fn ViewIsHidden( SInt32 tag ) = Booleantoolbox fn ViewIsHiddenOrHasHiddenAncestor( SInt32 tag ) = Booleantoolbox fn ViewNextKeyView( SInt32 tag ) = SInt32toolbox fn ViewNextValidKeyView( SInt32 tag ) = SInt32toolbox fn ViewPreviousKeyView( SInt32 tag ) = SInt32toolbox fn ViewPreviousValidKeyView( SInt32 tag ) = SInt32toolbox ViewScrollRect( SInt32 tag, CGRect r, CGSize size )toolbox fn ViewFrameRotation( SInt32 tag ) = CGFloattoolbox fn ViewBoundsRotation( SInt32 tag ) = CGFloat// animatortoolbox fn ViewAnimator( SInt32 tag ) = ptrtoolbox ViewAnimatorSetFrame( SInt32 tag, CGRect r )toolbox ViewAnimatorSetFrameOrigin( SInt32 tag, CGPoint origin )toolbox ViewAnimatorSetFrameSize( SInt32 tag, CGSize size )toolbox ViewAnimatorSetFrameRotation( SInt32 tag, CGFloat rot )toolbox ViewAnimatorSetBounds( SInt32 tag, CGRect r )toolbox ViewAnimatorSetBoundsOrigin( SInt32 tag, CGPoint origin )toolbox ViewAnimatorSetBoundsSize( SInt32 tag, CGSize size )toolbox ViewAnimatorSetBoundsRotation( SInt32 tag, CGFloat rot )toolbox ViewAnimatorSetFrameCenterRotation( SInt32 tag, CGFloat rot )toolbox ViewAnimatorSetAlphaValue( SInt32 tag, CGFloat value )//toolbox ViewSetTrackingArea( SInt32 tag, CGRect r, NSTrackingAreaOptions options )// customtoolbox fn ViewWithTag( SInt32 tag ) = ptrtoolbox ViewSetFlipped( SInt32 tag, Boolean flag )toolbox ViewsEmbedInView( SInt32 tag, ... )toolbox ViewSetAcceptsFirstResponder( SInt32 tag, Boolean flag )//toolbox ViewSetDrawRectCallback( SInt32 tag, ptr callback )