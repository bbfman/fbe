/*   Translated to FB using         HeadToHead       by Bernie Wylde         ----------          5 January 2009*//* CoreGraphics - CGLayer.h * Copyright (c) 2004 Apple Computer, Inc. * All rights reserved.*/#if ndef _DEFINEDINCARBON#define CGLayerRef as pointer/* Create a layer of size `size' relative to the context `context'. The * value of `size' is specified in default user space (base space) units. * The parameter `auxiliaryInfo' should be NULL; it is reserved for future* expansion. */toolbox fn CGLayerCreateWithContext( CGContextRef context, CGSize size, CFDictionaryRef auxiliaryInfo ) = CGLayerRef// AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER;/* Equivalent to `CFRetain(layer)', except it doesn't crash (as CFRetain* does) if `layer' is NULL. */toolbox fn CGLayerRetain( CGLayerRef layer ) = CGLayerRef// AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER;/* Equivalent to `CFRelease(layer)', except it doesn't crash (as CFRelease* does) if `layer' is NULL. */toolbox CGLayerRelease( CGLayerRef layer )// AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER;/* Return the size of the layer `layer'. */toolbox fn CGLayerGetSize( CGLayerRef layer ) = CGSize// AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER;/* Return the context of `layer'. */toolbox fn CGLayerGetContext( CGLayerRef layer ) = CGContextRef// AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER;/* Draw the contents of `layer' into `rect' of `context'. The contents are * scaled, if necessary, to fit into `rect'; the rectangle `rect' is in* user space. */toolbox CGContextDrawLayerInRect( CGContextRef context, CGRect rect, CGLayerRef layer )// AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER;/* Draw the contents of `layer' at `point' in `context'. This is * equivalent to calling "CGContextDrawLayerInRect" with a rectangle having* origin at `point' and size equal to the size of `layer'. */toolbox CGContextDrawLayerAtPoint( CGContextRef context, CGPoint point, CGLayerRef layer )// AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER;/* Return the CFTypeID for CGLayerRefs. */toolbox fn CGLayerGetTypeID = CFTypeID// AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER;#endif// _DEFINEDINCARBON