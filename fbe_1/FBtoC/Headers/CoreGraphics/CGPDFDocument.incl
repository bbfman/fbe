/*   Translated to FB using         HeadToHead       by Bernie Wylde         ----------        5 January 2009*//* CoreGraphics - CGPDFDocument.h * Copyright (c) 2000-2007 Apple Inc. * All rights reserved.*/#if ndef _DEFINEDINCARBON#define CGPDFDocumentRef as pointer#endifinclude "CoreGraphics:CGPDFDictionary.incl"#if ndef _DEFINEDINCARBON//#define CGPDFDocumentRef as pointer/* Create a PDF document, using `provider' to obtain the document's* data. */toolbox fn CGPDFDocumentCreateWithProvider( CGDataProviderRef provider ) = CGPDFDocumentRef/* Create a PDF document from `url'. */toolbox fn CGPDFDocumentCreateWithURL( CFURLRef url ) = CGPDFDocumentRef/* Equivalent to `CFRetain(document)', except it doesn't crash (as CFRetain* does) if `document' is NULL. */toolbox fn CGPDFDocumentRetain( CGPDFDocumentRef document ) = CGPDFDocumentRef/* Equivalent to `CFRelease(document)', except it doesn't crash (as* CFRelease does) if `document' is NULL. */toolbox CGPDFDocumentRelease( CGPDFDocumentRef document )/* Return the major and minor version numbers of `document'. */toolbox CGPDFDocumentGetVersion( CGPDFDocumentRef document, long *majorVersion, long *minorVersion ) // AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER;/* Return true if the PDF file associated with `document' is encrypted; * false otherwise. If the PDF file is encrypted, then a password must be * supplied before certain operations are enabled; different passwords may* enable different operations. */toolbox fn CGPDFDocumentIsEncrypted( CGPDFDocumentRef document ) = Boolean // AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER;/* Use `password' to decrypt `document' and grant permission for certain * operations. Returns true if `password' is a valid password; false* otherwise. */toolbox fn CGPDFDocumentUnlockWithPassword( CGPDFDocumentRef document, pointer password ) = Boolean // AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER;/* Return true if `document' is unlocked; false otherwise. A document is * unlocked if it isn't encrypted, or if it is encrypted and a valid* password was specified with "CGPDFDocumentUnlockWithPassword". */toolbox fn CGPDFDocumentIsUnlocked( CGPDFDocumentRef document ) = Boolean // AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER;/* Return true if `document' allows printing; false otherwise. Typically, * this function returns false only if the document is encrypted and the * document's current password doesn't grant permission to perform* printing. */toolbox fn CGPDFDocumentAllowsPrinting( CGPDFDocumentRef document ) = Boolean // AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER;/* Return true if `document' allows copying; false otherwise. Typically, * this function returns false only if the document is encrypted and the * document's current password doesn't grant permission to perform* copying. */toolbox fn CGPDFDocumentAllowsCopying( CGPDFDocumentRef document ) = Boolean // AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER;/* Return the number of pages in `document'. */toolbox fn CGPDFDocumentGetNumberOfPages( CGPDFDocumentRef document ) = UInt32/* Return the page corresponding to `pageNumber', or NULL if no such page* exists in the document. Pages are numbered starting at 1. */toolbox fn CGPDFDocumentGetPage( CGPDFDocumentRef document, UInt32 pageNumber ) = CGPDFPageRef // AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER;/* Return the document catalog of `document'. */toolbox fn CGPDFDocumentGetCatalog( CGPDFDocumentRef document ) = CGPDFDictionaryRef // AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER;/* Return the info dictionary of `document'. */toolbox fn CGPDFDocumentGetInfo( CGPDFDocumentRef document ) = CGPDFDictionaryRef // AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER;/* Return the "file identifier" array of `document'. */toolbox fn CGPDFDocumentGetID( CGPDFDocumentRef document ) = CGPDFArrayRef // AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER;/* Return the CFTypeID for CGPDFDocumentRefs. */toolbox fn CGPDFDocumentGetTypeID = CFTypeID // AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER;/* The following functions are deprecated in favor of the CGPDFPage API. *//* DEPRECATED; return the media box of page number `page' in `document'. */// CG_EXTERN CGRect CGPDFDocumentGetMediaBox(CGPDFDocumentRef document, int page) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5;/* DEPRECATED; return the crop box of page number `page' in `document'. */// CG_EXTERN CGRect CGPDFDocumentGetCropBox(CGPDFDocumentRef document, int page) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5;/* DEPRECATED; return the bleed box of page number `page' in `document'. */// CG_EXTERN CGRect CGPDFDocumentGetBleedBox(CGPDFDocumentRef document, int page) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5;/* DEPRECATED; return the trim box of page number `page' in `document'. */// CG_EXTERN CGRect CGPDFDocumentGetTrimBox(CGPDFDocumentRef document, int page) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5;/* DEPRECATED; return the art box of page number `page' in `document'. */// CG_EXTERN CGRect CGPDFDocumentGetArtBox(CGPDFDocumentRef document, int page) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5;/* DEPRECATED; return the rotation angle (in degrees) of page number `page'* in `document'. */// CG_EXTERN int CGPDFDocumentGetRotationAngle(CGPDFDocumentRef document, int page) AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_5;#endif// _DEFINEDINCARBON