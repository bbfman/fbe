#define#else#endif#ifabsacosacoshandappearanceappendappeventappleApplescriptGetResultApplescriptLoadAndRunApplescriptRunApplescriptStoreasascasinasinhatanatanhatnbeepbeginBeginCCodeBeginCDeclarationBeginCFunctionbin$bitBlockFillBlockMoveBooleanboxBtnRectbuttonbutton&button#ButtonDataSizeButtonHelpSetTextButtonHelpShowButtonTextStringbytecallcasecharCheckOneItemchr$circleclearClearHandlecloseclose#clscocoacocoaalertcocoaInitcolorcolorwellcomboboxcompilecompilerversioncontainerCopyFileCopyRectcoscoshcsrlincursorcvidatadatepickerdate$decdefdefstrdelaydialogdimDisposeHdodoubledynamicediteditmenuedit$elseEmbedButtonendEndCenumeoferroreventexitexpFBCStr2PStrFBPStr2CStrfieldfilefile#files$fillfinderinfofixFixedfloatFlushWindowBufferfnFontHeightforfracFSFileExistsFSGetFullPathNameFSSendFileToTrashgetGetButtonDataGetButtonTextSelectionGetPictGetProcessInfoglobalsgosubgotoHandleHandleEventsHandle2BtnHandShakehex$ifimageviewinincincludeindex$indexfinkey$inputinput#instrintintegerInvalRectkillLCaseLCopylevelindicatorleft$left$$lenletlibrarylineloclocallocatelofloglog10log2longLongBlockFilllprintmaxwindowmaybemenumid$mid$$minwindowmki$modmodemousenandndefNewWindowPositionNewWindowPositionMethodnextnibmenunibpopovernibtoolbarnibviewnibwindownornotNULLoct$offsetofonopenorospanelopenospanelsaveospanelsettitleospanelsetnamefieldlabelospanelsettagnamesospanelinstallhandlerospanelsetaccessoryviewoutlineviewoutputoverridepagepanelpathcontrolpeekpenpictureplotpointerpokepopoverpopupbuttonposprcancelpreferencesprhandleprintprint#procprogressindicatorpstr$ptrputrandomrandomizeratioreadread#recrecordrecord#RectremrenameReplaceResourceresourcesrestorereturnRGBColorRgnHandleright$right$$rndrouterunruntimeScanFolderscrollscrollviewsearchfieldsecuretextfieldsegmentedcontrolselectSetButtonDataSetButtonFocusSetButtonFontStyleSetButtonTextSelectionSetButtonTextStringSetSelectSetWindowBackgroundsgnshortshutdownsinsinglesinhsizeofslidersoundsound%space$spcsplitviewsqrstepstepperstopstr&str#str$Str15Str255Str31Str63string$string$$stringlistswapswitchsyserrorsystemtabtableviewtabviewtantanhtekey$texttextfieldtextlabeltextviewthenthreadbeginthreadstatustime$timertotokenfieldtool_argtool_argctool_argvtool_getenvtoolbartoolbaritemtoolboxTruncatetypeofucase$ucase$$unionuns$unsigneduntilusingvalval&varptrviewvoidwendwhilewidthwindowwindowmenuWindowRepositionwordWptr2WNumwritewrite#xelsexorxref