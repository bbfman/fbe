// FBtoC mods    31 July 2007     bwinclude "Tlbx MacHelp.incl"local fn ButtonHelpSetText( btnID as long, s as Str255 )'~'1dim as HMHelpContent      helpText0, helpText1dim as HMHelpContentRec   helpRecdim as Str255             s1, s2dim as pointer            strPtrdim as Controlref         cdim as byte               p, add : add = _falsedim as Str15               backSlashPlusWeird : backSlashPlusWeird = chr$(92) + chr$(164)c  = button&( btnID )long if ( c )p  = instr( 1, s, "\@" )s1 = s : if p then s1[0] = p-1p = instr(1, s1, backSlashPlusWeird)long if ( p )long if ( s1[p+2] == _"+" )s2 = right$( s1, s1[0] -p-2 )add = _ztruexelses2 = right$( s1, s1[0] -p-1 )end ifs1[0] = p-1  xelses2 = s1end ifs = ucase$(s)BlockZero( @helpRec.absHotRect, sizeof(Rect) )helpRec.tagSide = _kHMDefaultSidep  = instr( 1, s, "\@" )strPtr = @sselect ( s[0] - p )case s[0]case > 2select {strPtr+p+2}case _"LC",_"CL" : helpRec.tagSide = _kHMOutsideLeftCenterAlignedcase _"RC",_"CR" : helpRec.tagSide = _kHMOutsideRightCenterAlignedcase _"TL" : helpRec.tagSide = _kHMOutsideTopLeftAlignedcase _"TR" : helpRec.tagSide = _kHMOutsideTopRightAlignedcase _"LT" : helpRec.tagSide = _kHMOutsideLeftTopAlignedcase _"LB" : helpRec.tagSide = _kHMOutsideLeftBottomAlignedcase _"BL" : helpRec.tagSide = _kHMOutsideBottomLeftAlignedcase _"BR" : helpRec.tagSide = _kHMOutsideBottomRightAlignedcase _"RT" : helpRec.tagSide = _kHMOutsideRightTopAlignedcase _"RB" : helpRec.tagSide = _kHMOutsideRightBottomAlignedend selectcase > 1select |strPtr+p+2|case _"T" : helpRec.tagSide = _kHMOutsideTopCenterAlignedcase _"L" : helpRec.tagSide = _kHMOutsideLeftCenterAlignedcase _"B" : helpRec.tagSide = _kHMOutsideBottomCenterAlignedcase _"R" : helpRec.tagSide = _kHMOutsideRightCenterAlignedend selectend selecthelpText0.contentType = _kHMPascalStrContenthelpText0.u.tagString = s1helpText1.contentType = _kHMPascalStrContentlong if ( add )helpText1.u.tagString = s1 + chr$(13) + s2xelsehelpText1.u.tagString = s2end ifhelpRec.content[0] = helpText0helpRec.content[1] = helpText1fn HMSetControlHelpContent( c, helpRec )end ifend fnlocal fn ButtonHelpShow( show as Boolean )'~'1dim as Boolean    visiblevisible = fn HMAreHelpTagsDisplayedlong if ( show )if ( visible == _false ) then fn HMSetHelpTagsDisplayed( _true )fn HMSetTagDelay( 100 )xelseif ( visible != _false ) then fn HMSetHelpTagsDisplayed( _false )end ifend fn