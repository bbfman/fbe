// nearly complete translation   bw 20090627/* CFRunLoop.h Copyright (c) 1998-2007, Apple Inc. All rights reserved.*/#if ndef _DEFINEDINCARBON#define CFRunLoopRef as pointer#define CFRunLoopSourceRef as pointer#define CFRunLoopObserverRef as pointer#define CFRunLoopTimerRef as pointer/* Reasons for CFRunLoopRunInMode() to Return */begin enum_kCFRunLoopRunFinished      = 1_kCFRunLoopRunStopped       = 2_kCFRunLoopRunTimedOut      = 3_kCFRunLoopRunHandledSource = 4end enum/* Run Loop Observer Activities */begin enum_kCFRunLoopEntry         = (1 << 0)_kCFRunLoopBeforeTimers  = (1 << 1)_kCFRunLoopBeforeSources = (1 << 2)_kCFRunLoopBeforeWaiting = (1 << 5)_kCFRunLoopAfterWaiting  = (1 << 6)_kCFRunLoopExit          = (1 << 7)_kCFRunLoopAllActivities = 0x0FFFFFFFend enum#define CFRunLoopActivity as CFOptionFlagssystem CFStringRef kCFRunLoopDefaultModesystem CFStringRef kCFRunLoopCommonModes toolbox fn CFRunLoopGetTypeID() = CFTypeIDtoolbox fn CFRunLoopGetCurrent() = CFRunLoopReftoolbox fn CFRunLoopGetMain() = CFRunLoopRef//  AVAILABLE_MAC_OS_X_VERSION_10_1_AND_LATER;toolbox fn CFRunLoopCopyCurrentMode( CFRunLoopRef rl ) = CFStringReftoolbox fn CFRunLoopCopyAllModes( CFRunLoopRef rl ) = CFArrayReftoolbox CFRunLoopAddCommonMode( CFRunLoopRef rl, CFStringRef mode )toolbox fn CFRunLoopGetNextTimerFireDate( CFRunLoopRef rl, CFStringRef mode ) = CFAbsoluteTimetoolbox CFRunLoopRun()toolbox fn CFRunLoopRunInMode( CFStringRef mode, CFTimeInterval seconds, Boolean returnAfterSourceHandled ) = SInt32toolbox fn CFRunLoopIsWaiting( CFRunLoopRef rl ) = Booleantoolbox CFRunLoopWakeUp( CFRunLoopRef rl )toolbox CFRunLoopStop( CFRunLoopRef rl )toolbox fn CFRunLoopContainsSource( CFRunLoopRef rl, CFRunLoopSourceRef source, CFStringRef mode ) = Booleantoolbox CFRunLoopAddSource( CFRunLoopRef rl, CFRunLoopSourceRef source, CFStringRef mode )toolbox CFRunLoopRemoveSource( CFRunLoopRef rl, CFRunLoopSourceRef source, CFStringRef mode )toolbox fn CFRunLoopContainsObserver( CFRunLoopRef rl, CFRunLoopObserverRef observer, CFStringRef mode ) = Booleantoolbox CFRunLoopAddObserver( CFRunLoopRef rl, CFRunLoopObserverRef observer, CFStringRef mode )toolbox CFRunLoopRemoveObserver( CFRunLoopRef rl, CFRunLoopObserverRef observer, CFStringRef mode )toolbox fn CFRunLoopContainsTimer( CFRunLoopRef rl, CFRunLoopTimerRef timer, CFStringRef mode ) = Booleantoolbox CFRunLoopAddTimer( CFRunLoopRef rl, CFRunLoopTimerRef timer, CFStringRef mode )toolbox CFRunLoopRemoveTimer( CFRunLoopRef rl, CFRunLoopTimerRef timer, CFStringRef mode )begin record CFRunLoopSourceContextdim as CFIndex       versiondim as pointer       infodim as pointer       retaindim as pointer       releasedim as CFStringRef   copyDescriptiondim as Boolean       equaldim as CFHashCode    hashdim as pointer       scheduledim as pointer       canceldim as pointer       performend record/*begin record CFRunLoopSourceContext1dim as CFIndex       versiondim as pointer       infodim as pointer       retaindim as pointer       releasedim as CFStringRef   copyDescriptiondim as Boolean       equaldim as CFHashCode    hashdim as mach_port_t (*getPort)(void                                                 *info)idim as pointer (*perform)(void *msg, CFIndex size, CFAllocatorRef allocator, void  *info)idim as HANDLE (*getPort)(void                                                      *info)idim as void (*perform)(void                                                        *info)iend record*/toolbox fn CFRunLoopSourceGetTypeID() = CFTypeIDtoolbox fn CFRunLoopSourceCreate( CFAllocatorRef allocator, CFIndex order, CFRunLoopSourceContext *context ) = CFRunLoopSourceReftoolbox fn CFRunLoopSourceGetOrder( CFRunLoopSourceRef source ) = CFIndextoolbox CFRunLoopSourceInvalidate( CFRunLoopSourceRef source )toolbox fn CFRunLoopSourceIsValid( CFRunLoopSourceRef source ) = Booleantoolbox CFRunLoopSourceGetContext( CFRunLoopSourceRef source, CFRunLoopSourceContext *context )toolbox CFRunLoopSourceSignal( CFRunLoopSourceRef source )begin record CFRunLoopObserverContextdim as CFIndex       versiondim as pointer       infodim as pointer       retaindim as pointer       releasedim as CFStringRef   copyDescriptionend record#define CFRunLoopObserverCallBack as pointertoolbox fn CFRunLoopObserverGetTypeID() = CFTypeIDtoolbox fn CFRunLoopObserverCreate( CFAllocatorRef allocator, CFOptionFlags activities, Boolean repeats, CFIndex order, CFRunLoopObserverCallBack callout, CFRunLoopObserverContext *context ) = CFRunLoopObserverReftoolbox fn CFRunLoopObserverGetActivities( CFRunLoopObserverRef observer ) = CFOptionFlagstoolbox fn CFRunLoopObserverDoesRepeat( CFRunLoopObserverRef observer ) = Booleantoolbox fn CFRunLoopObserverGetOrder( CFRunLoopObserverRef observer ) = CFIndextoolbox CFRunLoopObserverInvalidate( CFRunLoopObserverRef observer )toolbox fn CFRunLoopObserverIsValid( CFRunLoopObserverRef observer ) = Booleantoolbox CFRunLoopObserverGetContext( CFRunLoopObserverRef observer, CFRunLoopObserverContext *context )begin record CFRunLoopTimerContextdim as CFIndex       versiondim as pointer       infodim as pointer       retaindim as pointer       releasedim as CFStringRef   copyDescriptionend record#define CFRunLoopTimerCallBack as pointertoolbox fn CFRunLoopTimerGetTypeID() = CFTypeIDtoolbox fn CFRunLoopTimerCreate( CFAllocatorRef allocator, CFAbsoluteTime fireDate, CFTimeInterval interval, CFOptionFlags flags, CFIndex order, CFRunLoopTimerCallBack callout, CFRunLoopTimerContext *context ) = CFRunLoopTimerReftoolbox fn CFRunLoopTimerGetNextFireDate( CFRunLoopTimerRef timer ) = CFAbsoluteTimetoolbox CFRunLoopTimerSetNextFireDate( CFRunLoopTimerRef timer, CFAbsoluteTime fireDate )toolbox fn CFRunLoopTimerGetInterval( CFRunLoopTimerRef timer ) = CFTimeIntervaltoolbox fn CFRunLoopTimerDoesRepeat( CFRunLoopTimerRef timer ) = Booleantoolbox fn CFRunLoopTimerGetOrder( CFRunLoopTimerRef timer ) = CFIndextoolbox CFRunLoopTimerInvalidate( CFRunLoopTimerRef timer )toolbox fn CFRunLoopTimerIsValid( CFRunLoopTimerRef timer ) = Booleantoolbox CFRunLoopTimerGetContext( CFRunLoopTimerRef timer, CFRunLoopTimerContext *context )#endif// ndef _DEFINEDINCARBON