include "Tlbx Icons.incl"include "Tlbx Lists.incl"include "Tlbx CFString.incl"#if ndef _DEFINEDINCARBON_kControlDataBrowserPart = 24'~'1#define ControlButtonContentInfoPtr as ptr// controls.h'~'1#define PopupPrivateDataPtr as ptr #define PopupPrivateDataHandle as Handle#define ControlButtonGraphicAlignment as SInt16#define ControlButtonTextAlignment as SInt16#define ControlButtonTextPlacement as SInt16#define ControlUserPaneDrawUPP       as proc#define ControlUserPaneHitTestUPP    as proc#define ControlUserPaneTrackingUPP   as proc#define ControlUserPaneIdleUPP       as proc#define ControlUserPaneKeyDownUPP    as proc#define ControlUserPaneActivateUPP   as proc#define ControlUserPaneFocusUPP      as proc#define ControlUserPaneBackgroundUPP as proc#define ControlEditTextSelectionPtr  as ptr #define ControlEditTextValidationUPP as proc'~'1#define ControlFocusPart            as SInt16// Controls.h'~'1#define UniCharArrayOffset          as UInt32// TextCommon.h'~'1// Controls.h#define ControlSize as UInt16begin enum not output_kControlSizeTag   = _"size"_kControlSizeNormal = 0_kControlSizeSmall  = 1_kControlSizeLarge  = 2_kControlSizeMini   = 3_kControlFontMiniSystemFont = -5// >= OS X 10.3.9end enumbegin record ControlKinddim as OSType signaturedim as OSType kindend recordtoolbox fn GetControlKind(ControlRef inControl, ControlKind * outControlKind) = OSStatustoolbox fn SetUpControlTextColor( ControlRef inControl, SInt16 inDepth, Boolean isInColor ) = OSStatustoolbox SetControlPopupMenuID( ControlRef c, short menuID )toolbox fn GetControlPopupMenuID( ControlRef c ) = shorttoolbox SetControlPopupMenuHandle( ControlRef c, MenuRef popupMenu )toolbox fn GetControlPopupMenuHandle( ControlRef c) = MenuRef'~'1'~Carbon and PPC'~'1// Controls.htoolbox fn IsValidControlHandle(ControlRef theControl) = Booleantoolbox fn SetControlProperty ( ControlRef c, OSType propertyCreator, OSType propertyTag, UInt32 propertySize, ptr *propertyData ) = OSStatustoolbox fn GetControlProperty ( ControlRef c, OSType propertyCreator, OSType propertyTag, UInt32 bufferSize, UInt32 *actualSize, ptr *propertyBuffer ) = OSStatustoolbox fn GetControlPropertySize ( ControlRef c, OSType propertyCreator, OSType propertyTag, UInt32 *size ) = OSStatustoolbox fn RemoveControlProperty ( ControlRef c, OSType propertyCreator, OSType propertyTag ) = OSStatus'~'1toolbox fn GetBevelButtonMenuValue (ControlRef inButton,SInt16 * outValue) = OSErrtoolbox fn SetBevelButtonMenuValue (ControlRef inButton,SInt16 inValue) = OSErrtoolbox fn GetBevelButtonMenuHandle (ControlRef inButton,handle * outHandle) = OSErrtoolbox fn GetBevelButtonContentInfo (ControlRef inButton,ControlButtonContentInfoPtr outContent) = OSErrtoolbox fn SetBevelButtonContentInfo (ControlRef inButton,ControlButtonContentInfoPtr inContent) = OSErrtoolbox fn SetBevelButtonTransform (ControlRef inButton,IconTransformType transform) = OSErrtoolbox fn SetBevelButtonGraphicAlignment (ControlRef inButton,ControlButtonGraphicAlignment inAlign,SInt16 inHOffset,SInt16 inVOffset) = OSErrtoolbox fn SetBevelButtonTextAlignment (ControlRef inButton,ControlButtonTextAlignment inAlign,SInt16 inHOffset) = OSErrtoolbox fn SetBevelButtonTextPlacement (ControlRef inButton,ControlButtonTextPlacement inWhere) = OSErrtoolbox fn SetDisclosureTriangleLastValue( ControlRef inTabControl, SInt16 inValue ) = OSErr// _AVAILABLE MAC OSX VERSION 10.0 AN DLATERtoolbox fn GetImageWellContentInfo (ControlRef inButton,ControlButtonContentInfoPtr outContent) = OSErrtoolbox fn SetImageWellContentInfo (ControlRef inButton,ControlButtonContentInfoPtr inContent) = OSErrtoolbox fn SetImageWellTransform (ControlRef inButton,IconTransformType inTransform) = OSErrtoolbox fn GetTabContentRect (ControlRef inTabControl,Rect * outContentRect) = OSErrtoolbox fn SetTabEnabled (ControlRef inTabControl,SInt16 inTabToHilite,Boolean inEnabled) = OSErr'~'1// Controls.hbegin enum//  _kControlSizeNormal            = 0///  _kControlSizeSmall             = 1//  _kControlSizeLarge             = 2  _kControlSizeAuto              = 0xFFFFend enum'~'1// Appearance.hbegin enum                       _kThemeThumbPlain              = 0_kThemeThumbUpward             = 1_kThemeThumbDownward           = 2end enum'~'1begin enum_kControlClockHourDayPart       = 9_kControlClockMinuteMonthPart   = 10_kControlClockSecondYearPart    = 11_kControlClockAMPMPart          = 12_kControlDataBrowserDraggedPart = 25end enum'~Carbon#if carbonLib'~Bevel Buttonbegin enum not output//_kControlBevelButtonSmallBevelVariant  = 0//_kControlBevelButtonNormalBevelVariant = 1<<0//_kControlBevelButtonLargeBevelVariant  = 1<<1_kControlBevelButtonMenuOnRightVariant = 1<<2end enumbegin enum not output//_kControlBehaviorPushbutton      = 0//_kControlBehaviorToggles         = 0x0100//_kControlBehaviorSticky          = 0x0200_kControlBehaviorSingleValueMenu = 0//_kControlBehaviorMultiValueMenu  = 0x4000//_kControlBehaviorOffsetContents  = 0x8000end enumbegin enum not output_kControlBevelButtonMenuRefTag = _"mhnd"end enumbegin enum not output_kControlBevelButtonScaleIconTag = _"scal"end enumbegin enum not output_kControlBevelButtonOwnedMenuRefTag = _"omrf"_kControlBevelButtonKindTag         = _"bebk"end enum#define ControlBevelThickness As SInt16begin enum not output_kControlBevelButtonSmallBevel = 0_kControlBevelButtonNormalBevel = 1_kControlBevelButtonLargeBevel = 2end enum_kControlBevelButtonIsMultiValueMenuTag = _"mult"// OS X 10.3 or later#define ControlBevelButtonBehavior As SInt16#define ControlBevelButtonMenuBehavior As SInt16#define ControlBevelButtonMenuPlacement As SInt16begin enum// _kControlBevelButtonMenuOnBottom = 0// _kControlBevelButtonMenuOnRight = (1 << 2)end enum_kControlKindBevelButton        = _"bevl"toolbox fn CreateBevelButtonControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   CFStringRef title, Â   ControlBevelThickness thickness, Â   ControlBevelButtonBehavior behavior, Â   ControlButtonContentInfoPtr info, Â   SInt16 menuID, Â   ControlBevelButtonMenuBehavior menuBehavior, Â   ControlBevelButtonMenuPlacement menuPlacement, Â   ControlRef * outControl ) = OSStatus'~Chasing Arrows//_kControlCheckBoxAutoToggleProc    = 371_kControlChasingArrowsAnimatingTag = _"anim"_kControlKindChasingArrows      = _"carr"toolbox fn CreateChasingArrowsControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   ControlRef * outControl ) = OSStatus'~CheckBox_kControlKindCheckBox           = _"cbox"toolbox fn CreateCheckBoxControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   CFStringRef title, Â   SInt32 initialValue, Â   Boolean autoToggle, Â   ControlRef * outControl ) = OSStatus'~CheckGroupBox_kControlKindCheckGroupBox = _"cgrp"toolbox fn CreateCheckGroupBoxControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   CFStringRef title, Â   SInt32 initialValue, Â   Boolean primary, Â   Boolean autoToggle, Â   ControlRef * outControl ) = OSStatus'~Clockbegin enum//_kControlClockLongDateTag  = _"date"//_kControlClockFontStyleTag = _kControlFontStyleTag_kControlClockAnimatingTag = _"anim"end enum#define ControlClockType As UInt16begin enum_kControlClockTypeHourMinute = 0_kControlClockTypeHourMinuteSecond = 1_kControlClockTypeMonthDayYear = 2_kControlClockTypeMonthYear = 3end enum#define ControlClockFlags As UInt32begin enum_kControlClockFlagStandard = 0_kControlClockFlagDisplayOnly = 1_kControlClockFlagLive = 2// _kControlClockNoFlags = 0// _kControlClockIsDisplayOnly = 1// _kControlClockIsLive = 2end enum_kControlKindClock              = _"clck"toolbox fn CreateClockControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   ControlClockType clockType, Â   ControlClockFlags clockFlags, Â   ControlRef * outControl ) = OSStatus'~CreateCustomControl'~'1/*   This is defined in Tlbx Carbon WDEF.Incl but belongs here (IMO)   Bernie 29 July 2005*/// Controls.h/*Toolbox Fn CreateCustomControl (   WindowRef owningWindow, Â   const Rect * contBounds, Â   const ControlDefSpec * def, Â   Collection initData, Â   ControlRef * outControl ) = OSStatus*/'~'1'~Disclosure Buttonbegin enum not output_kControlDisclosureButtonClosed    = 0_kControlDisclosureButtonDisclosed = 1end enum_kControlKindDisclosureButton   = _"disb"toolbox fn CreateDisclosureButtonControl Â(  WindowRef inWindow, Â   const Rect * inBoundsRect, Â   SInt32 inValue, Â   Boolean inAutoToggles, Â   ControlRef * outControl ) = OSStatus'~Disclosure Triangle#define ControlDisclosureTriangleOrientation As UInt16begin enum not output_kControlDisclosureTrianglePointDefault = 0_kControlDisclosureTrianglePointRight = 1_kControlDisclosureTrianglePointLeft = 2end enum_kControlKindDisclosureTriangle = _"dist"toolbox fn CreateDisclosureTriangleControl Â(  WindowRef inWindow,  Â   const Rect * inBoundsRect,  Â   ControlDisclosureTriangleOrientation inOrientation,  Â   CFStringRef inTitle,  Â   SInt32 inInitialValue,  Â   Boolean inDrawTitle,  Â   Boolean inAutoToggles,  Â   ControlRef * outControl ) = OSStatus'~Edit Textbegin enum_kControlEditTextInlineInputProc = 276end enumbegin enum not output_kControlEditTextKeyScriptBehaviorTag    = _"kscr"//_kControlEditTextLockedTag               = _"lock"_kControlEditTextFixedTextTag            = _"ftxt"//_kControlEditTextValidationProcTag       = _"vali"_kControlEditTextInlinePreUpdateProcTag  = _"prup"_kControlEditTextInlinePostUpdateProcTag = _"poup"end enum_kControlKindEditText           = _"etxt"toolbox fn CreateEditTextControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   CFStringRef text, Â   Boolean isPassword, Â   Boolean useInlineInput, Â   const ControlFontStyleRec * style, Â   ControlRef * outControl ) = OSStatustoolbox fn NewControlEditTextValidationUPP (proc ControlEditTextValidationProcPtr ) = ControlEditTextValidationUPPtoolbox DisposeControlEditTextValidationUPP (ControlEditTextValidationUPP userUPP)'~Edit Unicode Text#define EditUnicodePostUpdateUPP as procbegin enum not output//_kControlEditTextSingleLineTag = _"sglc"/* data is a Boolean; indicates whether the control should always be single-line*/_kControlEditTextInsertTextBufferTag = _"intx"/* data is an array of char; get or set the control`s text as WorldScript-encoded text*/_kControlEditTextInsertCFStringRefTag = _"incf"/* data is a CFStringRef; get or set the control`s text as a CFStringRef. Caller should release CFString if getting.*/_kControlEditUnicodeTextPostUpdateProcTag = _"upup"end enumbegin enum not output//_kControlEditUnicodeTextProc         = 912_kControlEditUnicodeTextPasswordProc = 914end enumbegin enum not output_kControlKindEditUnicodeText = _"eutx"end enumtoolbox fn CreateEditUnicodeTextControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   CFStringRef text, Â   Boolean isPassword, Â   const ControlFontStyleRec * style, Â   ControlRef * outControl ) = OSStatus'~GroupBoxbegin enum not output//_kControlGroupBoxMenuHandleTag = _"mhan"_kControlGroupBoxMenuRefTag    = _"mhan"//_kControlGroupBoxFontStyleTag  = _kControlFontStyleTagend enum/*   * Passed data is a Rect.  Returns the full rectangle that content is   * drawn in (get only). This is slightly different than the content   * region, as it also includes the frame drawn around the content.   */_kControlGroupBoxFrameRectTag = _"frec"_kControlKindGroupBox      = _"grpb"toolbox fn CreateGroupBoxControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   CFStringRef title, Â   Boolean primary, Â   ControlRef * outControl ) = OSStatus'~Iconbegin enum not output_kControlIconRefProc        = 324_kControlIconRefNoTrackProc = 325end enumbegin enum not output_kControlIconResourceIDTag = _"ires"_kControlIconContentTag    = _"cont"end enum_kControlKindIcon               = _"icon"toolbox fn CreateIconControl Â(  WindowRef inWindow, Â   const Rect * inBoundsRect, Â   const ControlButtonContentInfo * inIconContent, Â   Boolean inDontTrack, Â   ControlRef * outControl ) = OSStatus'~Image Wellbegin enum not output//_kControlImageWellContentTag           = _"cont"//_kControlImageWellTransformTag         = _"tran"_kControlImageWellIsDragDestinationTag = _"drag"end enum_kControlKindImageWell          = _"well"toolbox fn CreateImageWellControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   const ControlButtonContentInfo * info, Â   ControlRef * outControl ) = OSStatus'~List Box_kControlKindListBox            = _"lbox"toolbox fn CreateListBoxControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   Boolean autoSize, Â   SInt16 numRows, Â   SInt16 numColumns, Â   Boolean horizScroll, Â   Boolean vertScroll, Â   SInt16 cellHeight, Â   SInt16 cellWidth, Â   Boolean hasGrowSpace, Â   const ListDefSpec * listDef, Â   ControlRef * outControl ) = OSStatus'~Little Arrows_kControlLittleArrowsIncrementValueTag = _"incr"_kControlKindLittleArrows       = _"larr"toolbox fn CreateLittleArrowsControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   SInt32 value, Â   SInt32 minimum, Â   SInt32 maximum, Â   SInt32 increment, Â   ControlRef * outControl ) = OSStatus'~Picturebegin enum not output_kControlPictureHandleTag = _"pich"end enum_kControlKindPicture            = _"pict"toolbox fn CreatePictureControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   const ControlButtonContentInfo * content, Â   Boolean dontTrack, Â   ControlRef * outControl ) = OSStatus'~Placard_kControlKindPlacard            = _"plac"toolbox fn CreatePlacardControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   ControlRef * outControl ) = OSStatus'~Popup Arrow#define ControlPopupArrowOrientation As UInt16begin enum not output_kControlPopupArrowOrientationEast  = 0_kControlPopupArrowOrientationWest  = 1_kControlPopupArrowOrientationNorth = 2_kControlPopupArrowOrientationSouth = 3end enum#define ControlPopupArrowSize As UInt16begin enum not output_kControlPopupArrowSizeNormal = 0_kControlPopupArrowSizeSmall  = 1end enum_kControlKindPopupArrow         = _"parr"toolbox fn CreatePopupArrowControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   ControlPopupArrowOrientation orientation, Â   ControlPopupArrowSize size, Â   ControlRef * outControl ) = OSStatus'~Popup Buttonbegin enum not output//_kControlPopupButtonMenuHandleTag = _"mhan"_kControlPopupButtonMenuRefTag    = _"mhan"//_kControlPopupButtonMenuIDTag     = _"mnid"end enumbegin enum not output//_kControlPopupButtonExtraHeightTag  = _"exht"_kControlPopupButtonOwnedMenuRefTag = _"omrf"end enumbegin enum not output_kControlPopupButtonCheckCurrentTag = _"chck"end enum_kControlKindPopupButton        = _"popb"toolbox fn CreatePopupButtonControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   CFStringRef title, Â   SInt16 menuID, Â   Boolean variableWidth, Â   SInt16 titleWidth, Â   SInt16 titleJustification, Â   Style titleStyle, Â   ControlRef * outControl ) = OSStatus'~Popup GroupBox_kControlKindPopupGroupBox = _"pgrp"toolbox fn CreatePopupGroupBoxControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   CFStringRef title, Â   Boolean primary, Â   SInt16 menuID, Â   Boolean variableWidth, Â   SInt16 titleWidth, Â   SInt16 titleJustification, Â   Style titleStyle, Â   ControlRef * outControl ) = OSStatus'~Progress Barbegin enum// _kControlProgressBarProc  = 80end enumbegin enum not output//_kControlProgressBarIndeterminateTag = _"inde"_kControlProgressBarAnimatingTag     = _"anim"end enum_kControlKindProgressBar        = _"prgb"toolbox fn CreateProgressBarControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   SInt32 value, Â   SInt32 minimum, Â   SInt32 maximum, Â   Boolean indeterminate, Â   ControlRef * outControl ) = OSStatus'~Push Button_kControlKindPushButton         = _"push"toolbox fn CreatePushButtonControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   CFStringRef title, Â   ControlRef * outControl ) = OSStatus'~Push Button With Icon#define ControlPushButtonIconAlignment As UInt16begin enum not output_kControlPushButtonIconOnLeft = 6_kControlPushButtonIconOnRight = 7end enum_kControlKindPushIconButton     = _"picn"toolbox fn CreatePushButtonWithIconControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   CFStringRef title, Â   ControlButtonContentInfo * icon, Â   ControlPushButtonIconAlignment iconAlignment, Â   ControlRef * outControl ) = OSStatus'~Radio Button_kControlKindRadioButton        = _"rdio"toolbox fn CreateRadioButtonControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   CFStringRef title, Â   SInt32 initialValue, Â   Boolean autoToggle, Â   ControlRef * outControl ) = OSStatus'~Radio Group_kControlKindRadioGroup         = _"rgrp"toolbox fn CreateRadioGroupControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   ControlRef * outControl ) = OSStatus'~Relevance Bar_kControlRelevanceBarProc = 81_kControlKindRelevanceBar       = _"relb"toolbox fn CreateRelevanceBarControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   SInt32 value, Â   SInt32 minimum, Â   SInt32 maximum, Â   ControlRef * outControl ) = OSStatus'~Round Buttonbegin enum not output_kControlRoundButtonContentTag = _"cont"//_kControlRoundButtonSizeTag    = _"size"end enum_kControlRoundButtonProc = (31 << 4)// #Define ControlRoundButtonSize As UInt16// _kControlRoundButtonNormalSize = _kControlSizeNormal// _kControlRoundButtonLargeSize = _kControlSizeLarge_kControlKindRoundButton        = _"rndb"toolbox fn CreateRoundButtonControl Â(  WindowRef inWindow, Â   const Rect * inBoundsRect, Â   ControlRoundButtonSize inSize, Â   ControlButtonContentInfo * inContent, Â   ControlRef * outControl ) = OSStatus'~Scroll Barbegin enum not output_kControlScrollBarShowsArrowsTag = _"arro"end enum'~'1// Controls.h#define ControlActionUPP As Pointer'~'1_kControlKindScrollBar          = _"sbar"toolbox fn CreateScrollBarControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   SInt32 value, Â   SInt32 minimum, Â   SInt32 maximum, Â   SInt32 viewSize, Â   Boolean liveTracking, Â   ControlActionUPP liveTrackingProc, Â   ControlRef * outControl ) = OSStatus'~Scrolling TextBoxbegin enum not output_kControlScrollTextBoxDelayBeforeAutoScrollTag  = _"stdl"_kControlScrollTextBoxDelayBetweenAutoScrollTag = _"scdl"_kControlScrollTextBoxAutoScrollAmountTag       = _"samt"_kControlScrollTextBoxContentsTag               = _"tres"_kControlScrollTextBoxAnimatingTag              = _"anim"end enum_kControlKindScrollingTextBox   = _"stbx"toolbox fn CreateScrollingTextBoxControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   SInt16 contentResID, Â   Boolean autoScroll, Â   UInt32 delayBeforeAutoScroll, Â   UInt32 delayBetweenAutoScroll, Â   UInt16 autoScrollAmount, Â   ControlRef * outControl ) = OSStatus'~Separator_kControlKindSeparator          = _"sepa"toolbox fn CreateSeparatorControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   ControlRef * outControl ) = OSStatus'~Slider#define ControlSliderOrientation As UInt16begin enum not output_kControlSliderPointsDownOrRight = 0_kControlSliderPointsUpOrLeft = 1_kControlSliderDoesNotPoint = 2end enum_kControlKindSlider             = _"sldr"toolbox fn CreateSliderControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   SInt32 value, Â   SInt32 minimum, Â   SInt32 maximum, Â   ControlSliderOrientation orientation, Â   UInt16 numTickMarks, Â   Boolean liveTracking, Â   ControlActionUPP liveTrackingProc, Â   ControlRef * outControl ) = OSStatus'~Static Textbegin enum not output_kControlStaticTextTruncTag = _"trun"end enum/*   * Used to get or set whether the control draws its text in multiple   * lines if the text is too wide for the control bounds. If false,   * then the control always draws the text in a single line. Data is   * of type Boolean. Available in Mac OS X 10.1 and later.   */_kControlStaticTextIsMultilineTag = _"stim"// {3/8/05}_kControlKindStaticText         = _"stxt"toolbox fn CreateStaticTextControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   CFStringRef text, Â   const ControlFontStyleRec * style, Â   ControlRef * outControl ) = OSStatus'~Tabsbegin enum_kControlTabImageContentTag = _"cont"end enumbegin enum not output//_kControlTabInfoVersionZero = 0_kControlTabInfoVersionOne  = 1end enumbegin record ControlTabInfoRecV1// {29/7/05}dim version     as SInt16dim iconSuiteID as SInt16dim name        as CFStringRefend record#endif#define ControlTabSize As UInt16begin enum not output_kControlTabSizeLarge = _kControlSizeNormal_kControlTabSizeSmall = _kControlSizeSmall_kControlTabSizeMini = _kControlSizeMini//  {3/8/05}end enum#define ControlTabDirection As UInt16begin enum not output_kControlTabDirectionNorth = 0_kControlTabDirectionSouth = 1_kControlTabDirectionEast  = 2_kControlTabDirectionWest  = 3end enumbegin record ControlTabEntry// {4/23/05} b304 per rpdim as pointer     icon  // pointer to ControlButtonContentInfodim as CFStringRef namedim as Boolean     enabled, padend record_kControlKindTabs               = _"tabs"toolbox fn CreateTabsControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   ControlTabSize size, Â   ControlTabDirection direction, Â   UInt16 numTabs, Â   const ControlTabEntry * tabArray, Â   ControlRef * outControl ) = OSStatus'~User Pane_kControlKindUserPane           = _"upan"toolbox fn CreateUserPaneControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   UInt32 features, Â   ControlRef * outControl ) = OSStatustoolbox DisposeControlUserPaneDrawUPP (ControlUserPaneDrawUPP userUPP)/*toolbox fn InvokeControlUserPaneTrackingUPP (ControlRef c,Point startPt,ControlActionUPP actionProc,ControlUserPaneTrackingUPP userUPP) = ControlPartCodetoolbox InvokeControlUserPaneIdleUPP (ControlRef c,ControlUserPaneIdleUPP userUPP)toolbox fn InvokeControlUserPaneKeyDownUPP (ControlRef c,SInt16 keyCode,SInt16 charCode,SInt16 modifiers,ControlUserPaneKeyDownUPP userUPP) = ControlPartCodetoolbox InvokeControlUserPaneActivateUPP (ControlRef c,Boolean activating,ControlUserPaneActivateUPP userUPP)toolbox fn InvokeControlUserPaneFocusUPP (ControlRef c,ControlFocusPart action,ControlUserPaneFocusUPP userUPP) = ControlPartCodetoolbox InvokeControlUserPaneBackgroundUPP (ControlRef c,ptr ControlBackgroundPtr ,ControlUserPaneBackgroundUPP userUPP)*/'~Window Header/*   * Passed data is a Boolean.  Set to true if the control is to draw   * as a list header.   */_kControlWindowHeaderIsListHeaderTag = _"islh"// {3/8/05}_kControlKindWindowHeader       = _"whed"toolbox fn CreateWindowHeaderControl Â(  WindowRef window, Â   const Rect * boundsRect, Â   Boolean isListHeader, Â   ControlRef * outControl ) = OSStatus#endif'~Data Browserinclude "Tlbx DragMgr.Incl"include "Tlbx MacHelp.Incl"#if def _DEFINEDINCARBONbegin enum not output_kControlKindDataBrowser = _"datb"end enumbegin enum not output_errDataBrowserNotConfigured        = -4970_errDataBrowserItemNotFound         = -4971_errDataBrowserItemNotAdded         = -4975_errDataBrowserPropertyNotFound     = -4972_errDataBrowserInvalidPropertyPart  = -4973_errDataBrowserInvalidPropertyData  = -4974_errDataBrowserPropertyNotSupported = -4979end enumbegin enum not output_kControlDataBrowserIncludesFrameAndFocusTag  = _"brdr"_kControlDataBrowserKeyFilterTag              = _kControlEditTextKeyFilterTag_kControlDataBrowserEditTextKeyFilterTag      = _kControlDataBrowserKeyFilterTag_kControlDataBrowserEditTextValidationProcTag = _kControlEditTextValidationProcTagend enum#define DataBrowserViewStyle as OSTypebegin enum not output_kDataBrowserNoView     = 0x3F3F3F3F_kDataBrowserListView   = _"lstv"_kDataBrowserColumnView = _"clmv"end enum#define DataBrowserSelectionFlags as UInt32begin enum not output_kDataBrowserDragSelect             = 1<<0_kDataBrowserSelectOnlyOne          = 1<<1_kDataBrowserResetSelection         = 1<<2_kDataBrowserCmdTogglesSelection    = 1<<3_kDataBrowserNoDisjointSelection    = 1<<4_kDataBrowserAlwaysExtendSelection  = 1<<5_kDataBrowserNeverEmptySelectionSet = 1<<6end enum#define DataBrowserSortOrder as UInt16begin enum not output_kDataBrowserOrderUndefined  = 0_kDataBrowserOrderIncreasing = 1_kDataBrowserOrderDecreasing = 2end enum#define DataBrowserItemID as UInt32begin enum not output_kDataBrowserNoItem = 0end enum#define DataBrowserItemState as UInt32begin enum not output_kDataBrowserItemNoState      = 0_kDataBrowserItemAnyState     = -1_kDataBrowserItemIsSelected   = 1<<0_kDataBrowserContainerIsOpen  = 1<<1_kDataBrowserItemIsDragTarget = 1<<2end enum#define DataBrowserRevealOptions as UInt8begin enum not output_kDataBrowserRevealOnly             = 0_kDataBrowserRevealAndCenterInView  = 1<<0_kDataBrowserRevealWithoutSelecting = 1<<1end enum#define DataBrowserSetOption as UInt32begin enum not output_kDataBrowserItemsAdd    = 0_kDataBrowserItemsAssign = 1_kDataBrowserItemsToggle = 2_kDataBrowserItemsRemove = 3end enum#define DataBrowserSelectionAnchorDirection as UInt32begin enum not output_kDataBrowserSelectionAnchorUp    = 0_kDataBrowserSelectionAnchorDown  = 1_kDataBrowserSelectionAnchorLeft  = 2_kDataBrowserSelectionAnchorRight = 3end enum#define DataBrowserEditCommand as UInt32begin enum not output_kDataBrowserEditMsgUndo      = _kHICommandUndo_kDataBrowserEditMsgRedo      = _kHICommandRedo_kDataBrowserEditMsgCut       = _kHICommandCut_kDataBrowserEditMsgCopy      = _kHICommandCopy_kDataBrowserEditMsgPaste     = _kHICommandPaste_kDataBrowserEditMsgClear     = _kHICommandClear_kDataBrowserEditMsgSelectAll = _kHICommandSelectAllend enum#define DataBrowserItemNotification as UInt32begin enum not output_kDataBrowserItemAdded            = 1_kDataBrowserItemRemoved          = 2_kDataBrowserEditStarted          = 3_kDataBrowserEditStopped          = 4_kDataBrowserItemSelected         = 5_kDataBrowserItemDeselected       = 6_kDataBrowserItemDoubleClicked    = 7_kDataBrowserContainerOpened      = 8_kDataBrowserContainerClosing     = 9_kDataBrowserContainerClosed      = 10_kDataBrowserContainerSorting     = 11_kDataBrowserContainerSorted      = 12_kDataBrowserUserToggledContainer = 16_kDataBrowserTargetChanged        = 15_kDataBrowserUserStateChanged     = 13_kDataBrowserSelectionSetChanged  = 14end enum/* 0-1023 reserved; >= 1024 for client use */#define DataBrowserPropertyID as UInt32begin enum not output_kDataBrowserItemNoProperty              = 0_kDataBrowserItemIsActiveProperty        = 1_kDataBrowserItemIsSelectableProperty    = 2_kDataBrowserItemIsEditableProperty      = 3_kDataBrowserItemIsContainerProperty     = 4_kDataBrowserContainerIsOpenableProperty = 5_kDataBrowserContainerIsClosableProperty = 6_kDataBrowserContainerIsSortableProperty = 7_kDataBrowserItemSelfIdentityProperty    = 8_kDataBrowserContainerAliasIDProperty    = 9_kDataBrowserColumnViewPreviewProperty   = 10_kDataBrowserItemParentContainerProperty = 11end enum#define DataBrowserPropertyType as OSTypebegin enum not output_kDataBrowserCustomType        = 0x3F3F3F3F_kDataBrowserIconType          = _"icnr"_kDataBrowserTextType          = _"text"_kDataBrowserDateTimeType      = _"date"_kDataBrowserSliderType        = _"sldr"_kDataBrowserCheckboxType      = _"chbx"_kDataBrowserProgressBarType   = _"prog"_kDataBrowserRelevanceRankType = _"rank"_kDataBrowserPopupMenuType     = _"menu"_kDataBrowserIconAndTextType   = _"ticn"end enum#define DataBrowserPropertyPart as OSTypebegin enum not output_kDataBrowserPropertyEnclosingPart     = 0_kDataBrowserPropertyContentPart       = _"----"_kDataBrowserPropertyDisclosurePart    = _"disc"_kDataBrowserPropertyTextPart          = _kDataBrowserTextType_kDataBrowserPropertyIconPart          = _kDataBrowserIconType_kDataBrowserPropertySliderPart        = _kDataBrowserSliderType_kDataBrowserPropertyCheckboxPart      = _kDataBrowserCheckboxType_kDataBrowserPropertyProgressBarPart   = _kDataBrowserProgressBarType_kDataBrowserPropertyRelevanceRankPart = _kDataBrowserRelevanceRankTypeend enum#define DataBrowserPropertyFlags as unsigned longbegin enum not output_kDataBrowserUniversalPropertyFlagsMask = 0xFF_kDataBrowserPropertyIsMutable          = 1<<0_kDataBrowserDefaultPropertyFlags       = 0<<0_kDataBrowserUniversalPropertyFlags     = _kDataBrowserUniversalPropertyFlagsMask_kDataBrowserPropertyIsEditable         = _kDataBrowserPropertyIsMutableend enumbegin enum not output_kDataBrowserPropertyFlagsOffset       = 8_kDataBrowserPropertyFlagsMask         = 0xFF<<_kDataBrowserPropertyFlagsOffset_kDataBrowserCheckboxTriState          = 1<<_kDataBrowserPropertyFlagsOffset_kDataBrowserDateTimeRelative          = 1<<_kDataBrowserPropertyFlagsOffset_kDataBrowserDateTimeDateOnly          = 1<<_kDataBrowserPropertyFlagsOffset+1_kDataBrowserDateTimeTimeOnly          = 1<<_kDataBrowserPropertyFlagsOffset+2_kDataBrowserDateTimeSecondsToo        = 1<<_kDataBrowserPropertyFlagsOffset+3_kDataBrowserSliderPlainThumb          = _kThemeThumbPlain<<_kDataBrowserPropertyFlagsOffset_kDataBrowserSliderUpwardThumb         = _kThemeThumbUpward<<_kDataBrowserPropertyFlagsOffset_kDataBrowserSliderDownwardThumb       = _kThemeThumbDownward<<_kDataBrowserPropertyFlagsOffset_kDataBrowserDoNotTruncateText         = 3<<_kDataBrowserPropertyFlagsOffset_kDataBrowserTruncateTextAtEnd         = 2<<_kDataBrowserPropertyFlagsOffset_kDataBrowserTruncateTextMiddle        = 0<<_kDataBrowserPropertyFlagsOffset_kDataBrowserTruncateTextAtStart       = 1<<_kDataBrowserPropertyFlagsOffset//  {16/2/06}/*   * This flag is only for use with columns of type   * kDataBrowserPopupMenuType. This flag indicates that the popup be   * drawn in a sleek buttonless fashion. The text will be drawn next   * to a popup glyph, and the whole cell will be clickable. Available   * on 10.4 and later.   */_kDataBrowserPopupMenuButtonless = ( 1 << _kDataBrowserPropertyFlagsOffset )/* kDataBrowserPopupMenuType*/_kDataBrowserPropertyModificationFlags = _kDataBrowserPropertyFlagsMask_kDataBrowserRelativeDateTime          = _kDataBrowserDateTimeRelativeend enumbegin enum not output_kDataBrowserViewSpecificFlagsOffset   = 16_kDataBrowserViewSpecificFlagsMask     = 0xFF<<_kDataBrowserViewSpecificFlagsOffset_kDataBrowserViewSpecificPropertyFlags = _kDataBrowserViewSpecificFlagsMaskend enumbegin enum not output_kDataBrowserClientPropertyFlagsOffset = 24_kDataBrowserClientPropertyFlagsMask   = 0xFF<<_kDataBrowserClientPropertyFlagsOffsetend enumbegin record DataBrowserPropertyDescdim propertyID    as DataBrowserPropertyIDdim propertyType  as DataBrowserPropertyTypedim propertyFlags as DataBrowserPropertyFlagsend record#define DataBrowserItemUPP     as proc#define DataBrowserItemDataRef as ptr//.long#define DataBrowserItemDataUPP as proc#define DataBrowserItemCompareUPP as proc#define DataBrowserAddDragItemUPP     as proc#define DataBrowserAcceptDragUPP      as proc#define DataBrowserReceiveDragUPP     as proc#define DataBrowserPostProcessDragUPP as proc#define DataBrowserGetContextualMenuUPP as proc#define DataBrowserSelectContextualMenuUPP as proc#define DataBrowserItemHelpContentUPP as proc#define DataBrowserDrawItemUPP        as proc#define DataBrowserEditItemUPP        as proc#define DataBrowserHitTestUPP         as proc#define DataBrowserTrackingUPP        as proc#define DataBrowserItemDragRgnUPP     as proc#define DataBrowserItemAcceptDragUPP  as proc#define DataBrowserItemReceiveDragUPP as proc#define DataBrowserItemNotificationUPP as procbegin enum not output_kDataBrowserLatestCallbacks = 0end enumbegin record v1Recdim itemDataCallback             as DataBrowserItemDataUPPdim itemCompareCallback          as DataBrowserItemCompareUPPdim itemNotificationCallback     as DataBrowserItemNotificationUPPdim addDragItemCallback          as DataBrowserAddDragItemUPPdim acceptDragCallback           as DataBrowserAcceptDragUPPdim receiveDragCallback          as DataBrowserReceiveDragUPPdim postProcessDragCallback      as DataBrowserPostProcessDragUPPdim itemHelpContentCallback      as DataBrowserItemHelpContentUPPdim getContextualMenuCallback    as DataBrowserGetContextualMenuUPPdim selectContextualMenuCallback as DataBrowserSelectContextualMenuUPPend recordbegin record URecdim v1 As V1Recend recordbegin record DataBrowserCallbacksdim version as UInt32dim u       as URecend record#define DataBrowserDragFlags      as unsigned long#define DataBrowserTrackingResult as SInt16begin enum not output_kDataBrowserContentHit   = 1_kDataBrowserNothingHit   = 0_kDataBrowserStopTracking = -1end enumbegin enum not output_kDataBrowserLatestCustomCallbacks = 0end enumbegin record v2Recdim drawItemCallback    as DataBrowserDrawItemUPPdim editTextCallback    as DataBrowserEditItemUPPdim hitTestCallback     as DataBrowserHitTestUPPdim trackingCallback    as DataBrowserTrackingUPPdim dragRegionCallback  as DataBrowserItemDragRgnUPPdim acceptDragCallback  as DataBrowserItemAcceptDragUPPdim receiveDragCallback as DataBrowserItemReceiveDragUPPend recordbegin record U2Recdim v1 As V2Recend recordbegin record DataBrowserCustomCallbacksdim version as UInt32dim u       as U2Recend record#define DataBrowserTableViewHiliteStyle as UInt32begin enum not output_kDataBrowserTableViewMinimalHilite = 0_kDataBrowserTableViewFillHilite = 1end enum#define DataBrowserTableViewPropertyFlags as UInt32begin enum not output_kDataBrowserTableViewSelectionColumn = 1<<_kDataBrowserViewSpecificFlagsOffsetend enum#define DataBrowserTableViewRowIndex    as UInt32#define DataBrowserTableViewColumnIndex as UInt32#define DataBrowserTableViewColumnID    as DataBrowserPropertyID#define DataBrowserTableViewColumnDesc  as DataBrowserPropertyDescbegin enum not output_kDataBrowserTableViewLastColumn = -1end enum#define DataBrowserListViewPropertyFlags as UInt32begin enum not output_kDataBrowserListViewMovableColumn      = 1<<_kDataBrowserViewSpecificFlagsOffset+1_kDataBrowserListViewSortableColumn     = 1<<_kDataBrowserViewSpecificFlagsOffset+2_kDataBrowserListViewSelectionColumn    = _kDataBrowserTableViewSelectionColumn//  {16/2/06}/** kDataBrowserListViewTypeSelectColumn marks a column as* type-selectable. If one or more of your list view columns are* marked as type-selectable, Data Browser will do type-selection for* you automatically. Data Browser applies the typing to the first* column (in the system direction) with this property flag. This* flag only intended for use with columns of type* kDataBrowserTextType, kDataBrowserIconAndTextType, and* kDataBrowserDateTimeType; if you set it for a column of another* type, the type-selection behavior is undefined. Turning on this* flag also causes Data Browser to gather all keyboard input via a* carbon event handler instead of relying on calls to* HandleControlKey; therefore, you will never see these keyboard* events come out of WaitNextEvent. Only available on 10.3 and later.*/_kDataBrowserListViewTypeSelectColumn           = 1 << (_kDataBrowserViewSpecificFlagsOffset + 3)/** Normally the text in a header button for a column of type* kDataBrowserIconAndTextType is aligned as though it has an icon* next to it even if no icon is specified for the header button; in* other words, space is reserved for an icon in the header button* even if no icon is displayed. However, this flag indicates that* space should not be reserved for an icon if no icon is provided* for the header button. This flag allows a client to justify the* left edge of the text in a header button to the left edge of the* icon in the cells beneath it. Available on 10.4 and later.*/_kDataBrowserListViewNoGapForIconInHeaderButton = 1 << (_kDataBrowserViewSpecificFlagsOffset + 4)_kDataBrowserListViewDefaultColumnFlags = _kDataBrowserListViewMovableColumn+_kDataBrowserListViewSortableColumnend enumbegin enum not output_kDataBrowserListViewLatestHeaderDesc = 0end enumbegin record DataBrowserListViewHeaderDescdim version        as UInt32dim minimumWidth   as UInt16dim maximumWidth   as UInt16dim titleOffset    as SInt16dim titleString    as CFStringRefdim initialOrder   as DataBrowserSortOrderdim btnFontStyle   as ControlFontStyleRecdim btnContentInfo as ControlButtonContentInfoend recordbegin record DataBrowserListViewColumnDescdim propertyDesc  as DataBrowserTableViewColumnDescdim headerBtnDesc as DataBrowserListViewHeaderDescend recordbegin enum not output_kDataBrowserListViewAppendColumn = _kDataBrowserTableViewLastColumnend enum// {3/8/05}/* *  Summary: *    Data Browser attributes *   *  Discussion: *    For use with DataBrowserChangeAttributes and *    DataBrowserGetAttributes. Available in Mac OS X 10.4 and later. */begin enum not output/*   * A constant with value zero; the lack of any attributes.   */_kDataBrowserAttributeNone = 0/*   * In Column View, this Data Browser is allowed to resize the owning   * window whenever necessary. This includes, but is not necessarily   * limited to, situations where column resize operations need more   * visible space in the window. If you turn this attribute on, your   * window must tolerate being resized behind your app's back. If your   * window needs to react to bounds changes, use a   * kEventWindowBoundsChanged event handler. If you need to constrain   * your window's minimum and maximum bounds, use   * kEventWindowGetMinimum/MaximumSize handlers, the   * SetWindowResizeLimits API, or something similar.   */_kDataBrowserAttributeColumnViewResizeWindow = (1 << 0)/*   * In List View, this Data Browser should draw alternating row   * background colors.   */_kDataBrowserAttributeListViewAlternatingRowColors = (1 << 1)/*   * In List View, this Data Browser should draw a vertical line   * between the columns.   */_kDataBrowserAttributeListViewDrawColumnDividers = (1 << 2)end enum/* *  DataBrowserChangeAttributes() *   *  Summary: *    Set the attributes for the given Data Browser. *   *  Mac OS X threading: *    Not thread safe *   *  Parameters: *     *    inDataBrowser: *      The Data Browser whose attributes to change. *     *    inAttributesToSet: *      The attributes to set. *     *    inAttributesToClear: *      The attributes to clear. *   *  Result: *    An operating system status code. *   *  Availability: *    Mac OS X:         in version 10.4 and later in Carbon.framework *    CarbonLib:        not available in CarbonLib 1.x, is available on Mac OS X version 10.4 and later *    Non-Carbon CFM:   not available */ toolbox fn DataBrowserChangeAttributes( ControlRef inDataBrowser, OptionBits inAttributesToSet, OptionBits inAttributesToClear ) = OSStatus// AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER/* *  DataBrowserGetAttributes() *   *  Summary: *    Returns the attributes of a given Data Browser. *   *  Mac OS X threading: *    Not thread safe *   *  Parameters: *     *    inDataBrowser: *      The Data Browser whose attributes to query. *     *    outAttributes: *      On exit, will contain the attributes of the Data Browser. This *      parameter cannot be NULL. *   *  Result: *    An operating system status code. *   *  Availability: *    Mac OS X:         in version 10.4 and later in Carbon.framework *    CarbonLib:        not available in CarbonLib 1.x, is available on Mac OS X version 10.4 and later *    Non-Carbon CFM:   not available */toolbox fn DataBrowserGetAttributes( ControlRef inDataBrowser, OptionBits * outAttributes ) = OSStatus// AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER// {3/8/05}/* *  Summary: *    DataBrowserMetric values *   *  Discussion: *    For use with DataBrowserSetMetric. */begin enum not output/*   * The content (icon, text, etc.) within a cell is drawn a certain   * amount in from the left & right edges of the cell. This metric   * governs the amount of inset.   */_kDataBrowserMetricCellContentInset = 1/*   * This metric controls the space between the icon and text within a   * column of type kDataBrowserIconAndTextType.   */_kDataBrowserMetricIconAndTextGap = 2/*   * In List View only, this metric is similar to   * kDataBrowserMetricCellContentInset, but it only affects the   * disclosure column and it only affects the side of the cell that   * displays the disclosure triangle. In other words, this metric is   * used instead of (not in addition to)   * DataBrowserMetricCellContentInset for one side of the disclosure   * column.   */_kDataBrowserMetricDisclosureColumnEdgeInset = 3/*   * In List View only, this metric controls the amount of space   * between the disclosure triangle and the cell`s content.   */_kDataBrowserMetricDisclosureTriangleAndContentGap = 4/*   * In List View only, this metric controls the amount of space in the   * disclosure column for each level of indentation in progressively   * deeper hierarchies of disclosed items.   */_kDataBrowserMetricDisclosureColumnPerDepthGap = 5_kDataBrowserMetricLast = _kDataBrowserMetricDisclosureColumnPerDepthGapend enum#define DataBrowserMetric as UInt32/* *  DataBrowserSetMetric() *   *  Summary: *    Sets a value for a specified Data Browser metric. *   *  Mac OS X threading: *    Not thread safe *   *  Parameters: *     *    inDataBrowser: *      The Data Browser instance whose metric is being changed. *     *    inMetric: *      The DataBrowserMetric whose value is being changed. *     *    inUseDefaultValue: *      A Boolean indicating whether you want the Data Browser instance *      to revert to the default value for the metric. If you pass *      true, inValue will be ignored and a suitable default value will *      be used. If you pass false, inValue will be used as the value *      of the metric. *     *    inValue: *      When you pass false for inUseDefaultValue, this parameter is *      the value to use for the metric. *   *  Result: *    An operating system status code. If the incoming ControlRef isn`t *    a Data Browser instance, or if the incoming metric isn`t known, *    this function will return paramErr. *   *  Availability: *    Mac OS X:         in version 10.4 and later in Carbon.framework *    CarbonLib:        not available in CarbonLib 1.x, is available on Mac OS X version 10.4 and later *    Non-Carbon CFM:   not available */ toolbox fn DataBrowserSetMetric( ControlRef inDataBrowser, DataBrowserMetric inMetric, Boolean inUseDefaultValue, double inValue ) = OSStatus// AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER;/* *  DataBrowserGetMetric() *   *  Summary: *    Gets the value for a specified Data Browser metric. *   *  Mac OS X threading: *    Not thread safe *   *  Parameters: *     *    inDataBrowser: *      The Data Browser instance whose metric value to get. *     *    inMetric: *      The DataBrowserMetric value to get. *     *    outUsingDefaultValue: *      On exit, this is a Boolean indicating whether the metric`s *      value is determined by Data Browser`s default values. You may *      pass NULL if you don`t need this information. *     *    outValue: *      On exit, this is the value of the metric. *   *  Result: *    An operating system status code. If the incoming ControlRef isn`t *    a Data Browser instance, or if the incoming metric isn`t known, *    this function will return paramErr. *   *  Availability: *    Mac OS X:         in version 10.4 and later in Carbon.framework *    CarbonLib:        not available in CarbonLib 1.x, is available on Mac OS X version 10.4 and later *    Non-Carbon CFM:   not available */toolbox fn DataBrowserGetMetric( ControlRef inDataBrowser, DataBrowserMetric inMetric, Boolean * outUsingDefaultValue, float * outValue ) = OSStatus // AVAILABLE_MAC_OS_X_VERSION_10_4_AND_LATER;toolbox fn SetAutomaticControlDragTrackingEnabledForWindow( WindowRef inWindow, Boolean inTracks ) = OSStatustoolbox fn NewDataBrowserItemUPP (proc DataBrowserItemProcPtr ) = DataBrowserItemUPPtoolbox DisposeDataBrowserItemUPP (DataBrowserItemUPP userUPP)toolbox InvokeDataBrowserItemUPP (DataBrowserItemID item,DataBrowserItemState state,long * clientData,DataBrowserItemUPP userUPP)toolbox fn CreateDataBrowserControl (WindowRef window,Rect * boundsRect,DataBrowserViewStyle style,ControlRef * outControl) = OSStatustoolbox fn GetDataBrowserViewStyle (ControlRef browser,DataBrowserViewStyle * style) = OSStatustoolbox fn SetDataBrowserViewStyle (ControlRef browser,DataBrowserViewStyle style) = OSStatustoolbox fn AddDataBrowserItems (ControlRef browser,DataBrowserItemID container,UInt32 numItems,DataBrowserItemID * items,DataBrowserPropertyID preSortProperty) = OSStatustoolbox fn RemoveDataBrowserItems (ControlRef browser,DataBrowserItemID container,UInt32 numItems,DataBrowserItemID * items,DataBrowserPropertyID preSortProperty) = OSStatustoolbox fn UpdateDataBrowserItems (ControlRef browser,DataBrowserItemID container,UInt32 numItems,DataBrowserItemID * items,DataBrowserPropertyID preSortProperty,DataBrowserPropertyID propertyID) = OSStatustoolbox fn EnableDataBrowserEditCommand (ControlRef browser,DataBrowserEditCommand command) = Booleantoolbox fn ExecuteDataBrowserEditCommand (ControlRef browser,DataBrowserEditCommand command) = OSStatustoolbox fn GetDataBrowserSelectionAnchor (ControlRef browser,DataBrowserItemID * first,DataBrowserItemID * last) = OSStatustoolbox fn MoveDataBrowserSelectionAnchor (ControlRef browser,DataBrowserSelectionAnchorDirection direction,Boolean extendSelection) = OSStatustoolbox fn OpenDataBrowserContainer (ControlRef browser,DataBrowserItemID container) = OSStatustoolbox fn CloseDataBrowserContainer (ControlRef browser,DataBrowserItemID container) = OSStatustoolbox fn SortDataBrowserContainer (ControlRef browser,DataBrowserItemID container,Boolean sortChildren) = OSStatustoolbox fn GetDataBrowserItems (ControlRef browser,DataBrowserItemID container,Boolean recurse,DataBrowserItemState state,Handle items) = OSStatustoolbox fn GetDataBrowserItemCount (ControlRef browser,DataBrowserItemID container,Boolean recurse,DataBrowserItemState state,UInt32 * numItems) = OSStatustoolbox fn ForEachDataBrowserItem (ControlRef browser,DataBrowserItemID container,Boolean recurse,DataBrowserItemState state,DataBrowserItemUPP callback,long * clientData) = OSStatustoolbox fn IsDataBrowserItemSelected (ControlRef browser,DataBrowserItemID item) = Booleantoolbox fn GetDataBrowserItemState (ControlRef browser,DataBrowserItemID item,DataBrowserItemState * state) = OSStatustoolbox fn RevealDataBrowserItem (ControlRef browser,DataBrowserItemID item,DataBrowserPropertyID propertyID,DataBrowserRevealOptions options) = OSStatustoolbox fn SetDataBrowserSelectedItems (ControlRef browser,UInt32 numItems,DataBrowserItemID * items,DataBrowserSetOption operation) = OSStatustoolbox fn SetDataBrowserUserState (ControlRef browser,CFDictionaryRef stateInfo) = OSStatustoolbox fn GetDataBrowserUserState (ControlRef browser,CFDictionaryRef * stateInfo) = OSStatustoolbox fn SetDataBrowserActiveItems (ControlRef browser,Boolean active) = OSStatustoolbox fn GetDataBrowserActiveItems (ControlRef browser,Boolean * active) = OSStatustoolbox fn SetDataBrowserScrollBarInset (ControlRef browser,Rect * insetRect) = OSStatustoolbox fn GetDataBrowserScrollBarInset (ControlRef browser,Rect * insetRect) = OSStatustoolbox fn SetDataBrowserTarget (ControlRef browser,DataBrowserItemID target) = OSStatustoolbox fn GetDataBrowserTarget (ControlRef browser,DataBrowserItemID * target) = OSStatustoolbox fn SetDataBrowserSortOrder (ControlRef browser,DataBrowserSortOrder order) = OSStatustoolbox fn GetDataBrowserSortOrder (ControlRef browser,DataBrowserSortOrder * order) = OSStatustoolbox fn SetDataBrowserScrollPosition (ControlRef browser,UInt32 top,UInt32 left) = OSStatustoolbox fn GetDataBrowserScrollPosition (ControlRef browser,UInt32 * top,UInt32 * left) = OSStatustoolbox fn SetDataBrowserHasScrollBars (ControlRef browser,Boolean horiz,Boolean vert) = OSStatustoolbox fn GetDataBrowserHasScrollBars (ControlRef browser,Boolean * horiz,Boolean * vert) = OSStatustoolbox fn SetDataBrowserSortProperty (ControlRef browser,DataBrowserPropertyID property) = OSStatustoolbox fn GetDataBrowserSortProperty (ControlRef browser,DataBrowserPropertyID * property) = OSStatustoolbox fn SetDataBrowserSelectionFlags (ControlRef browser,DataBrowserSelectionFlags selectionFlags) = OSStatustoolbox fn GetDataBrowserSelectionFlags (ControlRef browser,DataBrowserSelectionFlags * selectionFlags) = OSStatustoolbox fn SetDataBrowserPropertyFlags (ControlRef browser,DataBrowserPropertyID property,DataBrowserPropertyFlags flags) = OSStatustoolbox fn GetDataBrowserPropertyFlags (ControlRef browser,DataBrowserPropertyID property,DataBrowserPropertyFlags * flags) = OSStatustoolbox fn SetDataBrowserEditText (ControlRef browser,CFStringRef text) = OSStatustoolbox fn GetDataBrowserEditText (ControlRef browser,CFMutableStringRef text) = OSStatustoolbox fn SetDataBrowserEditItem (ControlRef browser,DataBrowserItemID item,DataBrowserPropertyID property) = OSStatustoolbox fn GetDataBrowserEditItem (ControlRef browser,DataBrowserItemID * item,DataBrowserPropertyID * property) = OSStatustoolbox fn GetDataBrowserItemPartBounds (ControlRef browser,DataBrowserItemID item,DataBrowserPropertyID property,DataBrowserPropertyPart part,Rect * bounds) = OSStatustoolbox fn SetDataBrowserItemDataIcon (DataBrowserItemDataRef itemData,IconRef theData) = OSStatustoolbox fn GetDataBrowserItemDataIcon (DataBrowserItemDataRef itemData,IconRef * theData) = OSStatustoolbox fn SetDataBrowserItemDataText (DataBrowserItemDataRef itemData,CFStringRef theData) = OSStatustoolbox fn GetDataBrowserItemDataText (DataBrowserItemDataRef itemData,CFStringRef * theData) = OSStatustoolbox fn SetDataBrowserItemDataValue (DataBrowserItemDataRef itemData,SInt32 theData) = OSStatustoolbox fn GetDataBrowserItemDataValue (DataBrowserItemDataRef itemData,SInt32 * theData) = OSStatustoolbox fn SetDataBrowserItemDataMinimum (DataBrowserItemDataRef itemData,SInt32 theData) = OSStatustoolbox fn GetDataBrowserItemDataMinimum (DataBrowserItemDataRef itemData,SInt32 * theData) = OSStatustoolbox fn SetDataBrowserItemDataMaximum (DataBrowserItemDataRef itemData,SInt32 theData) = OSStatustoolbox fn GetDataBrowserItemDataMaximum (DataBrowserItemDataRef itemData,SInt32 * theData) = OSStatustoolbox fn SetDataBrowserItemDataBooleanValue (DataBrowserItemDataRef itemData,Boolean theData) = OSStatustoolbox fn GetDataBrowserItemDataBooleanValue (DataBrowserItemDataRef itemData,Boolean * theData) = OSStatustoolbox fn SetDataBrowserItemDataMenuRef (DataBrowserItemDataRef itemData,MenuRef theData) = OSStatustoolbox fn GetDataBrowserItemDataMenuRef (DataBrowserItemDataRef itemData,MenuRef * theData) = OSStatustoolbox fn SetDataBrowserItemDataRGBColor (DataBrowserItemDataRef itemData,RGBColor * theData) = OSStatustoolbox fn GetDataBrowserItemDataRGBColor (DataBrowserItemDataRef itemData,RGBColor * theData) = OSStatustoolbox fn SetDataBrowserItemDataDrawState (DataBrowserItemDataRef itemData,ThemeDrawState theData) = OSStatustoolbox fn GetDataBrowserItemDataDrawState (DataBrowserItemDataRef itemData,ThemeDrawState * theData) = OSStatustoolbox fn SetDataBrowserItemDataButtonValue (DataBrowserItemDataRef itemData,ThemeButtonValue theData) = OSStatustoolbox fn GetDataBrowserItemDataButtonValue (DataBrowserItemDataRef itemData,ThemeButtonValue * theData) = OSStatustoolbox fn SetDataBrowserItemDataIconTransform (DataBrowserItemDataRef itemData,IconTransformType theData) = OSStatustoolbox fn GetDataBrowserItemDataIconTransform (DataBrowserItemDataRef itemData,IconTransformType * theData) = OSStatustoolbox fn SetDataBrowserItemDataDateTime (DataBrowserItemDataRef itemData,long theData) = OSStatustoolbox fn GetDataBrowserItemDataDateTime (DataBrowserItemDataRef itemData,long * theData) = OSStatustoolbox fn SetDataBrowserItemDataLongDateTime (DataBrowserItemDataRef itemData,LongDateTime * theData) = OSStatustoolbox fn GetDataBrowserItemDataLongDateTime (DataBrowserItemDataRef itemData,LongDateTime * theData) = OSStatustoolbox fn SetDataBrowserItemDataItemID (DataBrowserItemDataRef itemData,DataBrowserItemID theData) = OSStatustoolbox fn GetDataBrowserItemDataItemID (DataBrowserItemDataRef itemData,DataBrowserItemID * theData) = OSStatustoolbox fn GetDataBrowserItemDataProperty (DataBrowserItemDataRef itemData,DataBrowserPropertyID * theData) = OSStatustoolbox fn NewDataBrowserItemDataUPP (proc DataBrowserItemDataProcPtr ) = DataBrowserItemDataUPPtoolbox DisposeDataBrowserItemDataUPP (DataBrowserItemDataUPP userUPP)toolbox fn InvokeDataBrowserItemDataUPP (ControlRef browser,DataBrowserItemID item,DataBrowserPropertyID property,DataBrowserItemDataRef itemData,Boolean setValue,DataBrowserItemDataUPP userUPP) = OSStatustoolbox fn NewDataBrowserItemCompareUPP (proc DataBrowserItemCompareProcPtr ) = DataBrowserItemCompareUPPtoolbox DisposeDataBrowserItemCompareUPP (DataBrowserItemCompareUPP userUPP)toolbox fn InvokeDataBrowserItemCompareUPP (ControlRef browser,DataBrowserItemID itemOne,DataBrowserItemID itemTwo,DataBrowserPropertyID sortProperty,DataBrowserItemCompareUPP userUPP) = Booleantoolbox fn NewDataBrowserItemNotificationUPP (proc DataBrowserItemNotificationProcPtr ) = DataBrowserItemNotificationUPPtoolbox DisposeDataBrowserItemNotificationUPP (DataBrowserItemNotificationUPP userUPP)toolbox InvokeDataBrowserItemNotificationUPP (ControlRef browser,DataBrowserItemID item,DataBrowserItemNotification message,DataBrowserItemNotificationUPP userUPP)toolbox fn NewDataBrowserAddDragItemUPP (proc DataBrowserAddDragItemProcPtr ) = DataBrowserAddDragItemUPPtoolbox fn NewDataBrowserAcceptDragUPP (proc DataBrowserAcceptDragProcPtr ) = DataBrowserAcceptDragUPPtoolbox fn NewDataBrowserReceiveDragUPP (proc DataBrowserReceiveDragProcPtr ) = DataBrowserReceiveDragUPPtoolbox fn NewDataBrowserPostProcessDragUPP (proc DataBrowserPostProcessDragProcPtr ) = DataBrowserPostProcessDragUPPtoolbox DisposeDataBrowserAddDragItemUPP (DataBrowserAddDragItemUPP userUPP)toolbox DisposeDataBrowserAcceptDragUPP (DataBrowserAcceptDragUPP userUPP)toolbox DisposeDataBrowserReceiveDragUPP (DataBrowserReceiveDragUPP userUPP)toolbox DisposeDataBrowserPostProcessDragUPP (DataBrowserPostProcessDragUPP userUPP)toolbox fn InvokeDataBrowserAddDragItemUPP (ControlRef browser,DragReference theDrag,DataBrowserItemID item,ItemReference * itemRef,DataBrowserAddDragItemUPP userUPP) = Booleantoolbox fn InvokeDataBrowserAcceptDragUPP (ControlRef browser,DragReference theDrag,DataBrowserItemID item,DataBrowserAcceptDragUPP userUPP) = Booleantoolbox fn InvokeDataBrowserReceiveDragUPP (ControlRef browser,DragReference theDrag,DataBrowserItemID item,DataBrowserReceiveDragUPP userUPP) = Booleantoolbox InvokeDataBrowserPostProcessDragUPP (ControlRef browser,DragReference theDrag,OSStatus trackDragResult,DataBrowserPostProcessDragUPP userUPP)toolbox fn NewDataBrowserGetContextualMenuUPP (proc DataBrowserGetContextualMenuProcPtr ) = DataBrowserGetContextualMenuUPPtoolbox fn NewDataBrowserSelectContextualMenuUPP (proc DataBrowserSelectContextualMenuProcPtr ) = DataBrowserSelectContextualMenuUPPtoolbox DisposeDataBrowserGetContextualMenuUPP (DataBrowserGetContextualMenuUPP userUPP)toolbox DisposeDataBrowserSelectContextualMenuUPP (DataBrowserSelectContextualMenuUPP userUPP)toolbox InvokeDataBrowserGetContextualMenuUPP (ControlRef browser,MenuRef * menu,UInt32 * helpType,CFStringRef * helpItemString,AEDesc * selection,DataBrowserGetContextualMenuUPP userUPP)toolbox InvokeDataBrowserSelectContextualMenuUPP (ControlRef browser,MenuRef menu,UInt32 selectionType,SInt16 menuID,MenuItemIndex menuItem,DataBrowserSelectContextualMenuUPP userUPP)toolbox fn NewDataBrowserItemHelpContentUPP (proc DataBrowserItemHelpContentProcPtr ) = DataBrowserItemHelpContentUPPtoolbox DisposeDataBrowserItemHelpContentUPP (DataBrowserItemHelpContentUPP userUPP)toolbox InvokeDataBrowserItemHelpContentUPP (ControlRef broz,DataBrowserItemID it,DataBrowserPropertyID prop,HMContentRequest inReq,HMContentProvidedType * oCntntProv,ptr ioHelpCnt,DataBrowserItemHelpContentUPP uUPP)toolbox fn InitDataBrowserCallbacks (DataBrowserCallbacks * callbacks) = OSStatustoolbox fn GetDataBrowserCallbacks (ControlRef browser,DataBrowserCallbacks * callbacks) = OSStatustoolbox fn SetDataBrowserCallbacks (ControlRef browser,DataBrowserCallbacks * callbacks) = OSStatustoolbox fn NewDataBrowserDrawItemUPP (proc DataBrowserDrawItemProcPtr ) = DataBrowserDrawItemUPPtoolbox DisposeDataBrowserDrawItemUPP (DataBrowserDrawItemUPP userUPP)toolbox InvokeDataBrowserDrawItemUPP (ControlRef browser,DataBrowserItemID item,DataBrowserPropertyID property,DataBrowserItemState itemState,Rect * theRect,SInt16 gdDepth,Boolean colorDevice,DataBrowserDrawItemUPP userUPP)toolbox fn NewDataBrowserEditItemUPP (proc DataBrowserEditItemProcPtr ) = DataBrowserEditItemUPPtoolbox DisposeDataBrowserEditItemUPP (DataBrowserEditItemUPP userUPP)toolbox fn InvokeDataBrowserEditItemUPP (ControlRef browser,DataBrowserItemID item,DataBrowserPropertyID property,CFStringRef theString,Rect * maxEditTextRect,Boolean * shrinkToFit,DataBrowserEditItemUPP userUPP) = Booleantoolbox fn NewDataBrowserHitTestUPP (proc DataBrowserHitTestProcPtr ) = DataBrowserHitTestUPPtoolbox DisposeDataBrowserHitTestUPP (DataBrowserHitTestUPP userUPP)toolbox fn InvokeDataBrowserHitTestUPP (ControlRef browser,DataBrowserItemID itemID,DataBrowserPropertyID property,Rect * theRect,Rect * mouseRect,DataBrowserHitTestUPP userUPP) = Booleantoolbox fn NewDataBrowserTrackingUPP (proc DataBrowserTrackingProcPtr ) = DataBrowserTrackingUPPtoolbox DisposeDataBrowserTrackingUPP (DataBrowserTrackingUPP userUPP)toolbox fn InvokeDataBrowserTrackingUPP (ControlRef browser,DataBrowserItemID itemID,DataBrowserPropertyID property,Rect * theRect,Point startPt,EventModifiers modifiers,DataBrowserTrackingUPP userUPP) = DataBrowserTrackingResulttoolbox fn NewDataBrowserItemDragRgnUPP (proc DataBrowserItemDragRgnProcPtr ) = DataBrowserItemDragRgnUPPtoolbox DisposeDataBrowserItemDragRgnUPP (DataBrowserItemDragRgnUPP userUPP)toolbox InvokeDataBrowserItemDragRgnUPP (ControlRef browser,DataBrowserItemID itemID,DataBrowserPropertyID property,Rect * theRect,RgnHandle dragRgn,DataBrowserItemDragRgnUPP userUPP)toolbox fn NewDataBrowserItemAcceptDragUPP (proc DataBrowserItemAcceptDragProcPtr ) = DataBrowserItemAcceptDragUPPtoolbox DisposeDataBrowserItemAcceptDragUPP (DataBrowserItemAcceptDragUPP userUPP)toolbox fn InvokeDataBrowserItemAcceptDragUPP (ControlRef browser,DataBrowserItemID itemID,DataBrowserPropertyID property,Rect * theRect,DragReference theDrag,DataBrowserItemAcceptDragUPP userUPP) = DataBrowserDragFlagstoolbox fn NewDataBrowserItemReceiveDragUPP (proc DataBrowserItemReceiveDragProcPtr ) = DataBrowserItemReceiveDragUPPtoolbox DisposeDataBrowserItemReceiveDragUPP (DataBrowserItemReceiveDragUPP userUPP)toolbox fn InvokeDataBrowserItemReceiveDragUPP (ControlRef browser,DataBrowserItemID itemID,DataBrowserPropertyID property,DataBrowserDragFlags dragFlags,DragReference theDrag,DataBrowserItemReceiveDragUPP userUPP) = Booleantoolbox fn InitDataBrowserCustomCallbacks (DataBrowserCustomCallbacks * callbacks) = OSStatustoolbox fn GetDataBrowserCustomCallbacks (ControlRef browser,DataBrowserCustomCallbacks * callbacks) = OSStatustoolbox fn SetDataBrowserCustomCallbacks (ControlRef browser,DataBrowserCustomCallbacks * callbacks) = OSStatustoolbox fn RemoveDataBrowserTableViewColumn (ControlRef browser,DataBrowserTableViewColumnID column) = OSStatustoolbox fn GetDataBrowserTableViewColumnCount (ControlRef browser,UInt32 * numColumns) = OSStatustoolbox fn SetDataBrowserTableViewHiliteStyle (ControlRef browser,DataBrowserTableViewHiliteStyle hiliteStyle) = OSStatustoolbox fn GetDataBrowserTableViewHiliteStyle (ControlRef browser,DataBrowserTableViewHiliteStyle * hiliteStyle) = OSStatustoolbox fn SetDataBrowserTableViewRowHeight (ControlRef browser,UInt16 height) = OSStatustoolbox fn GetDataBrowserTableViewRowHeight (ControlRef browser,UInt16 * height) = OSStatustoolbox fn SetDataBrowserTableViewColumnWidth (ControlRef browser,UInt16 width) = OSStatustoolbox fn GetDataBrowserTableViewColumnWidth (ControlRef browser,UInt16 * width) = OSStatustoolbox fn SetDataBrowserTableViewItemRowHeight (ControlRef browser,DataBrowserItemID item,UInt16 height) = OSStatustoolbox fn GetDataBrowserTableViewItemRowHeight (ControlRef browser,DataBrowserItemID item,UInt16 * height) = OSStatustoolbox fn SetDataBrowserTableViewNamedColumnWidth (ControlRef browser,DataBrowserTableViewColumnID column,UInt16 width) = OSStatustoolbox fn GetDataBrowserTableViewNamedColumnWidth (ControlRef browser,DataBrowserTableViewColumnID column,UInt16 * width) = OSStatustoolbox fn SetDataBrowserTableViewGeometry (ControlRef browser,Boolean variableWidthColumns,Boolean variableHeightRows) = OSStatustoolbox fn GetDataBrowserTableViewGeometry (ControlRef browser,Boolean * variableWidthColumns,Boolean * variableHeightRows) = OSStatustoolbox fn GetDataBrowserTableViewItemID (ControlRef browser,DataBrowserTableViewRowIndex row,DataBrowserItemID * item) = OSStatustoolbox fn SetDataBrowserTableViewItemRow (ControlRef browser,DataBrowserItemID item,DataBrowserTableViewRowIndex row) = OSStatustoolbox fn GetDataBrowserTableViewItemRow (ControlRef browser,DataBrowserItemID item,DataBrowserTableViewRowIndex * row) = OSStatustoolbox fn SetDataBrowserTableViewColumnPosition (ControlRef browser,DataBrowserTableViewColumnID column,DataBrowserTableViewColumnIndex position) = OSStatustoolbox fn GetDataBrowserTableViewColumnPosition (ControlRef browser,DataBrowserTableViewColumnID column,DataBrowserTableViewColumnIndex * position) = OSStatustoolbox fn GetDataBrowserTableViewColumnProperty (ControlRef browser,DataBrowserTableViewColumnIndex column,DataBrowserTableViewColumnID * property) = OSStatustoolbox fn AutoSizeDataBrowserListViewColumns (ControlRef browser) = OSStatustoolbox fn AddDataBrowserListViewColumn (ControlRef browser,DataBrowserListViewColumnDesc * columnDesc,DataBrowserTableViewColumnIndex position) = OSStatustoolbox fn GetDataBrowserColumnViewPath (ControlRef browser,Handle path) = OSStatustoolbox fn GetDataBrowserColumnViewPathLength (ControlRef browser,UInt32 * pathLength) = OSStatustoolbox fn SetDataBrowserColumnViewPath (ControlRef browser,UInt32 length,DataBrowserItemID * path) = OSStatustoolbox fn SetDataBrowserColumnViewDisplayType (ControlRef browser,DataBrowserPropertyType propertyType) = OSStatustoolbox fn GetDataBrowserColumnViewDisplayType (ControlRef browser,DataBrowserPropertyType * propertyType) = OSStatustoolbox fn NewDataBrowserItemNotificationWithItemUPP (proc DataBrowserItemNotificationWithItemProcPtr ) = proctoolbox InvokeDataBrowserItemNotificationWithItemUPP (ControlRef browser,DataBrowserItemID item,DataBrowserItemNotification message,DataBrowserItemDataRef itemData,proc DataBrowserItemNotificationWithItemUPP )toolbox DisposeDataBrowserItemNotificationWithItemUPP (proc DataBrowserItemNotificationWithItemUPP )toolbox fn CopyDataBrowserEditText (ControlRef browser,CFStringRef * text) = OSStatustoolbox fn GetDataBrowserListViewHeaderDesc (ControlRef browser,DataBrowserTableViewColumnID column,DataBrowserListViewHeaderDesc * desc) = OSStatustoolbox fn SetDataBrowserListViewHeaderDesc (ControlRef browser,DataBrowserTableViewColumnID column,DataBrowserListViewHeaderDesc * desc) = OSStatustoolbox fn SetDataBrowserListViewHeaderBtnHeight (ControlRef browser,UInt16 height) = OSStatustoolbox fn GetDataBrowserListViewHeaderBtnHeight (ControlRef browser,UInt16 * height) = OSStatustoolbox fn SetDataBrowserListViewUsePlainBackground (ControlRef browser,Boolean usePlainBackground) = OSStatustoolbox fn GetDataBrowserListViewUsePlainBackground (ControlRef browser,Boolean * usePlainBackground) = OSStatustoolbox fn SetDataBrowserListViewDisclosureColumn (ControlRef browser,DataBrowserTableViewColumnID column,Boolean expandableRows) = OSStatustoolbox fn GetDataBrowserListViewDisclosureColumn (ControlRef browser,DataBrowserTableViewColumnID * column,Boolean * expandableRows) = OSStatustoolbox fn NewEditUnicodePostUpdateUPP (proc EditUnicodePostUpdateProcPtr ) = EditUnicodePostUpdateUPPtoolbox DisposeEditUnicodePostUpdateUPP (EditUnicodePostUpdateUPP userUPP)toolbox fn InvokeEditUnicodePostUpdateUPP (handle uniText,UniCharCount uniTextLength,UniCharArrayOffset iStartOffset,UniCharArrayOffset iEndOffset,long * refcon,EditUnicodePostUpdateUPP userUPP) = Booleanbegin enum not output_inLabel      = _kControlLabelPart_inMenu       = _kControlMenuPart_inTriangle   = _kControlTrianglePart//_inButton     = _kControlButtonPart//_inCheckBox   = _kControlCheckBoxPart//_inUpButton   = _kControlUpButtonPart//_inDownButton = _kControlDownButtonPart//_inPageUp     = _kControlPageUpPart//_inPageDown   = _kControlPageDownPartend enum#endif