/*   bw 20090630*//* File: CarbonCore/DateTimeUtils.h  Contains: International Date and Time Interfaces (previously in TextUtils)  Version: CarbonCore-783~134  Copyright: © 1994-2006 by Apple Computer, Inc., all rights reserved.  Bugs?: For bug reports, consult the following page on the World Wide Web:  http://developer.apple.com/bugreporter/ */include "Tlbx MoreFilesX.incl"// contains defs from UTCUtils.h#if ndef _DEFINEDINCARBON/* Here are the current routine names and the translations to the older forms. Please use the newer forms in all new code and migrate the older names out of existing code as maintainance permits.  New Name Old Name(s)  DateString IUDatePString IUDateString  InitDateCache LongDateString IULDateString LongTimeString IULTimeString StringToDate String2Date StringToTime  TimeString IUTimeString IUTimePString LongDateToSeconds LongDate2Secs LongSecondsToDate LongSecs2Date DateToSeconds Date2Secs SecondsToDate Secs2Date Carbon only supports the new names. The old names are undefined for Carbon targets. This is true for C, Assembly and Pascal.  InterfaceLib always has exported the old names. For C macros have been defined to allow the use of the new names. For Pascal and Assembly using the new names will result in link errors.  */#define ToggleResults as SInt16begin enum/* Toggle results */_toggleUndefined  = 0_toggleOK         = 1_toggleBadField   = 2_toggleBadDelta   = 3_toggleBadChar    = 4_toggleUnknown    = 5_toggleBadNum     = 6_toggleOutOfRange = 7 /*synonym for toggleErr3*/_toggleErr3       = 7_toggleErr4       = 8_toggleErr5       = 9end enumbegin enum/* Date equates */_smallDateBit      = 31 /*Restrict valid date/time to range of Time global*/_togChar12HourBit  = 30 /*If toggling hour by chari accept hours 1..12 only*/_togCharZCycleBit  = 29 /*Modifier for togChar12HourBit: accept hours 0..11 only*/_togDelta12HourBit = 28 /*If toggling hour up/downi restrict to 12-hour range (am/pm)*/_genCdevRangeBit   = 27 /*Restrict date/time to range used by genl CDEV*/_validDateFields   = -1//_maxDateField      = 10end enum/*begin enum_eraMask        = 0x0001_yearMask       = 0x0002_monthMask      = 0x0004_dayMask        = 0x0008_hourMask       = 0x0010_minuteMask     = 0x0020_secondMask     = 0x0040_dayOfWeekMask  = 0x0080_dayOfYearMask  = 0x0100_weekOfYearMask = 0x0200_pmMask         = 0x0400*///_dateStdMask    = 0x007F /*default for ValidDate flags and ToggleDate TogglePB.togFlags*///end enum#define LongDateField as SInt8begin enum_eraField        = 0_yearField       = 1_monthField      = 2_dayField        = 3_hourField       = 4_minuteField     = 5_secondField     = 6_dayOfWeekField  = 7_dayOfYearField  = 8_weekOfYearField = 9_pmField         = 10_res1Field       = 11_res2Field       = 12_res3Field       = 13end enum//#define DateForm as SInt8begin enum_shortDate  = 0_longDate   = 1_abbrevDate = 2end enumbegin enum/* StringToDate status values */_fatalDateTime     = 0x8000 /* StringToDate and String2Time mask to a fatal error */_longDateFound     = 1 /* StringToDate mask to long date found */_leftOverChars     = 2 /* StringToDate & Time mask to warn of left over characters */_sepNotIntlSep     = 4 /* StringToDate & Time mask to warn of non-standard separators */_fieldOrderNotIntl = 8 /* StringToDate & Time mask to warn of non-standard field order */_extraneousStrings = 16 /* StringToDate & Time mask to warn of unparsable strings in text */_tooManySeps       = 32 /* StringToDate & Time mask to warn of too many separators */_sepNotConsistent  = 64 /* StringToDate & Time mask to warn of inconsistent separators */_tokenErr          = 0x8100 /* StringToDate & Time mask for _"tokenizer err encountered" */_cantReadUtilities = 0x8200_dateTimeNotFound  = 0x8400_dateTimeInvalid   = 0x8800end enum#define StringToDateStatus as short#define String2DateStatus as StringToDateStatusbegin record DateCacheRecorddim as short  hidden[254]/* only for temporary use */end record#define DateCachePtr as DateCacheRecord/*begin record DateTimeRecdim as short  yeardim as short  monthdim as short  daydim as short  hourdim as short  minutedim as short  seconddim as short  dayOfWeekend record*///#define LongDateTime as SInt64/*#if TARGET_RT_BIG_ENDIANbegin record LongDateCvthldim as UInt32 lHighdim as UInt32 lLowend recordbegin record LongDateCvt {dim as SInt64 cdim as LongDateCvthl hlend record#elsebegin record LongDateCvthldim as UInt32 lLowdim as UInt32 lHighend recordbegin record LongDateCvt {dim as SInt64 cdim as LongDateCvthl hlend record#endif// TARGET_RT_BIG_ENDIAN*//*union LongDateRec {  struct {    short               era;    short               year;    short               month;    short               day;    short               hour;    short               minute;    short               second;    short               dayOfWeek;    short               dayOfYear;    short               weekOfYear;    short               pm;    short               res1;    short               res2;    short               res3;  }                       ld;  short               list[14];  struct {    short               eraAlt;    DateTimeRec         oldDate;  }                       od;};typedef union LongDateRec               LongDateRec;*/#define DateDelta as SInt8begin record TogglePBdim as long     togFlags/*caller normally sets low word to dateStdMask=$7F*/dim as ResType  amChars/*from 'itl0', but uppercased*/dim as ResType  pmChars/*from 'itl0', but uppercased*/dim as long     reserved[3]end record/* Conversion utilities between CF and Carbon time types. *//* * UCConvertUTCDateTimeToCFAbsoluteTime() *  * Discussion: * Use UCConvertUTCDateTimeToCFAbsoluteTime to convert from a * UTCDDateTime to a CFAbsoluteTime. Remember that the epoch for * UTCDateTime is January 1, 1904 while the epoch for CFAbsoluteTime * is January 1, 2001. *  * Parameters: *  * iUTCDate: * A pointer to a UTCDateTime struct that represents the time you * wish to convert from. *  * oCFTime: * A pointer to a CFAbsoluteTime. On successful return, this will * contain the converted time from the input time type. *  * Result: * A result code indicating whether or not conversion was successful. *  * Availability: * Mac OS X: in version 10.2 and later in CoreServices.framework * CarbonLib: not available in CarbonLib 1.x * Non-Carbon CFM: not available*/toolbox fn UCConvertUTCDateTimeToCFAbsoluteTime( const UTCDateTime * iUTCDate, CFAbsoluteTime * oCFTime ) = OSStatus// AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER;/* * UCConvertSecondsToCFAbsoluteTime() *  * Discussion: * Use UCConvertSecondsToCFAbsoluteTime to convert from the normal * seconds representation of time to a CFAbsoluteTime. Remember that * the epoch for seconds is January 1, 1904 while the epoch for * CFAbsoluteTime is January 1, 2001. *  * Parameters: *  * iSeconds: * A UInt32 value that represents the time you wish to convert * from. *  * oCFTime: * A pointer to a CFAbsoluteTime. On successful return, this will * contain the converted time from the input time type. *  * Result: * A result code indicating whether or not conversion was successful. *  * Availability: * Mac OS X: in version 10.2 and later in CoreServices.framework * CarbonLib: not available in CarbonLib 1.x * Non-Carbon CFM: not available*/toolbox fn UCConvertSecondsToCFAbsoluteTime( UInt32 iSeconds, CFAbsoluteTime * oCFTime ) = OSStatus// AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER;/* * UCConvertLongDateTimeToCFAbsoluteTime() *  * Discussion: * Use UCConvertLongDateTimeToCFAbsoluteTime to convert from a * LongDateTime to a CFAbsoluteTime. Remember that the epoch for * LongDateTime is January 1, 1904 while the epoch for * CFAbsoluteTime is January 1, 2001. *  * Parameters: *  * iLongTime: * A LongDateTime value that represents the time you wish to * convert from. *  * oCFTime: * A pointer to a CFAbsoluteTime. On successful return, this will * contain the converted time from the input time type. *  * Result: * A result code indicating whether or not conversion was successful. *  * Availability: * Mac OS X: in version 10.2 and later in CoreServices.framework * CarbonLib: not available in CarbonLib 1.x * Non-Carbon CFM: not available*/toolbox fn UCConvertLongDateTimeToCFAbsoluteTime( LongDateTime iLongTime, CFAbsoluteTime * oCFTime ) = OSStatus// AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER;/* * UCConvertCFAbsoluteTimeToUTCDateTime() *  * Discussion: * Use UCConvertCFAbsoluteTimeToUTCDateTime to convert from a * CFAbsoluteTime to a UTCDateTime. Remember that the epoch for * UTCDateTime is January 1, 1904 while the epoch for CFAbsoluteTime * is January 1, 2001. *  * Parameters: *  * iCFTime: * A CFAbsoluteTime value that represents the time you wish to * convert from. *  * oUTCDate: * A pointer to a UTCDateTime. On successful return, this will * contain the converted time from the CFAbsoluteTime input. *  * Result: * A result code indicating whether or not conversion was successful. *  * Availability: * Mac OS X: in version 10.2 and later in CoreServices.framework * CarbonLib: not available in CarbonLib 1.x * Non-Carbon CFM: not available*/toolbox fn UCConvertCFAbsoluteTimeToUTCDateTime( CFAbsoluteTime iCFTime, UTCDateTime * oUTCDate ) = OSStatus// AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER;/* * UCConvertCFAbsoluteTimeToSeconds() *  * Discussion: * Use UCConvertCFAbsoluteTimeToSeconds to convert from a * CFAbsoluteTime to a UInt32 representation of seconds. Remember * that the epoch for seconds is January 1, 1904 while the epoch for * CFAbsoluteTime is January 1, 2001. *  * Parameters: *  * iCFTime: * A CFAbsoluteTime value that represents the time you wish to * convert from. *  * oSeconds: * A pointer to a UInt32. On successful return, this will contain * the converted time from the CFAbsoluteTime input. *  * Result: * A result code indicating whether or not conversion was successful. *  * Availability: * Mac OS X: in version 10.2 and later in CoreServices.framework * CarbonLib: not available in CarbonLib 1.x * Non-Carbon CFM: not available*/toolbox fn UCConvertCFAbsoluteTimeToSeconds( CFAbsoluteTime iCFTime, UInt32 * oSeconds ) = OSStatus// AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER;/* * UCConvertCFAbsoluteTimeToLongDateTime() *  * Discussion: * Use UCConvertCFAbsoluteTimeToLongDateTime to convert from a * CFAbsoluteTime to a LongDateTime. Remember that the epoch for * LongDateTime is January 1, 1904 while the epoch for * CFAbsoluteTime is January 1, 2001. *  * Parameters: *  * iCFTime: * A CFAbsoluteTime value that represents the time you wish to * convert from. *  * oLongDate: * A pointer to a LongDateTime. On successful return, this will * contain the converted time from the CFAbsoluteTime input. *  * Result: * A result code indicating whether or not conversion was successful. *  * Availability: * Mac OS X: in version 10.2 and later in CoreServices.framework * CarbonLib: not available in CarbonLib 1.x * Non-Carbon CFM: not available*/toolbox fn UCConvertCFAbsoluteTimeToLongDateTime( CFAbsoluteTime iCFTime, LongDateTime * oLongDate ) = OSStatus// AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER;/* These routine are available in Carbon with their new name*//* * DateString() *** DEPRECATED *** *  * Deprecated: * use CFDateFormatterCreateStringWithDate instead *  * Discussion: * This function is no longer recommended. Please use * CFDateFormatterCreateStringWithDate instead. *  * Availability: * Mac OS X: in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.3 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: not available*///toolbox DateString( SInt32 dateTime, DateForm longFlag, Str255 result, Handle intlHandle )// AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3;/* * TimeString() *** DEPRECATED *** *  * Deprecated: * use CFDateFormatterCreateStringWithDate instead *  * Discussion: * This function is no longer recommended. Please use * CFDateFormatterCreateStringWithDate instead. *  * Availability: * Mac OS X: in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.3 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: not available*///toolbox TimeString( SInt32 dateTime, Boolean wantSeconds, Str255 result, Handle intlHandle )// AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3;/* * LongDateString() *** DEPRECATED *** *  * Deprecated: * use CFDateFormatterCreateStringWithDate instead *  * Discussion: * This function is no longer recommended. Please use * CFDateFormatterCreateStringWithDate instead. *  * Availability: * Mac OS X: in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.3 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: not available*///toolbox LongDateString( const LongDateTime * dateTime, DateForm longFlag, Str255 result, Handle intlHandle )// AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3;/* * LongTimeString() *** DEPRECATED *** *  * Deprecated: * use CFDateFormatterCreateStringWithDate instead *  * Discussion: * This function is no longer recommended. Please use * CFDateFormatterCreateStringWithDate instead. *  * Availability: * Mac OS X: in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.3 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: not available*///toolbox LongTimeString( const LongDateTime * dateTime, Boolean wantSeconds, Str255 result, Handle intlHandle )// AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3;/* These routine are available in Carbon and InterfaceLib with their new name*//* * InitDateCache() *** DEPRECATED *** *  * Deprecated: * No longer needed on MacOS X. *  * Discussion: * This function is obsolate. *  * Availability: * Mac OS X: in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.3 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later*///toolbox fn InitDateCache( DateCachePtr theCache ) = OSErr//  AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3;/* * StringToDate() *** DEPRECATED *** *  * Deprecated: * use CFDateFormatterCreateDateFromString instead *  * Discussion: * This function is no longer recommended. Please use * CFDateFormatterCreateDateFromString instead. *  * Availability: * Mac OS X: in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.3 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later*/toolbox fn StringToDate( Ptr textPtr, SInt32 textLen, DateCachePtr theCache, SInt32 * lengthUsed, LongDateRec * dateTime ) = StringToDateStatus// AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3;/* * StringToTime() *** DEPRECATED *** *  * Deprecated: * use CFDateFormatterCreateDateFromString instead *  * Discussion: * This function is no longer recommended. Please use * CFDateFormatterCreateDateFromString instead. *  * Availability: * Mac OS X: in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.3 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later*/toolbox fn StringToTime( Ptr textPtr, SInt32 textLen, DateCachePtr theCache, SInt32 * lengthUsed, LongDateRec * dateTime ) = StringToDateStatus// AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3;/* * LongDateToSeconds() *** DEPRECATED *** *  * Deprecated: * use CFCalendar instead. *  * Discussion: * This function is no longer recommended. Please use CFCalendar * instead. *  * Availability: * Mac OS X: in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.3 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later*///toolbox LongDateToSeconds( const LongDateRec * lDate, LongDateTime * lSecs )// AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3;/* * LongSecondsToDate() *** DEPRECATED *** *  * Deprecated: * use CFCalendar instead. *  * Discussion: * This function is no longer recommended. Please use CFCalendar * instead. *  * Availability: * Mac OS X: in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.3 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later*///toolbox LongSecondsToDate( const LongDateTime * lSecs, LongDateRec * lDate )// AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3;/* * ToggleDate() *** DEPRECATED *** *  * Deprecated: * use CFCalendar instead. *  * Discussion: * This function is no longer recommended. Please use CFCalendar * instead. *  * Availability: * Mac OS X: in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.3 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later*/toolbox fn ToggleDate( LongDateTime * lSecs, LongDateField field, DateDelta delta, short ch, const TogglePB * params ) = ToggleResults// AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3;/* * ValidDate() *** DEPRECATED *** *  * Deprecated: * use CFCalendar instead. *  * Discussion: * This function is no longer recommended. Please use CFCalendar * instead. *  * Availability: * Mac OS X: in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.3 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later*/toolbox fn ValidDate( const LongDateRec * vDate, long flags, LongDateTime * newSecs ) = short// AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3;/* * ReadDateTime() *** DEPRECATED *** *  * Deprecated: * use CFAbsoluteTimeGetCurrent instead. *  * Discussion: * This function is no longer recommended. Please use * CFAbsoluteTimeGetCurrent instead. *  * Availability: * Mac OS X: in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.3 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later*///toolbox fn ReadDateTime( unsigned long * datetime ) = OSErr//  AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3;/* * GetDateTime() *** DEPRECATED *** *  * Deprecated: * use CFAbsoluteTimeGetCurrent instead. *  * Discussion: * This function is no longer recommended. Please use * CFAbsoluteTimeGetCurrent instead. *  * Availability: * Mac OS X: in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.3 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later*///toolbox GetDateTime( unsigned long * secs )//  AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3;/* * SetDateTime() *** DEPRECATED *** *  * Deprecated: * deprecated it without replacement *  * Discussion: * This function is no longer recommended. One has to be root on * MacOSX to set. This is done through other means on OS X *  * Availability: * Mac OS X: in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.3 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later*///toolbox fn SetDateTime( unsigned long datetime ) = OSErr//  AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3;/* * SetTime() *** DEPRECATED *** *  * Deprecated: * deprecated it without replacement *  * Discussion: * This function is no longer recommended. One has to be root on * MacOSX to set. This is done through other means on OS X *  * Availability: * Mac OS X: in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.3 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later*///toolbox SetTime( const DateTimeRec * d )//  AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3;/* * GetTime() *** DEPRECATED *** *  * Deprecated: * use CFAbsoluteTimeGetCurrent instead. *  * Discussion: * This function is no longer recommended. Please use * CFAbsoluteTimeGetCurrent instead. *  * Availability: * Mac OS X: in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.3 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later*///toolbox GetTime( DateTimeRec * d )//  AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3;/* * DateToSeconds() *** DEPRECATED *** *  * Deprecated: * use CFCalendar instead. *  * Discussion: * This function is no longer recommended. Please use CFCalendar * instead. *  * Availability: * Mac OS X: in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.3 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later*///toolbox DateToSeconds( const DateTimeRec * d, unsigned long * secs )// AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3;/* * SecondsToDate() *** DEPRECATED *** *  * Deprecated: * use CFCalendar instead. *  * Discussion: * This function is no longer recommended. Please use CFCalendar * instead. *  * Availability: * Mac OS X: in version 10.0 and later in CoreServices.framework [32-bit only] but deprecated in 10.3 * CarbonLib: in CarbonLib 1.0 and later * Non-Carbon CFM: in InterfaceLib 7.1 and later*///toolbox SecondsToDate( unsigned long secs, DateTimeRec * d )// AVAILABLE_MAC_OS_X_VERSION_10_0_AND_LATER_BUT_DEPRECATED_IN_MAC_OS_X_VERSION_10_3;/* These routine are available in InterfaceLib using their old name. Macros allow using the new names in all source code.  @deprecated use CFDateFormatter instead.*//* * IUDateString() *** DEPRECATED *** *  * Availability: * Mac OS X: not available [32-bit only] but deprecated in 10.3 * CarbonLib: not available * Non-Carbon CFM: in InterfaceLib 7.1 and later*//* * IUTimeString() *** DEPRECATED *** *  * Availability: * Mac OS X: not available [32-bit only] but deprecated in 10.3 * CarbonLib: not available * Non-Carbon CFM: in InterfaceLib 7.1 and later*//* * IUDatePString() *** DEPRECATED *** *  * Availability: * Mac OS X: not available [32-bit only] but deprecated in 10.3 * CarbonLib: not available * Non-Carbon CFM: in InterfaceLib 7.1 and later*//* * IUTimePString() *** DEPRECATED *** *  * Availability: * Mac OS X: not available [32-bit only] but deprecated in 10.3 * CarbonLib: not available * Non-Carbon CFM: in InterfaceLib 7.1 and later*//* * IULDateString() *** DEPRECATED *** *  * Availability: * Mac OS X: not available [32-bit only] but deprecated in 10.3 * CarbonLib: not available * Non-Carbon CFM: in InterfaceLib 7.1 and later*//* * IULTimeString() *** DEPRECATED *** *  * Availability: * Mac OS X: not available [32-bit only] but deprecated in 10.3 * CarbonLib: not available * Non-Carbon CFM: in InterfaceLib 7.1 and later*/// IUDatePString( dateTime, longFlag, result, intlHandle)// IUTimePString(dateTime, wantSeconds, result, intlHandle)// IULDateString(dateTime, longFlag, result, intlHandle)// IULTimeString(dateTime, wantSeconds, result, intlHandle)// StringToDate(textPtr, textLen, theCache, lengthUsed, dateTime)// StringToTime(textPtr, textLen, theCache, lengthUsed, dateTime)/* * iudatestring() *  * Availability: * Mac OS X: not available * CarbonLib: not available * Non-Carbon CFM: in InterfaceLib 7.1 and later*//* * iudatepstring() *  * Availability: * Mac OS X: not available * CarbonLib: not available * Non-Carbon CFM: in InterfaceLib 7.1 and later*//* * iutimestring() *  * Availability: * Mac OS X: not available * CarbonLib: not available * Non-Carbon CFM: in InterfaceLib 7.1 and later*//* * iutimepstring() *  * Availability: * Mac OS X: not available * CarbonLib: not available * Non-Carbon CFM: in InterfaceLib 7.1 and later*//* * iuldatestring() *  * Availability: * Mac OS X: not available * CarbonLib: not available * Non-Carbon CFM: in InterfaceLib 7.1 and later*//* * iultimestring() *  * Availability: * Mac OS X: not available * CarbonLib: not available * Non-Carbon CFM: in InterfaceLib 7.1 and later*/#endif// ndef _DEFINEDINCARBON