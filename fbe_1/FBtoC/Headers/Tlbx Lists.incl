/* edited for FBtoC    {23/12/06} RP*/#if def _DEFINEDINCARBON// last mod  RP     29 October 2005// part of Lists.h       bw 30 July 2005'~Data Types#define Cell        as Point#define ListDefType as UInt32#define ListRef     as Handle // to ListRec#define ListHandle  as ListRef  // {28/10/05 RP}'~Constantsbegin enum// ListRec.listFlags bits_lDoHAutoscrollBit  = 0_lDoVAutoscrollBit  = 1_lDrawingModeOffBit = 3end enumbegin enum// ListRec.listFlags masks//_lDoHAutoscroll  = 1//_lDoVAutoscroll  = 2_lDrawingModeOff = 8end enum#if ndef _kListDefStandardTextTypebegin enum_kListDefProcPtr          = 0_kListDefUserProcType     = _kListDefProcPtr_kListDefStandardTextType = 1_kListDefStandardIconType = 2end enum#endifbegin enum// ListRec.selFlags bits_lOnlyOneBit     = 7_lExtendDragBit  = 6_lNoDisjointBit  = 5_lNoExtendBit    = 4_lNoRectBit      = 3_lUseSenseBit    = 2_lNoNilHiliteBit = 1end enum#if ndef _lOnlyOnebegin enum// ListRec.selFlags masks_lOnlyOne     = -128_lExtendDrag  = 64_lNoDisjoint  = 32_lNoExtend    = 16_lNoRect      = 8_lUseSense    = 4_lNoNilHilite = 2end enum#endif#if ndef _lInitMsgbegin enum// LDEF messages_lInitMsg   = 0_lDrawMsg   = 1_lHiliteMsg = 2_lCloseMsg  = 3end enum#endif'~Recordsbegin record ListRec// ------Carbon usage:---------dim rView        as Rect// Get/SetListViewBoundsdim port         as ptr// ptr to CGrafPort  // Get/SetListPortdim indent       as Point// Get/SetListCellIndentdim cellSize     as Point// Get/SetListCellSizedim visible      as Rect// GetListVisibleCellsdim vScroll      as ControlRef// GetListVerticalScrollBardim hScroll      as ControlRef// GetListHorizontalScrollBardim selFlags     as SInt8// Get/SetListSelectionFlagsdim lActive      as Boolean// Activate, GetListActivedim lReserved    as SInt8// not supported in Carbondim listFlags    as SInt8// Get/SetListFlagsdim clikTime     as long// Get/SetListClickTimedim clikLoc      as Point// GetListClickLocationdim mouseLoc     as Point// GetListMouseLocationdim lClickLoop   as Proc// Get/SetListClickLoopdim lastClick    as Point// SetListLastClickdim refCon       as long// Get/SetListRefCondim listDefProc  as Handle// not supported in Carbondim userHandle   as Handle// Get/SetListUserHandledim dataBounds   as Rect// GetListDataBoundsdim cells        as Handle// LGet/SetCelldim maxIndex     as short// LGet/SetCell//dim cellArray[0] as short;0// LGet/SetCelldim cellArray[-1] as short // LGet/SetCellend record/*Begin Record StandardIconListCellDataRecDim As Handle iconHandleDim As short fontDim As short faceDim As short sizeDim As Str255 nameEnd Record*/#define ListDefUPP as procbegin record uListDefUPPdim as ListDefUPP  userProc end recordbegin record ListDefSpecdim defType as ListDefTypedim u       as uListDefUPPend record'~Toolbox functionstoolbox fn NewListSearchUPP( ptr ListSearchProcPtr ) = proctoolbox fn NewListClickLoopUPP( ptr ListClickLoopProcPtr ) = proctoolbox fn NewListDefUPP( ptr ListDefProcPtr ) = proctoolbox DisposeListSearchUPP( proc ListSearchUPP )toolbox fn InvokeListClickLoopUPP(  proc ListClickLoopUPP ) = Boolean `0x4E90toolbox InvokeListDefUPP( short lMessage, Boolean lSelect, Rect * listRect, Cell lCell, short lDataOffset, short lDataLen, handle lHandle, proc lDefUPP )toolbox fn CreateCustomList( Rect * rView, Rect * dataBounds, Point cellSize, ListDefSpec * theSpec, WindowRef theWindow, Boolean drawIt, Boolean hasGrow, Boolean scrollHoriz, Boolean scrollVert, handle * outList ) = OSStatus'~Toolbox calls already defined#if ndef _typeApplSignaturetoolbox fn LNew( Rect * rView, Rect * dataBounds, Point cSize, short theProc, WindowRef theWindow, Boolean drawIt, Boolean hasGrow, Boolean scrollHoriz, Boolean scrollVert ) = handletoolbox LDispose( handle lHandle ) toolbox fn LAddColumn( short count, short colNum, handle lHandle ) = short toolbox fn LAddRow( short count, short rowNum, handle lHandle ) = short toolbox LDelColumn( short count, short colNum, handle lHandle ) toolbox LDelRow( short count, short rowNum, handle lHandle ) toolbox fn LGetSelect( Boolean nextflag, Point * theCell, handle lHandle ) = Boolean toolbox fn LLastClick( handle lHandle ) = Point toolbox fn LNextCell( Boolean hNext, Boolean vNext, Point * theCell, handle lHandle ) = Booleantoolbox fn LSearch( long * dataPtr, short dataLen, proc searchProc, Point * theCell, handle lHandle ) = Boolean toolbox LSize( short listWidth, short listHeight, handle lHandle ) toolbox LSetDrawingMode( Boolean drawIt, handle lHandle ) toolbox LScroll( short dCols, short dRows, handle lHandle )toolbox LAutoScroll( handle lHandle ) toolbox LUpdate( RgnHandle theRgn, handle lHandle ) toolbox LActivate( Boolean act, handle lHandle ) toolbox LCellSize( Point cSize, handle lHandle ) toolbox fn LClick( Point pt, EventModifiers modifiers, handle lHandle ) = Boolean toolbox LAddToCell( long * dataPtr, short dataLen, Point theCell, handle lHandle ) toolbox LClrCell( Point theCell, handle lHandle ) toolbox LGetCell( long * dataPtr, short * dataLen, Point theCell, handle lHandle )toolbox LRect( Rect * cellRect, Point theCell, handle lHandle ) toolbox LSetCell( long * dataPtr, short dataLen, Point theCell, handle lHandle ) toolbox LSetSelect( Boolean setIt, Cell Point, handle lHandle ) toolbox LDraw( Point theCell, handle lHandle ) toolbox LGetCellDataLocation( short * offset, short * length, Point theCell,handle lHandle ) #endif'~Toolbox calls available in Carbon onlytoolbox fn RegisterListDefinition( SInt16 inResID, ptr inDefSpec ) = OSStatus// Getterstoolbox fn GetListViewBounds( ListRef list, Rect * view) = ptrtoolbox fn GetListPort( ListRef list ) = CGrafPtrtoolbox fn GetListCellIndent( ListRef list, Point * indent ) = ptrtoolbox fn GetListCellSize( ListRef list, Point * size) = ptrtoolbox fn GetListVisibleCells( ListRef list, Rect * visible ) = ptrtoolbox fn GetListVerticalScrollBar( ListRef list ) = ControlReftoolbox fn GetListHorizontalScrollBar( ListRef list ) = ControlReftoolbox fn GetListActive( ListRef list ) = Booleantoolbox fn GetListClickTime( ListRef list ) = SInt32toolbox fn GetListClickLocation( ListRef list, Point * click) = ptrtoolbox fn GetListMouseLocation( ListRef list, Point * mouse) = ptrtoolbox fn GetListClickLoop( ListRef list ) = proctoolbox fn GetListRefCon( ListRef list ) = SInt32toolbox fn GetListDefinition( ListRef list ) = Handletoolbox fn GetListUserHandle( ListRef list ) = Handletoolbox fn GetListDataBounds( ListRef list,  Rect * bounds) = ptrtoolbox fn GetListDataHandle( ListRef list ) = Handletoolbox fn GetListFlags( ListRef list ) = UInt32toolbox fn GetListSelectionFlags( ListRef list ) = UInt32// Setters toolbox SetListViewBounds( ListRef list, Rect * view )toolbox SetListPort( ListRef list, CGrafPtr port )toolbox SetListCellIndent( ListRef list, Point * indent )toolbox SetListClickTime( ListRef list, SInt32 time )toolbox SetListClickLoop( ListRef list, proc clickLoop )toolbox SetListLastClick( ListRef list, Point * lastClick )toolbox SetListRefCon( ListRef list, SInt32 refCon )toolbox SetListUserHandle( ListRef list, Handle userHandle )toolbox SetListFlags( ListRef list, UInt32 listFlags )toolbox SetListSelectionFlags( ListRef list, UInt32 selectionFlags )#endif