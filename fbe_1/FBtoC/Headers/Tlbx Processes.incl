/*edited for FBtoC {23/12/06} RP*/#if def _DEFINEDINCARBON// MacTypes.h/* moved to Tlbx MacTypes.incl   20090806begin record ProcessSerialNumberdim as unsigned long highLongOfPSN, lowLongOfPSNend record*/// Processes.hbegin record AppParametersdim theMsgEvent as EventRecorddim eventRefCon as unsigned longdim messageLength as unsigned longend recordbegin enum_kQuitBeforeNormalTimeMask = 1_kQuitAtNormalTimeMask = 2_kQuitBeforeFBAsQuitMask = 4_kQuitBeforeShellQuitsMask = 8_kQuitBeforeTerminatorAppQuitsMask = 16_kQuitNeverMask = 32_kQuitOptionsMask = 0x7F_kQuitNotQuitDuringInstallMask = 0x0100_kQuitNotQuitDuringLogoutMask = 0x0200end enum//#define AppParametersPtr as ^AppParametersbegin record ProcessInfoRecdim processInfoLength as unsigned longdim processName as ptr// was Str255dim processNumber as ProcessSerialNumberdim processType as unsigned longdim processSignature as OSTypedim processMode as unsigned longdim processLocation as Ptrdim processSize as unsigned longdim processFreeMem as unsigned longdim processLauncher as ProcessSerialNumberdim processLaunchDate as unsigned longdim processActiveTime as unsigned longdim processAppSpec as ptr// to FSSpec // was FSSpecPtrend recordbegin record ProcessInfoExtendedRecdim processInfoLength as unsigned longdim processName as Ptr'StringPtrdim processNumber as ProcessSerialNumberdim processType as unsigned longdim processSignature as OSTypedim processMode as unsigned longdim processLocation as Ptrdim processSize as unsigned longdim processFreeMem as unsigned longdim processLauncher as ProcessSerialNumberdim processLaunchDate as unsigned longdim processActiveTime as unsigned longdim processAppSpec as Ptr'FSSpecPtrdim processTempMemTotal as unsigned longdim processPurgeableTempMemTotal as unsigned longend record//#Define ProcessInfoExtendedRecPtr as ^ProcessInfoExtendedRec#define LaunchFlags as shortbegin record LaunchParamBlockRecdim reserved1 as unsigned longdim reserved2 as unsigned shortdim launchBlockID as unsigned shortdim launchEPBLength as unsigned longdim launchFileFlags as unsigned shortdim launchControlFlags as LaunchFlagsdim launchAppSpec as ptr///^FSSpecPtrdim launchProcessSN as ProcessSerialNumberdim launchPreferredSize as unsigned longdim launchMinimumSize as unsigned longdim launchAvailableSize as unsigned longdim launchAppParameters as ptr///^AppParametersPtrend record//#define LaunchPBPtr as ^LaunchParamBlockRecbegin record SizeResourceRecdim flags as unsigned shortdim preferredHeapSize as unsigned longdim minimumHeapSize as unsigned longend record//#Define SizeResourceRecPtr as ^SizeResourceRec//#Define SizeResourceRecHandle as ^^SizeResourceRec// TextCommon.h#define TextEncoding as UInt32// MacApplication.htoolbox fn GetApplicationTextEncoding = TextEncodingtoolbox fn GetApplicationScript = ScriptCode// Processes.htoolbox fn GetCurrentProcess(ProcessSerialNumber * PSN) = OSErrtoolbox fn LaunchApplication(LaunchParamBlockRec * lpb ) = OSErrtoolbox fn GetFrontProcess(ProcessSerialNumber *PSN) = OSErrtoolbox fn GetNextProcess(ProcessSerialNumber *PSN) = OSErrtoolbox fn GetProcessInformation(ProcessSerialNumber *PSN,ProcessInfoRec *info) = OSErrtoolbox fn SetFrontProcess(ProcessSerialNumber *PSN) = OSErrtoolbox fn WakeUpProcess(ProcessSerialNumber *PSN) = OSErrtoolbox fn SameProcess(ProcessSerialNumber *PSN1,ProcessSerialNumber *PSN2,Boolean *result) = OSErrtoolbox fn ShowHideProcess(ProcessSerialNumber *PSN, Boolean visible) = OSErrtoolbox fn GetProcessBundleLocation( const ProcessSerialNumber *psn, FSRef *location) = OSStatus#endif