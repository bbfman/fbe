//#if def _DEFINEDINCARBON#define SndChannelPtr as pointerbegin record ModRefdim modNumber as unsigned shortdim modInit   as longend recordbegin record SndCommanddim cmd    as unsigned shortdim param1 as shortdim param2 as longend recordbegin record SndListResourcedim format          as shortdim numModifiers    as shortdim modifierPart[0] as ModRefdim numCommands     as shortdim commandPart[0]  as SndCommanddim dataPart[0]     as unsigned charend record#define SndListHandle as Handle' to SndListResourcebegin record SPBdim inRefNum          as long /*reference number of sound input device*/dim count             as unsigned long /*number of bytes to record*/dim milliseconds      as unsigned long /*number of milliseconds to record*/dim bufferLength      as unsigned long /*length of buffer in bytes*/dim bufferPtr         as Ptr /*buffer to store sound data in*/dim completionRoutine as proc'SICompletionUPP   /*completion routine*/dim interruptRoutine  as proc'SIInterruptUPP    /*interrupt routine*/dim userLong          as long /*user-defined field*/dim error             as OSErr /*error*/dim unused1           as long /*reserved - must be zero*/end record#define SPBPtr as pointer'^SPBbegin record SoundComponentDatadim flags       as longdim format      as OSTypedim numChannels as shortdim sampleSize  as shortdim sampleRate  as Fixed'UnsignedFixeddim sampleCount as longdim buffer      as Ptr'* Bytedim reserved    as longend record#Define SoundComponentDataPtr as pointer'^SoundComponentData#endiftoolbox fn SndDoCommand( ptr, SndCommand* cmd, Boolean) = OSErrtoolbox fn SndDoImmediate( ptr, SndCommand* cmd)        = OSErrtoolbox fn SndNewChannel(ptr* chan, short ,long , ptr)  = OSErrtoolbox fn SndDisposeChannel(ptr,Boolean)  = OSErrtoolbox fn SndPlay(ptr,Handle,Boolean)     = OSErrtoolbox fn SndRecord (PROC filterProc,Point corner,OSType quality,@Handle) = OSErr//toolbox fn SPBOpenDevice(@long StrPtr&,short,@long) = OSErr toolbox fn SPBOpenDevice(@Str255,short,@long) = OSErrtoolbox fn SPBCloseDevice(long) = OSErrtoolbox fn SPBSetDeviceInfo(long,OSType,@LONG) = OSErrtoolbox fn SPBGetDeviceInfo(long,OSType,@LONG) = OSErrtoolbox fn SPBPauseRecording(long)     = OSErrtoolbox fn SPBResumeRecording(long)    = OSErr toolbox fn SPBStopRecording(long)      = OSErr toolbox fn SetupSndHeader(long SndListHandle,short,long UnsignedFixed,short,OSType,short,unsigned long,@short) = OSErrtoolbox fn SPBGetRecordingStatus(long,@short,@short,@unsigned long,@unsigned long,@unsigned long,@unsigned long) = OSErrtoolbox fn SetupAIFFHeader(short,short,long UnsignedFixed,short,OSType,unsigned long,unsigned long) = OSErr toolbox fn SndChannelStatus(long SndChannelPtr,short,long SCStatusPtr) = OSErrtoolbox fn NewSndCallBackUPP( Ptr userRoutine ) = Ptr// moved from Subs Sound.incl   20090806