/*Complex arithmetic and functions.The C99 type 'double complex' is represented in FB as 'double_complex'.C99 types 'float complex' and 'long double complex' are not supported.To create a complex number:include "Tlbx complex.incl"dim as double_complex   zz = 1.0 + 1.0 * I // z = 1 + iThe floating-point operators fully supported are:    +  ++  +=  -  --  -=  *  and  / Be sure to use the special complex functions below, not the regularforms. Functions like exp(), sqr()... convert their arguments to double,losing the imaginary part.For the same reason, do not use the power operation x^y with double_complex operands. Use cpow() instead.  rp 20110517*/BeginCDeclaration#include <complex.h>EndCsystem double I // 'i'/*For documentation, in Terminal.app type:man complexFor even more detail: man cproj  [or whatever...]*/toolbox fn creal( double_complex z ) = double // real part   Re{ z }toolbox fn cimag( double_complex z ) = double // imag part   Im{ z }toolbox fn cabs( double_complex z ) = double // norm or magnitude  | z |toolbox fn carg( double_complex z ) = double // argument (phase angle)toolbox fn conj( double_complex z ) = double_complex // complex conjugatetoolbox fn cproj( double_complex z ) = double_complex // projection on the C99 Riemann spheretoolbox fn csqrt( double_complex z ) = double_complextoolbox fn cexp( double_complex z ) = double_complextoolbox fn clog( double_complex z ) = double_complextoolbox fn cpow( double_complex z, double_complex w ) = double_complextoolbox fn csin( double_complex z ) = double_complextoolbox fn ccos( double_complex z ) = double_complextoolbox fn ctan( double_complex z ) = double_complextoolbox fn casin( double_complex z ) = double_complextoolbox fn cacos( double_complex z ) = double_complextoolbox fn catan( double_complex z ) = double_complextoolbox fn csinh( double_complex z ) = double_complextoolbox fn ccosh( double_complex z ) = double_complextoolbox fn ctanh( double_complex z ) = double_complextoolbox fn casinh( double_complex z ) = double_complextoolbox fn cacosh( double_complex z ) = double_complextoolbox fn catanh( double_complex z ) = double_complex