/*    Util_RunningApplications.incl    Exposes some of useful methods within NSRunningApplications    Brian 20170710*/BeginCDeclarationCFArrayRef              RA_CopyRunningApps();NSRunningApplication *  RA_CurrentApplication();CFStringRef             RA_LocalizedName( NSRunningApplication *ra );Boolean                 RA_IsAppRunning( CFStringRef appName );Boolean                 RA_IsFrontMostApp( NSRunningApplication *ra );CFDateRef               RA_LaunchDate( CFStringRef appName  );pid_t                   RA_ProcessID( CFStringRef appName  );EndCBeginCFunctionCFArrayRef RA_CopyRunningApps() {    return(CFArrayRef)[[NSWorkspace sharedWorkspace] runningApplications];}NSRunningApplication * RA_CurrentApplication(){    return(NSRunningApplication *)[NSRunningApplication currentApplication ];}CFStringRef RA_LocalizedName( NSRunningApplication *ra ) {    if ( ra ) {        return(CFStringRef)[ra localizedName];    } else {        return nil;    }}NSRunningApplication * RA_RunningApplicationForString( CFStringRef appName ){    NSRunningApplication *ra = nil;    CFArrayRef allApps = RA_CopyRunningApps();    for( NSRunningApplication *anApp in(NSArray *)allApps ) {        if( [(NSString *)RA_LocalizedName( anApp ) isEqualToString:(NSString *)appName]) {            ra = anApp;            break;        }    }    CFRelease( allApps );    return ra;}Boolean RA_IsAppRunning( CFStringRef appName ) {    NSRunningApplication *ra = RA_RunningApplicationForString( appName );    if ( ra ) {        return ( ra != nil );    } else {        return false;    }}Boolean RA_IsFrontMostApp( NSRunningApplication *ra ) {    if( ra ) {        return [ra isActive];    } else {        return false;    }}CFDateRef RA_LaunchDate( CFStringRef appName ) {    NSRunningApplication *ra = RA_RunningApplicationForString( appName );    if( ra ) {        return(CFDateRef)[ra launchDate];    } else {        return nil;    }}pid_t RA_ProcessID( CFStringRef appName ) {    NSRunningApplication *ra = RA_RunningApplicationForString( appName );    if( ra ) {        return [ra processIdentifier];    } else {        return 0;    }}endCtoolbox fn RA_CopyRunningApps = CFArrayReftoolbox fn RA_CurrentApplication() = ptrtoolbox fn RA_LocalizedName( ptr ra ) = CFStringReftoolbox fn RA_RunningApplicationForString( CFStringRef appName ) = ptrtoolbox fn RA_IsAppRunning( CFStringRef appName ) = Booleantoolbox fn RA_IsFrontMostApp( ptr ra ) = Booleantoolbox fn RA_LaunchDate( CFStringRef appName  ) = CFDateReftoolbox fn RA_ProcessID( CFStringRef appName  ) = long