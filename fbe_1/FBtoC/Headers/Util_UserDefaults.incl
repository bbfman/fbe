/*  Util_UserDefaults.incl  Bernie Wylde 20170731*/BeginCDeclarationvoid UD_RegisterDefaults( CFDictionaryRef defaults );void UD_SetObject( CFStringRef key, CFTypeRef obj );void UD_SetBool( CFStringRef key, Boolean value );void UD_SetInteger( CFStringRef key, long value );void UD_SetDouble( CFStringRef key, double value );CFTypeRef UD_Object( CFStringRef key );Boolean UD_Bool( CFStringRef key );long UD_Integer( CFStringRef key );double UD_Double( CFStringRef key );void UD_Remove( CFStringRef key );Boolean UD_Synchronize();EndCBeginCFunctionvoid UD_RegisterDefaults( CFDictionaryRef defaults ){ [[NSUserDefaults standardUserDefaults] registerDefaults:(NSDictionary *)defaults]; }void UD_SetObject( CFStringRef key, CFTypeRef obj ){ [[NSUserDefaults standardUserDefaults] setObject:(id)obj forKey:(NSString *)key]; }void UD_SetBool( CFStringRef key, Boolean value ){ [[NSUserDefaults standardUserDefaults] setBool:value forKey:(NSString *)key]; }void UD_SetInteger( CFStringRef key, long value ){ [[NSUserDefaults standardUserDefaults] setInteger:value forKey:(NSString *)key]; }void UD_SetDouble( CFStringRef key, double value ){ [[NSUserDefaults standardUserDefaults] setDouble:value forKey:(NSString *)key]; }CFTypeRef UD_Object( CFStringRef key ){ return [[NSUserDefaults standardUserDefaults] objectForKey:(NSString *)key]; }Boolean UD_Bool( CFStringRef key ){ return [[NSUserDefaults standardUserDefaults] boolForKey:(NSString *)key]; }long UD_Integer( CFStringRef key ){ return [[NSUserDefaults standardUserDefaults] integerForKey:(NSString *)key]; }double UD_Double( CFStringRef key ){ return [[NSUserDefaults standardUserDefaults] doubleForKey:(NSString *)key]; }void UD_Remove( CFStringRef key ){ [[NSUserDefaults standardUserDefaults] removeObjectForKey:(NSString *)key]; }Boolean UD_Synchronize(){ return [[NSUserDefaults standardUserDefaults] synchronize]; }EndC/*  UD_RegisterDefaults( defaults )  Adds the contents of the specified dictionary to the registration domain.  If there is no registration domain, one is created using the specified dictionary,   and NSRegistrationDomain is added to the end of the search list.  The contents of the registration domain are not written to disk; you need to call   this method each time your application starts. You can place a plist file in   the application's Resources directory and call registerDefaults: with the contents   that read in from that file.*/toolbox UD_RegisterDefaults( CFDictionaryRef defaults )/*  UD_SetXxxx( key, value )  Sets the value of the key to the specified value.*/toolbox UD_SetObject( CFStringRef key, CFTypeRef obj )toolbox UD_SetBool( CFStringRef key, Boolean value )toolbox UD_SetInteger( CFStringRef key, long value )toolbox UD_SetDouble( CFStringRef key, double value )/*  UD_Xxxx( key )  Returns the value associated with the key.*/toolbox fn UD_Object( CFStringRef key ) = CFTypeReftoolbox fn UD_Bool( CFStringRef key ) = Booleantoolbox fn UD_Integer( CFStringRef key ) = longtoolbox fn UD_Double( CFStringRef key ) = double/*  UD_Remove  Removes the value of the key in the standard application domain.*/toolbox UD_Remove( CFStringRef key )/*  UD_Synchronize  Writes any modifications to the persistent domains to disk and updates all unmodified persistent domains to what is on disk.  Return value: true if the data was saved successfully to disk, otherwise false.*/toolbox fn UD_Synchronize = Boolean