/*   Translated to FB using         HeadToHead       by Bernie Wylde         ----------        5 January 2009*//* CoreGraphics - CGColor.h * Copyright (c) 2003-2006 Apple Computer, Inc. * All rights reserved.*/#if ndef _DEFINEDINCARBON#define CGColorRef as pointer#endifinclude "CoreGraphics:CGPattern.incl"#if ndef _DEFINEDINCARBON//#define CGColorRef as pointer/* Create a color in the color space `space' with color components * (including alpha) specified by `components'. `space' may be any color* space except a pattern color space. */toolbox fn CGColorCreate( CGColorSpaceRef colorSpace, float * components ) = CGColorRef// AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER;/* Create a color in the "Generic" gray color space. */toolbox fn CGColorCreateGenericGray( CGFloat gray, CGFloat alpha ) = CGColorRef// AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER;/* Create a color in the "Generic" RGB color space. */toolbox fn CGColorCreateGenericRGB( CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha ) = CGColorRef// AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER;/* Create a color in the "Generic" CMYK color space. */toolbox fn CGColorCreateGenericCMYK( CGFloat cyan, CGFloat magenta, CGFloat yellow, CGFloat black, CGFloat alpha ) = CGColorRef// AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER;/* Return a constant color. As CGColorGetConstantColor is not a "Copy" or * "Create" function, it does not necessarily return a new reference each * time it's called. As a consequence, you should not release the returned * value. However, colors returned from CGColorGetConstantColor can be * retained and released in a properly nested fashion, just like any other* CF type. */toolbox fn CGColorGetConstantColor( CFStringRef colorName ) = CGColorRef// AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER;/* Create a color in color space `space' with pattern `pattern' and* components `components'. `space' must be a pattern color space. */toolbox fn CGColorCreateWithPattern( CGColorSpaceRef space, CGPatternRef pattern, pointer components ) = CGColorRef// AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER;/* Create a copy of `color'. */toolbox fn CGColorCreateCopy( CGColorRef color ) = CGColorRef// AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER;/* Create a copy of `color' with alpha set to `alpha'. */toolbox fn CGColorCreateCopyWithAlpha( CGColorRef color, CGFloat alpha ) = CGColorRef// AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER;/* Equivalent to `CFRetain(color)', except it doesn't crash (as CFRetain* does) if `color' is NULL. */toolbox fn CGColorRetain( CGColorRef color ) = CGColorRef// AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER;/* Equivalent to `CFRelease(color)', except it doesn't crash (as CFRelease* does) if `color' is NULL. */toolbox CGColorRelease( CGColorRef color )// AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER;/* Return true if `color1' is equal to `color2'; false otherwise. */toolbox fn CGColorEqualToColor( CGColorRef color1, CGColorRef color2 ) = Boolean// AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER;/* Return the number of color components (including alpha) associated with* `color'. */toolbox fn CGColorGetNumberOfComponents( CGColorRef color ) = UInt32// AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER;/* Return the color components (including alpha) associated with* `color'. */toolbox fn CGColorGetComponents( CGColorRef color ) = pointer// CGFloat// AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER;/* Return the alpha component associated with `color'. */toolbox fn CGColorGetAlpha( CGColorRef color ) = CGFloat// AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER;/* Return the color space associated with `color'. */toolbox fn CGColorGetColorSpace( CGColorRef color ) = CGColorSpaceRef// AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER;/* Return the pattern associated with `color', if it's a color in a pattern* color space; NULL otherwise. */toolbox fn CGColorGetPattern( CGColorRef color ) = CGPatternRef// AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER;/* Return the CFTypeID for CGColors. */toolbox fn CGColorGetTypeID = CFTypeID// AVAILABLE_MAC_OS_X_VERSION_10_3_AND_LATER;/*** Names of colors for use with `CGColorGetConstantColor'. ***//* Colors in the "Generic" gray color space. */system CFStringRef kCGColorWhite// AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER;system CFStringRef kCGColorBlack// AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER;system CFStringRef kCGColorClear// AVAILABLE_MAC_OS_X_VERSION_10_5_AND_LATER;#endif// _DEFINEDINCARBON