/*   Translated to FB using         HeadToHead       by Bernie Wylde         ----------        5 January 2009*//* CoreGraphics - CGPattern.h * Copyright (c) 2000-2005 Apple Computer, Inc. * All rights reserved.*/#if ndef _DEFINEDINCARBON#define CGPatternRef as pointer/* kCGPatternTilingNoDistortion: The pattern cell is not distorted when * painted, however the spacing between pattern cells may vary by as much * as 1 device pixel. * * kCGPatternTilingConstantSpacingMinimalDistortion: Pattern cells are * spaced consistently, however the pattern cell may be distorted by as * much as 1 device pixel when the pattern is painted. * * kCGPatternTilingConstantSpacing: Pattern cells are spaced consistently * as with kCGPatternTilingConstantSpacingMinimalDistortion, however the * pattern cell may be distorted additionally to permit a more efficient* implementation. */begin enum_kCGPatternTilingNoDistortion_kCGPatternTilingConstantSpacingMinimalDistortion_kCGPatternTilingConstantSpacingend enum#define CGPatternTiling as UInt32/* The drawing of the pattern is delegated to the callbacks. The callbacks * may be called one or many times to draw the pattern. * * `version' is the version number of the structure passed in as a * parameter to the CGPattern creation functions. The structure defined * below is version 0. * * `drawPattern' should draw the pattern in the context `c'. `info' is the * parameter originally passed to the CGPattern creation functions. ** `releaseInfo' is called when the pattern is deallocated. */#define CGPatternDrawPatternCallback as pointer#define CGPatternReleaseInfoCallback as pointerbegin record CGPatternCallbacksdim as UInt32   versiondim as CGPatternDrawPatternCallback  drawPatterndim as CGPatternReleaseInfoCallback  releaseInfoend record/* Return the CFTypeID for CGPatternRefs. */toolbox fn CGPatternGetTypeID = CFTypeID// AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER;/* Create a pattern. */toolbox fn CGPatternCreate( pointer info, CGRect bounds, CGAffineTransform matrix, CGFloat xStep, CGFloat yStep, CGPatternTiling tiling, Boolean isColored, const CGPatternCallbacks callbacks ) = CGPatternRef/* Equivalent to `CFRetain(pattern)', except it doesn't crash (as CF does)* if `pattern' is NULL. */toolbox fn CGPatternRetain( CGPatternRef pattern ) = CGPatternRef/* Equivalent to `CFRelease(pattern)', except it doesn't crash (as CF does)* if `pattern' is NULL. */toolbox CGPatternRelease( CGPatternRef pattern )#endif// _DEFINEDINCARBON