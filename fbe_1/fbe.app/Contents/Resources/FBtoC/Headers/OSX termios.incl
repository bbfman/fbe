// termios.h// a structure and a few constants from termios macros   RP 17 Aug 2002/*struct termios { tcflag_t c_iflag; tcflag_t c_oflag;  tcflag_t c_cflag;  tcflag_t c_lflag;  cc_t  c_cc[NCCS];  speed_t  c_ispeed;  speed_t  c_ospeed; };*/#if ndef _DEFINEDINCARBON#define speed_t as long#define pid_t as longbegin record termiosdim as unsigned long c_iflag, c_oflag, c_cflag, c_lflagdim as unsigned char c_cc[19]dim as speed_t       c_ispeed, c_ospeedend record#endif/*now in FBtoC.h  #if def _PASSTHROUGHFUNCTION#include <unistd.h>#include <termios.h>typedef struct termios termios;#include <util.h>#endif*/_IXON  = 0x00000200 /* enable output flow control */_IXOFF = 0x00000400 /* enable input flow control */_IXANY = 0x00000800 /* any char will restart after stop */_ICANON = 0x00000100 /* canonicalize input lines */_ECHO   = 0x00000008 /* enable echoing */_ECHOE  = 0x00000002 /* visually erase chars */_ISIG   = 0x00000080 /* enable signals INTR, QUIT, [D]SUSP */_OPOST  = 0x00000001 /* enable following output processing */_CLOCAL = 0x00008000 /* ignore modem status lines */_CREAD  = 0x00000800 /* enable receiver */_CSIZE  = 0x00000300 /* character size mask */_CS5     =  0x00000000     /* 5 bits (pseudo) */_CS6     =  0x00000100     /* 6 bits */_CS7     =  0x00000200     /* 7 bits */_CS8     =  0x00000300     /* 8 bits */_PARENB = 0x00001000 /* parity enable */_PARODD = 0x00002000 /* odd parity, else even */_CSTOPB = 0x00000400 /* send 2 stop bits */_VMIN   = 16 /* !ICANON */_VTIME  = 17 /* !ICANON */_TCSANOW   = 0  /* make change immediate */_TCSADRAIN = 1  /* drain output, then change */_TCSAFLUSH = 2 /* drain output, flush input */_CCTSOFLOW = 0x00010000 /* CTS flow control of output */_CRTSIFLOW = 0x00020000 /* RTS flow control of input */_CRTSCTS   = _CCTSOFLOW or _CRTSIFLOW#if 0// useful-looking stuff in termios.hstruct termios { tcflag_t c_iflag; // input flags  tcflag_t c_oflag; // output flags  tcflag_t c_cflag; // control flags  tcflag_t c_lflag; // local flags  cc_t  c_cc[NCCS]; // control chars  speed_t  c_ispeed; // input speed  speed_t  c_ospeed; // output speed };/* * Input flags - software input processing */#define IGNBRK  0x00000001 /* ignore BREAK condition */#define BRKINT  0x00000002 /* map BREAK to SIGINTR */#define IGNPAR  0x00000004 /* ignore (discard) parity errors */#define PARMRK  0x00000008 /* mark parity and framing errors */#define INPCK  0x00000010 /* enable checking of parity errors */#define ISTRIP  0x00000020 /* strip 8th bit off chars */#define INLCR  0x00000040 /* map NL into CR */#define IGNCR  0x00000080 /* ignore CR */#define ICRNL  0x00000100 /* map CR to NL (ala CRMOD) */#define IXON  0x00000200 /* enable output flow control */#define IXOFF  0x00000400 /* enable input flow control */#if ndef _POSIX_SOURCE#define IXANY  0x00000800 /* any char will restart after stop */#define IMAXBEL  0x00002000 /* ring bell on input queue full */#endif  /*_POSIX_SOURCE *//* * Output flags - software output processing */#define OPOST  0x00000001 /* enable following output processing */#if ndef _POSIX_SOURCE#define ONLCR  0x00000002 /* map NL to CR-NL (ala CRMOD) */#define OXTABS  0x00000004 /* expand tabs to spaces */#define ONOEOT  0x00000008 /* discard EOT's (^D) on output) */#endif  /*_POSIX_SOURCE *//* * Control flags - hardware control of terminal */#if ndef _POSIX_SOURCE#define CIGNORE  0x00000001 /* ignore control flags */#endif#define CSIZE  0x00000300 /* character size mask */#define     CS5      0x00000000     /* 5 bits (pseudo) */#define     CS6      0x00000100     /* 6 bits */#define     CS7      0x00000200     /* 7 bits */#define     CS8      0x00000300     /* 8 bits */#define CSTOPB  0x00000400 /* send 2 stop bits */#define CREAD  0x00000800 /* enable receiver */#define PARENB  0x00001000 /* parity enable */#define PARODD  0x00002000 /* odd parity, else even */#define HUPCL  0x00004000 /* hang up on last close */#define CLOCAL  0x00008000 /* ignore modem status lines */#if ndef _POSIX_SOURCE#define CCTS_OFLOW 0x00010000 /* CTS flow control of output */#define CRTSCTS  (CCTS_OFLOW | CRTS_IFLOW)#define CRTS_IFLOW 0x00020000 /* RTS flow control of input */#define CDTR_IFLOW 0x00040000 /* DTR flow control of input */#define CDSR_OFLOW 0x00080000 /* DSR flow control of output */#define CCAR_OFLOW 0x00100000 /* DCD flow control of output */#define MDMBUF  0x00100000 /* old name for CCAR_OFLOW */#endif/* * "Local" flags - dumping ground for other state * * Warning: some flags in this structure begin with * the letter "I" and look like they belong in the * input flag. */#if ndef _POSIX_SOURCE#define ECHOKE  0x00000001 /* visual erase for line kill */#endif  /*_POSIX_SOURCE */#define ECHOE  0x00000002 /* visually erase chars */#define ECHOK  0x00000004 /* echo NL after line kill */#define ECHO  0x00000008 /* enable echoing */#define ECHONL  0x00000010 /* echo NL even if ECHO is off */#if ndef _POSIX_SOURCE#define ECHOPRT  0x00000020 /* visual erase mode for hardcopy */#define ECHOCTL   0x00000040 /* echo control chars as ^(Char) */#endif  /*_POSIX_SOURCE */#define ISIG  0x00000080 /* enable signals INTR, QUIT, [D]SUSP */#define ICANON  0x00000100 /* canonicalize input lines */#if ndef _POSIX_SOURCE#define ALTWERASE 0x00000200 /* use alternate WERASE algorithm */#endif  /*_POSIX_SOURCE */#define IEXTEN  0x00000400 /* enable DISCARD and LNEXT */#define EXTPROC         0x00000800      /* external processing */#define TOSTOP  0x00400000 /* stop background jobs from output */#if ndef _POSIX_SOURCE#define FLUSHO  0x00800000 /* output being flushed (state) */#define NOKERNINFO 0x02000000 /* no kernel output from VSTATUS */#define PENDIN  0x20000000 /* XXX retype pending input (state) */#endif  /*_POSIX_SOURCE */#define NOFLSH  0x80000000 /* don't flush after interrupt *//* * Commands passed to tcsetattr() for setting the termios structure. */#define TCSANOW  0  /* make change immediate */#define TCSADRAIN 1  /* drain output, then change */#define TCSAFLUSH 2  /* drain output, flush input */#if ndef _POSIX_SOURCE#define TCSASOFT 0x10  /* flag - don't alter h.w. state */#endif/* * Standard speeds */#define B0 0#define B50 50#define B75 75#define B110 110#define B134 134#define B150 150#define B200 200#define B300 300#define B600 600#define B1200 1200#define B1800 1800#define B2400 2400#define B4800 4800#define B9600 9600#define B19200 19200#define B38400 38400#if ndef _POSIX_SOURCE#define B7200 7200#define B14400 14400#define B28800 28800#define B57600 57600#define B76800 76800#define B115200 115200#define B230400 230400#define EXTA 19200#define EXTB 38400#endif  /* !_POSIX_SOURCE */#endif