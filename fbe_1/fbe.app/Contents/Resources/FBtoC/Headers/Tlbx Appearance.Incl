/* edited for FBtoC    {23/12/06} RP*//*   last mod BW 17 March 2006   1) New constants added: _kControlNoContent,Ê_kControlContentICONRes,Ê_kControlContentCGImageRef.   2) Amended record definition: ControlButtonContentInfo.   3) Tlbx Theme.incl is now part of this header so Tlbx Theme.incl should be trashed.   4) Bookmarks added to show where definitions should (eventually) go [for future reference].*/include "Tlbx CFString.Incl"#if def _DEFINEDINCARBON'~>> Gestalt.h_gestaltAppearanceAttr             = _"appr"_gestaltAppearanceExists           = 0_gestaltAppearanceCompatMode       = 1_gestaltAppearanceVersion          = _"apvr"'~>> Appearance.h_kAppearanceEventClass             = _"appr"_kAEThemeSwitch                    = _"thme"_appearanceBadBrushIndexErr        = -30560_appearanceProcessRegisteredErr    = -30561_appearanceProcessNotRegisteredErr = -30562_appearanceBadTextColorIndexErr    = -30563_appearanceThemeHasNoAccents       = -30564'---Brushes---begin enum not output_kThemeActiveDialogBackgroundBrush = 1_kThemeInactiveDialogBackgroundBrush = 2_kThemeActiveAlertBackgroundBrush  = 3_kThemeInactiveAlertBackgroundBrush = 4_kThemeActiveModelessDialogBackgroundBrush = 5_kThemeInactiveModelessDialogBackgroundBrush = 6_kThemeActiveUtilityWindowBackgroundBrush = 7_kThemeInactiveUtilityWindowBackgroundBrush = 8_kThemeListViewSortColumnBackgroundBrush = 9_kThemeListViewBackgroundBrush     = 10_kThemeIconLabelBackgroundBrush    = 11_kThemeListViewSeparatorBrush      = 12_kThemeChasingArrowsBrush          = 13_kThemeDragHiliteBrush             = 14_kThemeDocumentWindowBackgroundBrush = 15_kThemeFinderWindowBackgroundBrush = 16'---------------------------------'_kThemeActiveDialogTextColor       = 1_kThemeInactiveDialogTextColor     = 2_kThemeActiveAlertTextColor        = 3_kThemeInactiveAlertTextColor      = 4_kThemeActiveModelessDialogTextColor = 5_kThemeInactiveModelessDialogTextColor = 6_kThemeActiveWindowHeaderTextColor = 7_kThemeInactiveWindowHeaderTextColor = 8_kThemeActivePlacardTextColor      = 9_kThemeInactivePlacardTextColor    = 10_kThemePressedPlacardTextColor     = 11_kThemeActivePushButtonTextColor   = 12_kThemeInactivePushButtonTextColor = 13_kThemePressedPushButtonTextColor  = 14_kThemeActiveBevelButtonTextColor  = 15_kThemeInactiveBevelButtonTextColor = 16_kThemePressedBevelButtonTextColor = 17_kThemeActivePopupButtonTextColor  = 18_kThemeInactivePopupButtonTextColor = 19_kThemePressedPopupButtonTextColor = 20_kThemeIconLabelTextColor          = 21_kThemeListViewTextColor           = 22_kThemeActiveDocumentWindowTitleTextColor = 23_kThemeInactiveDocumentWindowTitleTextColor = 24_kThemeActiveMovableModalWindowTitleTextColor = 25_kThemeInactiveMovableModalWindowTitleTextColor = 26_kThemeActiveUtilityWindowTitleTextColor = 27_kThemeInactiveUtilityWindowTitleTextColor = 28_kThemeActivePopupWindowTitleColor = 29_kThemeInactivePopupWindowTitleColor = 30_kThemeActiveRootMenuTextColor     = 31_kThemeSelectedRootMenuTextColor   = 32_kThemeDisabledRootMenuTextColor   = 33_kThemeActiveMenuItemTextColor     = 34_kThemeSelectedMenuItemTextColor   = 35_kThemeDisabledMenuItemTextColor   = 36_kThemeActivePopupLabelTextColor   = 37_kThemeInactivePopupLabelTextColor = 38'---------------------------------''---------------------------------'_kThemeMenuBarNormal               = 0_kThemeMenuBarSelected             = 1'---------------------------------''---------------------------------'_kThemeMenuSquareMenuBar           = 0x01_kThemeMenuActive                  = 0_kThemeMenuSelected                = 1_kThemeMenuDisabled                = 3'---------------------------------''---------------------------------'_kThemeMenuTypePullDown            = 0_kThemeMenuTypePopUp               = 1_kThemeMenuTypeHierarchical        = 2'---------------------------------''---------------------------------'_kThemeMenuItemPlain               = 0_kThemeMenuItemHierarchical        = 1_kThemeMenuItemScrollUpArrow       = 2_kThemeMenuItemScrollDownArrow     = 3end enum'---------------------------------''---------------------------------'//_uppMenuTitleDrawingProcInfo       = 0x000036C0//_uppMenuItemDrawingProcInfo        = 0x000036C0'---------------------------------''~>> Controls.h'============= Control Globals ================_kControlDefProcType               = _"CDEF"_kControlTemplateResourceType      = _"CNTL"_kControlColorTableResourceType    = _"cctb"_kControlDefProcResourceType       = _"CDEF"_kControlTabListResType            = _"tab#"_kControlListDescResType           = _"ldes"'---------------------------------''---------------------------------'//_uppControlActionProcInfo          = 0x000002C0'---------------------------------'_kNumberCtlCTabEntries             = 4'---------------------------------'/*'~>> ControlDefinitions.hbegin record PopupPrivateDatadim mHandle as long' MenuHandledim mID     as short' SInt16end record'---------------------------------'*/'~>> MacErrors.h_errMessageNotSupported            = -30580_errDataNotSupported               = -30581_errControlDoesntSupportFocus      = -30582_errWindowDoesntSupportFocus       = -30583_errUnknownControl                 = -30584_errCouldntSetFocus                = -30585_errNoRootControl                  = -30586_errRootAlreadyExists              = -30587_errInvalidPartCode                = -30588_errControlsAlreadyExist           = -30589_errControlIsNotEmbedder           = -30590_errDataSizeMismatch               = -30591_errControlHiddenOrDisabled        = -30592_errWindowRegionCodeInvalid        = -30593_errCantEmbedIntoSelf              = -30594_errCantEmbedRoot                  = -30595_errItemNotControl                 = -30596'------'~>> ControlDefinitions.h_popupMenuProc                     = 1008'~>> Controls.hbegin enum not output_kControlSupportsNewMessages       = _" ok "'Date { 2/14/02 }///_kControlSupportsNewMessages       = _"ok"_kControlFocusNoPart               = 0_kControlFocusNextPart             = -1_kControlFocusPrevPart             = -2'---------------------------------''---------------------------------'_kControlKeyFilterBlockKey         = 0_kControlKeyFilterPassKey          = 1'---------------------------------''---------------------------------'_kControlFontBigSystemFont         = -1_kControlFontSmallSystemFont       = -2_kControlFontSmallBoldSystemFont   = -3end enum_kControlUseFontMask               = 0x0001_kControlUseFaceMask               = 0x0002_kControlUseSizeMask               = 0x0004_kControlUseForeColorMask          = 0x0008_kControlUseBackColorMask          = 0x0010_kControlUseModeMask               = 0x0020_kControlUseJustMask               = 0x0040_kControlUseAllMask                = 0x00FF_kControlAddFontSizeMask           = 0x0100begin enum not output_kControlFontStyleTag              = _"font"_kControlKeyFilterTag              = _"fltr"end enum_kControlSupportsGhosting          = 0x01_kControlSupportsEmbedding         = 0x02_kControlSupportsFocus             = 0x04_kControlWantsIdle                 = 0x08_kControlWantsActivate             = 0x10_kControlHandlesTracking           = 0x20_kControlSupportsDataAccess        = 0x40_kControlHasSpecialBackground      = 0x80_kControlGetsFocusOnClick          = 0x0100_kControlSupportsCalcBestRect      = 0x0200_kControlSupportsLiveFeedback      = 0x0400_kControlHasRadioBehavior          = 0x0800'----------------_kControlMsgDrawGhost              = 13_kControlMsgCalcBestRect           = 14_kControlMsgHandleTracking         = 15_kControlMsgFocus                  = 16_kControlMsgKeyDown                = 17_kControlMsgIdle                   = 18_kControlMsgGetFeatures            = 19_kControlMsgSetData                = 20_kControlMsgGetData                = 21_kControlMsgActivate               = 22_kControlMsgSetUpBackground        = 23_kControlMsgCalcValueFromPos       = 26_kControlMsgTestNewMsgSupport      = 27_kControlMsgSubValueChanged        = 25_kControlMsgSubControlAdded        = 28_kControlMsgSubControlRemoved      = 29//#define ControlRef      as handle // opaque//#define ControlPartCode as short'~>> QuickDraw.hbegin record ColorSpecdim as short    value/*index or other value*/dim as RGBColor rgb/*true color*/end record'~>> Controls.hbegin record CtlCTabdim ccSeed     as long' SInt32dim ccRider    as short' SInt16dim ctSize     as short' SInt16dim ctTable(3) as ColorSpec' ctTable[4];end recordbegin record ControlFontStyleRecdim flags     as shortdim font      as shortdim size      as shortdim style     as shortdim mode      as shortdim just      as shortdim foreColor as RGBColordim backColor as RGBColorend record'~>> ControlDefinitions.h_kControlBevelButtonMenuOnBottom = 0'Date { 2/11/02 }_kControlBevelButtonSmallBevelProc = 32_kControlBevelButtonNormalBevelProc = 33_kControlBevelButtonLargeBevelProc = 34_kControlBevelButtonAlignSysDirection = -1_kControlBevelButtonAlignCenter    = 0_kControlBevelButtonAlignLeft      = 1_kControlBevelButtonAlignRight     = 2_kControlBevelButtonAlignTop       = 3_kControlBevelButtonAlignBottom    = 4_kControlBevelButtonAlignTopLeft   = 5_kControlBevelButtonAlignBottomLeft = 6_kControlBevelButtonAlignTopRight  = 7_kControlBevelButtonAlignBottomRight = 8'---------------------------------''---------------------------------'_kControlBevelButtonAlignTextSysDirection = 0_kControlBevelButtonAlignTextCenter = 1_kControlBevelButtonAlignTextFlushRight = -1_kControlBevelButtonAlignTextFlushLeft = -2'---------------------------------''---------------------------------'_kControlBevelButtonPlaceSysDirection = -1_kControlBevelButtonPlaceNormally  = 0_kControlBevelButtonPlaceToRightOfGraphic = 1_kControlBevelButtonPlaceToLeftOfGraphic = 2_kControlBevelButtonPlaceBelowGraphic = 3_kControlBevelButtonPlaceAboveGraphic = 4'---------------------------------''---------------------------------'_kControlBevelButtonSmallBevelVariant = 0_kControlBevelButtonNormalBevelVariant = 0x01_kControlBevelButtonLargeBevelVariant = 0x02_kControlBevelButtonMenuOnRight    = 0x04_kControlBehaviorPushbutton        = 0_kControlBehaviorToggles           = 0x0100_kControlBehaviorSticky            = 0x0200_kControlBehaviorMultiValueMenu    = 0x4000_kControlBehaviorOffsetContents    = 0x8000_kControlBehaviorCommandMenu       = 0x2000'begin enum not output_kControlContentTextOnly           = 0_kControlNoContent                 = 0// 17 March 2006_kControlContentIconSuiteRes       = 1_kControlContentCIconRes           = 2_kControlContentPictRes            = 3_kControlContentICONRes            = 4// 17 March 2006_kControlContentIconSuiteHandle    = 129_kControlContentCIconHandle        = 130_kControlContentPictHandle         = 131_kControlContentIconRef            = 132_kControlContentICON               = 133_kControlContentCGImageRef         = 134// 17 March 2006_kControlBevelButtonContentTag     = _"cont"_kControlBevelButtonTransformTag   = _"tran"_kControlBevelButtonTextAlignTag   = _"tali"_kControlBevelButtonTextOffsetTag  = _"toff"_kControlBevelButtonGraphicAlignTag = _"gali"_kControlBevelButtonGraphicOffsetTag = _"goff"_kControlBevelButtonTextPlaceTag   = _"tplc"_kControlBevelButtonMenuValueTag   = _"mval"_kControlBevelButtonMenuHandleTag  = _"mhnd"_kControlBevelButtonCenterPopupGlyphTag = _"pglc"_kControlBevelButtonLastMenuTag    = _"lmnu"_kControlBevelButtonMenuDelayTag   = _"mdly"end enum'~>> Controls.h/*begin record ControlButtonContentInfodim contentType   as SInt16begin uniondim resId       as SInt16dim cIconHandle as handledim iconSuite   as handledim iconRef     as handledim picture     as handleend unionend record*/begin record CBCInfoUnionKludgebegin uniondim as SInt16 resIDdim as Handle cIconHandledim as Handle iconSuitedim as Handle iconRefdim as Handle picturedim as Handle ICONHandledim as pointer imageRefend unionend record// C-like definitionbegin record ControlButtonContentInfodim as SInt16 contentTypedim as CBCInfoUnionKludge uend record'~>> ControlDefinitions.h_kControlSliderProc                = 48_kControlSliderLiveFeedback        = 0x01_kControlSliderHasTickMarks        = 0x02_kControlSliderReverseDirection    = 0x04_kControlSliderNonDirectional      = 0x08_kControlTriangleProc              = 64_kControlTriangleLeftFacingProc    = 65_kControlTriangleAutoToggleProc    = 66_kControlTriangleLeftFacingAutoToggleProc = 67_kControlTriangleLastValueTag      = _"last"_kControlProgressBarProc           = 80_kControlProgressBarIndeterminateTag = _"inde"_kControlLittleArrowsProc          = 96_kControlChasingArrowsProc         = 112_kControlTabLargeProc              = 128_kControlTabSmallProc              = 129_kControlTabLargeNorthProc         = 128_kControlTabSmallNorthProc         = 129_kControlTabLargeSouthProc         = 130_kControlTabSmallSouthProc         = 131_kControlTabLargeEastProc          = 132_kControlTabSmallEastProc          = 133_kControlTabLargeWestProc          = 134_kControlTabSmallWestProc          = 135_kControlTabContentRectTag         = _"rect"_kControlTabEnabledFlagTag         = _"enab"_kControlTabFontStyleTag           = _"font"_kControlTabInfoTag                = _"tabi"_kControlTabInfoVersionZero        = 0'---------------------------------'begin record ControlTabInfoRecdim version     as SInt16dim iconSuiteID as SInt16dim name        as Str255end record'---------------------------------'_kControlSeparatorLineProc         = 144_kControlGroupBoxTextTitleProc     = 160_kControlGroupBoxCheckBoxProc      = 161_kControlGroupBoxPopupButtonProc   = 162_kControlGroupBoxSecondaryTextTitleProc = 164_kControlGroupBoxSecondaryCheckBoxProc = 165_kControlGroupBoxSecondaryPopupButtonProc = 166_kControlGroupBoxMenuHandleTag     = _"mhan"_kControlGroupBoxFontStyleTag      = _"font"_kControlImageWellProc             = 176_kControlImageWellAutoTrackProc    = 177_kControlImageWellContentTag       = _"cont"_kControlImageWellTransformTag     = _"tran"_kControlPopupArrowEastProc        = 192_kControlPopupArrowWestProc        = 193_kControlPopupArrowNorthProc       = 194_kControlPopupArrowSouthProc       = 195_kControlPopupArrowSmallEastProc   = 196_kControlPopupArrowSmallWestProc   = 197_kControlPopupArrowSmallNorthProc  = 198_kControlPopupArrowSmallSouthProc  = 199_kControlPlacardProc               = 224_kControlClockTimeProc             = 240_kControlClockTimeSecondsProc      = 241_kControlClockDateProc             = 242_kControlClockMonthYearProc        = 243_kControlClockNoFlags              = 0_kControlClockIsDisplayOnly        = 1_kControlClockIsLive               = 2_kControlClockLongDateTag          = _"date"_kControlClockFontStyleTag         = _"font"begin enum not output_kControlUserPaneProc              = 256_kControlUserItemDrawProcTag       = _"uidp"_kControlUserPaneDrawProcTag       = _"draw"_kControlUserPaneHitTestProcTag    = _"hitt"_kControlUserPaneTrackingProcTag   = _"trak"_kControlUserPaneIdleProcTag       = _"idle"_kControlUserPaneKeyDownProcTag    = _"keyd"_kControlUserPaneActivateProcTag   = _"acti"_kControlUserPaneFocusProcTag      = _"foci"_kControlUserPaneBackgroundProcTag = _"back"end enum//_uppControlUserPaneDrawProcInfo       = 0x000002C0//_uppControlUserPaneHitTestProcInfo    = 0x000003E0//_uppControlUserPaneTrackingProcInfo   = 0x00000FE0//_uppControlUserPaneIdleProcInfo       = 0x000000C0//_uppControlUserPaneKeyDownProcInfo    = 0x00002AE0//_uppControlUserPaneActivateProcInfo   = 0x000001C0//_uppControlUserPaneFocusProcInfo      = 0x000002E0//_uppControlUserPaneBackgroundProcInfo = 0x000003C0begin enum not output_kControlEditTextProc              = 272_kControlEditTextDialogProc        = 273_kControlEditTextPasswordProc      = 274_kControlEditTextDialogPasswordProc = 275_kControlEditTextStyleTag          = _"font"_kControlEditTextTextTag           = _"text"_kControlEditTextTEHandleTag       = _"than"_kControlEditTextKeyFilterTag      = _"fltr"_kControlEditTextSelectionTag      = _"sele"_kControlEditTextPasswordTag       = _"pass"_kControlEditTextLockedTag         = _"lock" /* Boolean. Locking disables editability.*/_kControlEditTextCFStringTag = _"cfst"/* CFStringRef*/_kControlEditTextPasswordCFStringTag = _"pwcf"/* CFStringRef -- UnicodeEditText Only*/_kControlEditTextValidationProcTag   = _"vali" // Called when a key filter can't be: after cut, paste, etc._kControlEditTextSingleLineTag = _"sglc" /* Tagged data supported by Unicode text Control only*/_kControlEditUnicodeTextProc = 912begin record ControlEditTextSelectionRecdim selStart as SInt16dim selEnd   as SInt16end record_kControlStaticTextProc            = 288_kControlStaticTextStyleTag        = _"font"_kControlStaticTextTextTag         = _"text"_kControlStaticTextCFStringTag     = _"cfst"_kControlStaticTextTextHeightTag   = _"thei"_kControlPictureProc               = 304_kControlPictureNoTrackProc        = 305_kControlIconProc                  = 320_kControlIconNoTrackProc           = 321_kControlIconSuiteProc             = 322_kControlIconSuiteNoTrackProc      = 323_kControlIconTransformTag          = _"trfm"_kControlIconAlignmentTag          = _"algn"_kControlWindowHeaderProc          = 336_kControlWindowListViewHeaderProc  = 337_kControlListBoxProc               = 352_kControlListBoxAutoSizeProc       = 353_kControlListBoxListHandleTag      = _"lhan"_kControlListBoxKeyFilterTag       = _"fltr"_kControlListBoxFontStyleTag       = _"font"_kControlListBoxDoubleClickTag     = _"dblc"_kControlListBoxLDEFTag            = _"ldef"_kControlPushButtonProc            = 368_kControlCheckBoxProc              = 369_kControlRadioButtonProc           = 370_kControlCheckBoxAutoToggleProc    = 371_kControlRadioButtonAutoToggleProc = 372_kControlPushButLeftIconProc       = 374_kControlPushButRightIconProc      = 375_kControlPushButtonDefaultTag      = _"dflt"_kControlScrollBarProc             = 384_kControlScrollBarLiveProc         = 386_kControlRadioGroupProc            = 416_kControlScrollTextBoxProc         = 432end enum_kControlScrollTextBoxAutoScrollProc = 433_kControlPopupButtonProc           = 400_kControlPopupFixedWidthVariant    = 0x01_kControlPopupVariableWidthVariant = 0x02_kControlPopupUseAddResMenuVariant = 0x04_kControlPopupUseWFontVariant      = 0x08begin enum not output_kControlPopupButtonMenuHandleTag  = _"mhan"_kControlPopupButtonMenuIDTag      = _"mnid"_kControlPushButtonCancelTag       = _"cncl"_kControlPopupButtonExtraHeightTag = _"exht"_kControlGroupBoxTitleRectTag      = _"trec"'---------------------------------'_kControlNoVariant                 = 0_kControlUsesOwningWindowsFontVariant = 0x08'---------------------------------'_kControlStructureMetaPart         = -1 // entire region_kControlEntireControl             = 0_kControlNoPart                    = 0_kControlLabelPart                 = 1_kControlMenuPart                  = 2_kControlTrianglePart              = 4_kControlEditTextPart              = 5_kControlPicturePart               = 6_kControlIconPart                  = 7_kControlClockPart                 = 8_kControlListBoxPart               = 24_kControlListBoxDoubleClickPart    = 25_kControlImageWellPart             = 26_kControlRadioGroupPart            = 27_kControlButtonPart                = 10_kControlCheckBoxPart              = 11_kControlRadioButtonPart           = 11_kControlUpButtonPart              = 20_kControlDownButtonPart            = 21_kControlPageUpPart                = 22_kControlPageDownPart              = 23_kControlIndicatorPart             = 129_kControlDisabledPart              = 254_kControlInactivePart              = 255_kControlCheckBoxUncheckedValue    = 0_kControlCheckBoxCheckedValue      = 1_kControlCheckBoxMixedValue        = 2_kControlRadioButtonUncheckedValue = 0_kControlRadioButtonCheckedValue   = 1_kControlRadioButtonMixedValue     = 2_popupVariableWidth                = 0x02'---------------------------------'//_uppControlDefProcInfo             = 0x00003BB0'---------------------------------''~>> Controls.h_kDrawControlEntireControl         = 0_kDrawControlIndicatorOnly         = 129_kDragControlEntireControl         = 0_kDragControlIndicator             = 1'---------------------------------'//_inLabel                           = 1//_inMenu                            = 2//_inTriangle                        = 4_kNoHiliteControlPart              = 0_kInLabelControlPart               = 1_kInMenuControlPart                = 2_kInTriangleControlPart            = 4_kInButtonControlPart              = 10_kInCheckBoxControlPart            = 11_kInUpButtonControlPart            = 20_kInDownButtonControlPart          = 21_kInPageUpControlPart              = 22_kInPageDownControlPart            = 23_kInIndicatorControlPart           = 129_kReservedControlPart              = 254_kControlInactiveControlPart       = 255end enum'~>> Dialogs.h'======= Dialog GLobals ========_kDialogFlagsUseThemeBackground    = 0x01_kDialogFlagsUseControlHierarchy   = 0x02_kDialogFlagsHandleMovableModal    = 0x04_kDialogFlagsUseThemeControls      = 0x08_kAlertFlagsUseThemeBackground     = 0x01_kAlertFlagsUseControlHierarchy    = 0x02_kAlertFlagsAlertIsMovable         = 0x04_kAlertFlagsUseThemeControls       = 0x08_kDialogFontNoFontStyle            = 0_kDialogFontUseFontMask            = 0x0001_kDialogFontUseFaceMask            = 0x0002_kDialogFontUseSizeMask            = 0x0004_kDialogFontUseForeColorMask       = 0x0008_kDialogFontUseBackColorMask       = 0x0010_kDialogFontUseModeMask            = 0x0020_kDialogFontUseJustMask            = 0x0040_kDialogFontUseAllMask             = 0x00FF_kDialogFontAddFontSizeMask        = 0x0100_kDialogFontUseFontNameMask        = 0x0200begin enum not output_kAlertStopAlert    = 0_kAlertNoteAlert    = 1_kAlertCautionAlert = 2_kAlertPlainAlert   = 3_kAlertDefaultOKText     = -1_kAlertDefaultCancelText = -1_kAlertDefaultOtherText  = -1_kAlertStdAlertOKButton     = 1_kAlertStdAlertCancelButton = 2_kAlertStdAlertOtherButton  = 3_kAlertStdAlertHelpButton   = 4end enumbegin record AlertStdAlertParamRecdim movable       as Booleandim helpButton    as Booleandim filterProc    as proc // ModalFilterUPPdim defaultText   as ptr // ConstStringPtrdim cancelText    as ptr // ConstStringPtrdim otherText     as ptr // ConstStringPtrdim defaultButton as SInt16dim cancelButton  as SInt16dim position      as UInt16end record'~>> ?????_UtilityWnd      = 225_MovableModalWnd = -212/*//'~Carbon Help Manager_kHMPascalStrContent = _"pstr"begin enum 0_kHMDefaultSide_kHMOutsideTopScriptAligned_kHMOutsideLeftCenterAligned_kHMOutsideBottomScriptAligned_kHMOutsideRightCenterAligned_kHMOutsideTopLeftAligned_kHMOutsideTopRightAligned_kHMOutsideLeftTopAligned_kHMOutsideLeftBottomAligned_kHMOutsideBottomLeftAligned_kHMOutsideBottomRightAligned_kHMOutsideRightTopAligned_kHMOutsideRightBottomAligned_kHMOutsideTopCenterAligned_kHMOutsideBottomCenterAligned_kHMInsideRightCenterAligned_kHMInsideLeftCenterAligned_kHMInsideBottomCenterAligned_kHMInsideTopCenterAligned_kHMInsideTopLeftCorner_kHMInsideTopRightCorner_kHMInsideBottomLeftCorner_kHMInsideBottomRightCorner_kHMAbsoluteCenterAlignedend enum#define HMContentType as UInt32begin record HMHelpContentdim contentType as HMContentTypedim tagString   as str255end record#define HMTagDisplaySide as shortbegin record HMHelpContentRecdim version    as longdim absHotRect as rect dim tagSide    as HMTagDisplaySidedim content[1] as HMHelpContentend record#if CarbonLibtoolbox fn HMSetControlHelpContent( ControlRef, HMHelpContentRec *inContent) = OSStatustoolbox fn HMSetTagDelay( long ) = OSStatustoolbox fn HMSetHelpTagsDisplayed( boolean ) = OSStatus#endif*/'~Toolboxes'~>> Menus.htoolbox fn IsMenuItemEnabled( Handle theMenu, UInt16 item ) = Booleantoolbox fn InsertMenuItemText( Handle theMenu, Str255 inString, SInt16 afterItem ) = OSStatustoolbox fn AppendMenuItemText( Handle theMenu, Str255 inString ) = OSStatustoolbox fn GetMenuFont( Handle theMenu, SInt16 *outFontID, UInt16 *outFontSize ) = OSStatustoolbox fn SetMenuFont( Handle theMenu, SInt16 inFontID, UInt16 inFontSize ) = OSStatuslibrary_kCMHelpItemNoHelp     = 0_kCMHelpItemAppleGuideÊ= 1_kCMHelpItemOtherHelp  = 2_kCMNothingSelected    = 0_kCMMenuItemSelected   = 1_kCMShowHelpSelected   = 3toolbox fn ContextualMenuSelect( Handle inMenu, Point globLocation, Boolean reserved,UInt32 inHelpType,Str255 inHelpItemString, AEDesc * inSelection,UInt32 * outUserSelctnType,SInt16 * outMID,UInt16 * outMItem) = OSStatus `0x7003,0xAA72toolbox fn InitContextualMenus                       = OSStatustoolbox fn ProcessIsContextualMenuClient( long )     = Booleantoolbox fn IsShowContextualMenuClick( @EventRecord ) = Booleanlibrary'~>> Appearance.htoolbox fn RegisterAppearanceClient    = OSStatus `0x303C,0x0015,0xAA74toolbox fn UnregisterAppearanceClient  = OSStatus `0x303C,0x0016,0xAA74/* in Tlbx Standard.incltoolbox fn CreateRootControl(ptr,@handle) = OSErr `0x303C,0x0001,0xAA73toolbox fn GetRootControl(ptr,@handle)    = OSErr `0x303C,0x0002,0xAA73toolbox fn CountSubControls(handle, @short)             = OSErr `0x303C,0x0016,0xAA73toolbox fn GetIndexedSubControl (handle, short,@handle) = OSErr `0x303C,0x0017,0xAA73*/'~>> Controls.htoolbox fn EmbedControl (ControlRef, ControlRef)                = OSErrtoolbox fn AutoEmbedControl(ControlRef, WindowRef)              = OSErrtoolbox fn GetSuperControl(ControlRef, @ControlRef)             = OSErrtoolbox fn SetControlSupervisor(ControlRef, ControlRef)         = OSErrtoolbox fn DumpControlHierarchy(ptr,FSSpec @long)       = OSErrtoolbox fn ActivateControl(ControlRef)   = OSErr toolbox fn DeactivateControl(ControlRef) = OSErr toolbox fn IsControlActive (ControlRef)  = Boolean toolbox fn SetControlFontStyle (ControlRef, @long)          = OSErrtoolbox fn SetControlData(ControlRef, ControlPartCode inPart, ResType inTagName, long inSize, ptr * inData)  = OSErr `0x303C,0x0012,0xAA73toolbox fn GetControlData(ControlRef, ControlPartCode inPart, ResType inTagName, long inBufferSize, ptr * inBuffer, long * outActualSize) = OSErr `0x303C,0x0013,0xAA73toolbox fn GetControlDataSize (ControlRef,short,long,@long)   = OSErr `0x303C,0x0014,0xAA73toolbox fn GetControlFeatures (ControlRef,@long)              = OSErr `0x303C,0x0011,0xAA73toolbox fn GetBestControlRect (ControlRef, @Rect, @short)     = OSErr `0x303C,0x001B,0xAA73toolbox fn SetUpControlBackground(ControlRef, short, Boolean) = OSErr `0x303C,0x001D,0xAA73toolbox fn SetControlVisibility(ControlRef,short,short)      = OSErr `0x303C,0x001E,0xAA73toolbox fn IsControlVisible(ControlRef)                      = Boolean `0x303C,0x0006,0xAA73toolbox fn SendControlMessage(ControlRef,SInt16 inMessage, long inParam) = long `0x303C,0xFFFE,0xAA73toolbox DrawControlInCurrentPort(ControlRef) `0x303C,0x0018,0xAA73toolbox fn FindControlUnderMouse( Point, WindowRef, short *outPart)      = ControlRef  `0x303C,0x0009,0xAA73toolbox fn HandleControlClick(ControlRef,Point,short inModifiers, proc)  = short `0x303C,0x000A,0xAA73toolbox fn HandleControlKey (ControlRef, short, short, short) = short `0x303C,0x000B,0xAA73toolbox IdleControls( WindowRef ) `0x303C,0x000C,0xAA73toolbox fn SetKeyboardFocus( WindowRef, ControlRef, short )    = short `0x303C,0x000E,0xAA73toolbox fn GetKeyboardFocus( WindowRef, @ControlRef)           = short `0x303C,0x000D,0xAA73toolbox fn AdvanceKeyboardFocus( WindowRef )               = short `0x303C,0x000F,0xAA73toolbox fn ReverseKeyboardFocus( WindowRef )               = short `0x303C,0x0010,0xAA73toolbox fn ClearKeyboardFocus( WindowRef )                 = short `0x303C,0x0019,0xAA73'~>> Menus.hbegin enum_kMenuNoModifiers       = 0_kMenuShiftModifier     = (1 << 0)_kMenuOptionModifier    = (1 << 1)_kMenuControlModifier   = (1 << 2)_kMenuNoCommandModifier = (1 << 3)end enumtoolbox fn MenuEvent (@EventRecord) = long toolbox fn GetMenuItemCommandID (MenuRef, MenuItemIndex, @MenuCommand)  = OSErr toolbox fn SetMenuItemCommandID (MenuRef, MenuItemIndex, MenuCommand)   = OSErrtoolbox fn GetMenuItemFontID (MenuRef, MenuItemIndex, @short)           = OSErr toolbox fn SetMenuItemFontID (MenuRef, MenuItemIndex, short)            = OSErr toolbox fn GetMenuItemHierarchicalID (MenuRef, MenuItemIndex, @short)   = OSErr toolbox fn SetMenuItemHierarchicalID (MenuRef, MenuItemIndex, short)    = OSErr toolbox fn GetMenuItemIconHandle (MenuRef, MenuItemIndex, short,@Handle) = OSErr toolbox fn SetMenuItemIconHandle (MenuRef, MenuItemIndex, short, Handle) = OSErrtoolbox fn GetMenuItemKeyGlyph (MenuRef, MenuItemIndex, @short)         = OSErr toolbox fn SetMenuItemKeyGlyph (MenuRef, MenuItemIndex, short)          = OSErrtoolbox fn GetMenuItemModifiers (MenuRef, MenuItemIndex, @short)        = OSErr toolbox fn SetMenuItemModifiers (MenuRef, MenuItemIndex, short)         = OSErr '~>> Dialogs.htoolbox fn StandardAlert(short,Str255,Str255, ptr,@short) = short `0x303C,0x090E,0xAA68toolbox fn GetDialogItemAsControl (Ptr,short,@Handle)     = short `0x303C,0x050F,0xAA68toolbox fn MoveDialogItem (Ptr,short,short,short)         = short `0x303C,0x0510,0xAA68toolbox fn SizeDialogItem (Ptr,short,short,short)         = short `0x303C,0x0511,0xAA68toolbox fn AutoSizeDialog (Ptr)                           = short `0x303C,0x020D,0xAA68'~>> Appearance.htoolbox fn SetThemePen (short, short, Boolean)            = long `0x303C,0x0001,0xAA74toolbox fn SetThemeBackground (short, short, Boolean)     = long `0x303C,0x0002,0xAA74toolbox fn SetThemeTextColor(short, short, Boolean)       = long `0x303C,0x0003,0xAA74toolbox fn SetThemeWindowBackground (WindowRef, short, Boolean)= long `0x303C,0x0004,0xAA74toolbox fn DrawThemeWindowHeader (@Rect, long)            = long `0x303C,0x0005,0xAA74toolbox fn DrawThemeWindowListViewHeader (@Rect,long)     = long `0x303C,0x0006,0xAA74toolbox fn DrawThemePlacard (@Rect, long)                 = long `0x303C,0x0007,0xAA74toolbox fn DrawThemeEditTextFrame (@Rect, long)           = long `0x303C,0x0009,0xAA74toolbox fn DrawThemeListBoxFrame (@Rect, long)            = long `0x303C,0x000A,0xAA74toolbox fn DrawThemeFocusRect (@Rect, Boolean)            = long `0x303C,0x000B,0xAA74toolbox fn DrawThemePrimaryGroup (@Rect, long)            = long `0x303C,0x000C,0xAA74toolbox fn DrawThemeSecondaryGroup (@Rect, long)          = long `0x303C,0x000D,0xAA74toolbox fn DrawThemeSeparator (@Rect,long)                = long `0x303C,0x000E,0xAA74toolbox fn DrawThemeModelessDialogFrame (@Rect, long)     = long `0x303C,0x0008,0xAA74toolbox fn DrawThemeGenericWell (@Rect, long, Boolean)    = long `0x303C,0x0022,0xAA74toolbox fn DrawThemeFocusRegion(long, Boolean)            = long `0x303C,0x0023,0xAA74toolbox fn IsThemeInColor (short, Boolean)  = Boolean  toolbox fn GetThemeAccentColors (@long)     = long    toolbox fn DrawThemeMenuBarBackground(@Rect, short, long)= long toolbox fn DrawThemeMenuTitle (@Rect,@Rect,long,long,long,long) = long toolbox fn GetThemeMenuBarHeight (@short)                = long toolbox fn DrawThemeMenuBackground (@Rect, short)        = long toolbox fn GetThemeMenuBackgroundRegion(@Rect,short,long)= long toolbox fn DrawThemeMenuSeparator (@Rect)                = long toolbox fn GetThemeMenuSeparatorHeight (@short)          = long toolbox fn GetThemeMenuItemExtra (short, @short, @short) = long toolbox fn GetThemeMenuTitleExtra (@short, Boolean)      = long toolbox fn DrawThemeMenuItem (Rect *menuRect,Rect *itemRect,SInt16 virtualMenuTop,SInt16 virtualMenuBottom,UInt16 state,UInt16 itemType,long inDrawProc,UInt32 usrData) = long '~':'~>> ??????_kRoundButtonControl = 31 << 4 // RoundButtonControl is CDEF 31'~>> ControlDefinitions.h#define ControlRoundButtonSize as SInt16_kControlRoundButtonNormalSize = 0 // 20 pixels_kControlRoundButtonLargeSize  = 2 // 25 pixels_kControlRoundButtonSizeTag    = _"size"'~>> CarbonEvents.hbegin enum not output_kHICommandOK = _"ok  "_kHICommandCancel = _"not!"_kHICommandQuit = _"quit"_kHICommandUndo = _"undo"_kHICommandRedo = _"redo"_kHICommandCut = _"cut "_kHICommandCopy = _"copy"_kHICommandPaste = _"past"_kHICommandClear = _"clea"_kHICommandSelectAll = _"sall"_kHICommandHide = _"hide"_kHICommandPreferences = _"pref"_kHICommandZoomWindow = _"zoom"_kHICommandMinimizeWindow = _"mini"_kHICommandArrangeInFront = _"frnt"_kHICommandAbout = _"abou"end enum//toolbox EnableMenuCommand( MenuRef, UInt32 commandID ) // MenuRef 0 means start search at root//toolbox fn GetControlOwner( ControlRef ) = WindowRef'~>> Controls.htoolbox SetControl32BitMinimum( ControlRef, long )toolbox SetControl32BitMaximum( ControlRef, long )toolbox SetControl32BitValue( ControlRef, long )toolbox SetControlViewSize( ControlRef, long )toolbox fn GetControl32BitMinimum( ControlRef ) = longtoolbox fn GetControl32BitMaximum( ControlRef ) = longtoolbox fn GetControl32BitValue( ControlRef )   = long'~>> Appearance.h#define ThemeMenuType as UInt16/*   The remainder of this header used to be Tlbx Theme.incl*///  last mod  RP 12 April 02/*     '~Globalsbegin globalsdim as long     gAppearanceVersiondim as boolean  gHasAppearancedim &&end globals*/'~Appearance.h'~Fonts#define ThemeFontID as unsigned shortbegin enum not output 0_kThemeSystemFont_kThemeSmallSystemFont_kThemeSmallEmphasizedSystemFont_kThemeViewsFont/* The following ID's are only available with MacOS X or CarbonLib 1.3 and later*/_kThemeEmphasizedSystemFont    = 4_kThemeApplicationFont         = 5_kThemeLabelFont               = 6_kThemeMenuTitleFont           = 100_kThemeMenuItemFont            = 101_kThemeMenuItemMarkFont        = 102_kThemeMenuItemCmdKeyFont      = 103_kThemeWindowTitleFont         = 104_kThemePushButtonFont          = 105_kThemeUtilityWindowTitleFont  = 106_kThemeAlertHeaderFont         = 107_kThemeCurrentPortFont         = 200end enumtoolbox fn UseThemeFont(ThemeFontID,ScriptCode) = OSStatus///toolbox fn GetThemeFont(ThemeFontID,@str255,int,int) = OSStatus 'Date { 2/3/02 }toolbox fn GetThemeFont(ThemeFontID inFontID,ScriptCode inScript,Str255 outFontName,  SInt16 * outFontSize, unsigned char * outStyle) = OSStatus'~Sounds#define ThemeSoundKind as OSType_kThemeSoundNone    = 0_kThemeSoundMenuOpen   = _"mnuo" /* menu sounds */_kThemeSoundMenuClose  = _"mnuc"_kThemeSoundMenuItemHilite = _"mnui"_kThemeSoundMenuItemRelease = _"mnus"_kThemeSoundWindowClosePress = _"wclp" /* window sounds */_kThemeSoundWindowCloseEnter = _"wcle"_kThemeSoundWindowCloseExit = _"wclx"_kThemeSoundWindowCloseRelease = _"wclr"_kThemeSoundWindowZoomPress = _"wzmp"_kThemeSoundWindowZoomEnter = _"wzme"_kThemeSoundWindowZoomExit = _"wzmx"_kThemeSoundWindowZoomRelease = _"wzmr"_kThemeSoundWindowCollapsePress = _"wcop"_kThemeSoundWindowCollapseEnter = _"wcoe"_kThemeSoundWindowCollapseExit = _"wcox"_kThemeSoundWindowCollapseRelease = _"wcor"_kThemeSoundWindowDragBoundary = _"wdbd"_kThemeSoundUtilWinClosePress = _"uclp" /* utility window sounds */_kThemeSoundUtilWinCloseEnter = _"ucle"_kThemeSoundUtilWinCloseExit = _"uclx"_kThemeSoundUtilWinCloseRelease = _"uclr"_kThemeSoundUtilWinZoomPress = _"uzmp"_kThemeSoundUtilWinZoomEnter = _"uzme"_kThemeSoundUtilWinZoomExit = _"uzmx"_kThemeSoundUtilWinZoomRelease = _"uzmr"_kThemeSoundUtilWinCollapsePress = _"ucop"_kThemeSoundUtilWinCollapseEnter = _"ucoe"_kThemeSoundUtilWinCollapseExit = _"ucox"_kThemeSoundUtilWinCollapseRelease = _"ucor"_kThemeSoundUtilWinDragBoundary = _"udbd"_kThemeSoundWindowOpen  = _"wopn" /* window close and zoom action */_kThemeSoundWindowClose  = _"wcls"_kThemeSoundWindowZoomIn  = _"wzmi"_kThemeSoundWindowZoomOut = _"wzmo"_kThemeSoundWindowCollapseUp = _"wcol"_kThemeSoundWindowCollapseDown = _"wexp"_kThemeSoundWindowActivate = _"wact"_kThemeSoundUtilWindowOpen = _"uopn"_kThemeSoundUtilWindowClose = _"ucls"_kThemeSoundUtilWindowZoomIn = _"uzmi"_kThemeSoundUtilWindowZoomOut = _"uzmo"_kThemeSoundUtilWindowCollapseUp = _"ucol"_kThemeSoundUtilWindowCollapseDown = _"uexp"_kThemeSoundUtilWindowActivate = _"uact"_kThemeSoundDialogOpen  = _"dopn"_kThemeSoundDialogClose  = _"dlgc"_kThemeSoundAlertOpen  = _"aopn"_kThemeSoundAlertClose  = _"altc"_kThemeSoundPopupWindowOpen = _"pwop"_kThemeSoundPopupWindowClose = _"pwcl"_kThemeSoundButtonPress  = _"btnp" /* button */_kThemeSoundButtonEnter  = _"btne"_kThemeSoundButtonExit  = _"btnx"_kThemeSoundButtonRelease = _"btnr"_kThemeSoundDefaultButtonPress = _"dbtp" /* default button */_kThemeSoundDefaultButtonEnter = _"dbte"_kThemeSoundDefaultButtonExit = _"dbtx"_kThemeSoundDefaultButtonRelease = _"dbtr"_kThemeSoundCancelButtonPress = _"cbtp" /* cancel button */_kThemeSoundCancelButtonEnter = _"cbte"_kThemeSoundCancelButtonExit = _"cbtx"_kThemeSoundCancelButtonRelease = _"cbtr"_kThemeSoundCheckboxPress = _"chkp" /* checkboxes */_kThemeSoundCheckboxEnter = _"chke"_kThemeSoundCheckboxExit  = _"chkx"_kThemeSoundCheckboxRelease = _"chkr"_kThemeSoundRadioPress  = _"radp" /* radio buttons */_kThemeSoundRadioEnter  = _"rade"_kThemeSoundRadioExit  = _"radx"_kThemeSoundRadioRelease  = _"radr"_kThemeSoundScrollArrowPress = _"sbap" /* scroll bars */_kThemeSoundScrollArrowEnter = _"sbae"_kThemeSoundScrollArrowExit = _"sbax"_kThemeSoundScrollArrowRelease = _"sbar"_kThemeSoundScrollEndOfTrack = _"sbte"_kThemeSoundScrollTrackPress = _"sbtp"_kThemeSoundSliderEndOfTrack = _"slte" /* sliders */_kThemeSoundSliderTrackPress = _"sltp"_kThemeSoundBalloonOpen  = _"blno" /* help balloons */_kThemeSoundBalloonClose  = _"blnc"_kThemeSoundBevelPress  = _"bevp" /* Bevel buttons */_kThemeSoundBevelEnter  = _"beve"_kThemeSoundBevelExit  = _"bevx"_kThemeSoundBevelRelease  = _"bevr"_kThemeSoundLittleArrowUpPress = _"laup" /* Little Arrows */_kThemeSoundLittleArrowDnPress = _"ladp"_kThemeSoundLittleArrowEnter = _"lare"_kThemeSoundLittleArrowExit = _"larx"_kThemeSoundLittleArrowUpRelease = _"laur"_kThemeSoundLittleArrowDnRelease = _"ladr"_kThemeSoundPopupPress  = _"popp" /* Popup Buttons */_kThemeSoundPopupEnter  = _"pope"_kThemeSoundPopupExit  = _"popx"_kThemeSoundPopupRelease  = _"popr"_kThemeSoundDisclosurePress = _"dscp" /* Disclosure Buttons */_kThemeSoundDisclosureEnter = _"dsce"_kThemeSoundDisclosureExit = _"dscx"_kThemeSoundDisclosureRelease = _"dscr"_kThemeSoundTabPressed  = _"tabp" /* Tabs */_kThemeSoundTabEnter   = _"tabe"_kThemeSoundTabExit   = _"tabx"_kThemeSoundTabRelease  = _"tabr"_kThemeSoundDragTargetHilite = _"dthi" /* drag manager */_kThemeSoundDragTargetUnhilite = _"dtuh"_kThemeSoundDragTargetDrop = _"dtdr"_kThemeSoundEmptyTrash  = _"ftrs" /* finder */_kThemeSoundSelectItem  = _"fsel"_kThemeSoundNewItem   = _"fnew"_kThemeSoundReceiveDrop  = _"fdrp"_kThemeSoundCopyDone   = _"fcpd"_kThemeSoundResolveAlias  = _"fral"_kThemeSoundLaunchApp  = _"flap"_kThemeSoundDiskInsert  = _"dski"_kThemeSoundDiskEject  = _"dske"_kThemeSoundFinderDragOnIcon = _"fdon"_kThemeSoundFinderDragOffIcon = _"fdof"toolbox fn PlayThemeSound(ThemeSoundKind) = OSStatus toolbox fn BeginThemeDragSound(ThemeSoundKind) = OSStatustoolbox fn EndThemeDragSound = OSStatus'~Cursors#define ThemeCursor as unsigned longbegin enum not output 0_kThemeArrowCursor_kThemeCopyArrowCursor_kThemeAliasArrowCursor_kThemeContextualMenuArrowCursor_kThemeIBeamCursor_kThemeCrossCursor_kThemePlusCursor_kThemeWatchCursor/* Can Animate */_kThemeClosedHandCursor_kThemeOpenHandCursor_kThemePointingHandCursor_kThemeCountingUpHandCursor/* Can Animate */_kThemeCountingDownHandCursor/* Can Animate */_kThemeCountingUpAndDownHandCursor/* Can Animate */_kThemeSpinningCursor/* Can Animate */_kThemeResizeLeftCursor_kThemeResizeRightCursor_kThemeResizeLeftRightCursor_kThemeNotAllowedCursor // 10.4_kThemeResizeUpCursor_kThemeResizeDownCursor_kThemeResizeUpDownCursor_kThemePoofCursor // 10.4end enumtoolbox fn SetThemeCursor( ThemeCursor ) = OSStatustoolbox fn SetAnimatedThemeCursor( ThemeCursor, long ) = OSStatus'~Drawing Environment#define ThemeBrush as SInt16begin enum not output 1//ThemeBrush_kThemeBrushDialogBackgroundActive /* Dialogs */_kThemeBrushDialogBackgroundInactive/* Dialogs */_kThemeBrushAlertBackgroundActive_kThemeBrushAlertBackgroundInactive_kThemeBrushModelessDialogBackgroundActive_kThemeBrushModelessDialogBackgroundInactive_kThemeBrushUtilityWindowBackgroundActive /* Miscellaneous */_kThemeBrushUtilityWindowBackgroundInactive /* Miscellaneous */_kThemeBrushListViewSortColumnBackground /* Finder */_kThemeBrushListViewBackground_kThemeBrushIconLabelBackground_kThemeBrushListViewSeparator_kThemeBrushChasingArrows_kThemeBrushDragHilite_kThemeBrushDocumentWindowBackground_kThemeBrushFinderWindowBackground/* Brushes available in Appearance 1.1 or later */_kThemeBrushScrollBarDelimiterActive_kThemeBrushScrollBarDelimiterInactive_kThemeBrushFocusHighlight_kThemeBrushPopupArrowActive_kThemeBrushPopupArrowPressed_kThemeBrushPopupArrowInactive_kThemeBrushAppleGuideCoachmark_kThemeBrushIconLabelBackgroundSelected_kThemeBrushStaticAreaFill_kThemeBrushActiveAreaFill_kThemeBrushButtonFrameActive_kThemeBrushButtonFrameInactive_kThemeBrushButtonFaceActive_kThemeBrushButtonFaceInactive_kThemeBrushButtonFacePressed_kThemeBrushButtonActiveDarkShadow_kThemeBrushButtonActiveDarkHighlight_kThemeBrushButtonActiveLightShadow_kThemeBrushButtonActiveLightHighlight_kThemeBrushButtonInactiveDarkShadow_kThemeBrushButtonInactiveDarkHighlight_kThemeBrushButtonInactiveLightShadow_kThemeBrushButtonInactiveLightHighlight_kThemeBrushButtonPressedDarkShadow_kThemeBrushButtonPressedDarkHighlight_kThemeBrushButtonPressedLightShadow_kThemeBrushButtonPressedLightHighlight_kThemeBrushBevelActiveLight_kThemeBrushBevelActiveDark_kThemeBrushBevelInactiveLight_kThemeBrushBevelInactiveDark/* Brush introduced in Appearance 1.1.1 (Mac OS 9.0) and later */_kThemeBrushNotificationWindowBackground = 48/* Brushes introduced in Carbon */_kThemeBrushMovableModalBackground = 49 /* use with kMovableModalWindowClass; available in Mac OS X, and CarbonLib 1.3 and later */_kThemeBrushSheetBackgroundOpaque = 50 /* use with kSheetWindowClass and kSheetAlertWindowClass; available in Mac OS X, and CarbonLib 1.3 and later */_kThemeBrushDrawerBackground   = 51   /* use with kDrawerWindowClass; available in Mac OS X, and CarbonLib 1.3 and later */_kThemeBrushToolbarBackground  = 52   /* use with kToolbarWindowClass; available in Mac OS X, and CarbonLib 1.6 and later */_kThemeBrushSheetBackgroundTransparent = 53 /* use with kSheetWindowClass and kSheetAlertWindowClass; available in Mac OS X 10.1 and CarbonLib 1.6, and later */_kThemeBrushMenuBackground     = 54   /* available in Mac OS X 10.1 and CarbonLib 1.6, and later */_kThemeBrushMenuBackgroundSelected = 55 /* available in Mac OS X 10.1 and CarbonLib 1.6, and later */_kThemeBrushPrimaryHighlightColor = -3 /* available in Mac OS 10.1 and CarbonLib 1.6, and later*/_kThemeBrushSecondaryHighlightColor = -4 /* available in Mac OS 10.1 and CarbonLib 1.6, and later*/_kThemeBrushAlternatePrimaryHighlightColor = -5 /* available in Mac OS 10.2 and later*/end enumbegin enum not output_kThemeBrushBlack   = -1_kThemeBrushWhite   = -2end enum#define ThemeDrawState as unsigned long//ThemeDrawState_kThemeStateDisabled    = 0 // obsolete but valid put back 'Date { 10/14/01 }_kThemeStateInactive    = 0_kThemeStateActive      = 1_kThemeStatePressed     = 2_kThemeStatePressedUp   = 2_kThemeStatePressedDown = 3_kThemeStateRollover    = 6_kThemeStateUnavailable = 7#define ThemeBackgroundKind as unsigned longbegin enum 1//ThemeBackgroundKind_kThemeBackgroundTabPane  _kThemeBackgroundPlacard _kThemeBackgroundWindowHeader _kThemeBackgroundListViewWindowHeader end enum'                                     (windowPtr ,isActive,depth,isColorDevice)toolbox fn SetThemeTextColorForWindow (long      ,Boolean ,word ,Boolean      ) = OSStatus/*ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ DRAWING STATE ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ*//* The following routines help you save and restore the drawing state in a theme-savvy manner. With *//* these weapons in your arsenal, there is no grafport you cannot tame. Use GetThemeDrawingState to *//* get the current drawing settings for the current port. It will return an opaque object for you  *//* to pass into SetThemeDrawingState later on. When you are finished with the state, call the  *//* DisposeThemeDrawingState routine. You can alternatively pass true into the inDisposeNow    *//* parameter of the SetThemeDrawingState routine.  You can use this routine to copy the drawing  *//* state from one port to another as well.               */toolbox fn NormalizeThemeDrawingState = OSStatustoolbox fn GetThemeDrawingState( ptr ) = OSStatustoolbox fn SetThemeDrawingState( ptr,Boolean ) = OSStatustoolbox fn DisposeThemeDrawingState( ptr ) = OSStatustoolbox fn GetThemeBrushAsColor( ThemeBrush inBrush, SInt16 inDepth, Boolean inColorDev, RGBColor * outColor) = OSStatusbegin enum 1_kThemeTextColorDialogActive _kThemeTextColorDialogInactive _kThemeTextColorAlertActive _kThemeTextColorAlertInactive _kThemeTextColorModelessDialogActive _kThemeTextColorModelessDialogInactive _kThemeTextColorWindowHeaderActive _kThemeTextColorWindowHeaderInactive_kThemeTextColorPlacardActive_kThemeTextColorPlacardInactive_kThemeTextColorPlacardPressed_kThemeTextColorPushButtonActive_kThemeTextColorPushButtonInactive_kThemeTextColorPushButtonPressed_kThemeTextColorBevelButtonActive_kThemeTextColorBevelButtonInactive_kThemeTextColorBevelButtonPressed_kThemeTextColorPopupButtonActive_kThemeTextColorPopupButtonInactive_kThemeTextColorPopupButtonPressed_kThemeTextColorIconLabel_kThemeTextColorListViewend enumtoolbox fn GetThemeTextColor(short inColor,short inDepth,Boolean inColorDev,RGBColor *outColor) = OSStatus/* *  DrawThemeTextBox() and TruncateThemeText() *  Availability: *    Mac OS X:         in version 10.0 and later in Carbon.framework *    CarbonLib:        in CarbonLib 1.3 and later *    Non-Carbon CFM:   not available */toolbox fn DrawThemeTextBox( CFStringRef, ThemeFontID, ThemeDrawState, Boolean wrapToWidth, Rect *boundingBox, SInt16 just, ptr inContext ) = OSStatus // inContext can be 0toolbox fn TruncateThemeText( CFMutableStringRef, ThemeFontID, ThemeDrawState, SInt16 inPixelWidthLimit, short inTruncWhere, ptr outTruncated ) = OSStatus // outTruncated (^boolean) can be 0// -1 means don't truncate; to truncate, use:_truncEnd    = 0_truncMiddle = 16384'~Buttons_kThemeRoundedBevelButton = 15// 20090803_kThemeMetricSmallHSliderMinThumbWidth = 54// 20090803_kThemeMetricSmallVSliderMinThumbHeight = 55// 20090803_kThemeMetricSmallHSliderHeight = 43// 20090803_kThemeMetricSmallHSliderTickHeight = 44// 20090803_kThemeMetricHSliderHeight = 41// 20090803_kThemeMetricVSliderWidth = 45// 20090803#define ThemeButtonValue as UInt16begin enum 0//ThemeButtonValue_kThemeButtonOff_kThemeButtonOn _kThemeButtonMixed_kThemeDisclosureRight  = 0_kThemeDisclosureDown_kThemeDisclosureLeftend enum#define ThemeButtonAdornment as UInt16begin enum//ThemeButtonAdornment_kThemeAdornmentNone    = 0_kThemeAdornmentDefault = (1 << 0)/* if set, draw default ornamentation ( push button only ) */_kThemeAdornmentFocus   = (1 << 2)/* if set, draw focus */_kThemeAdornmentRightToLeft = (1 << 4)/* if set, draw right to left label */_kThemeAdornmentDrawIndicatorOnly = (1 << 5)/* if set, don't draw or erase label ( radio, check, disclosure ) */end enum#define ThemeButtonKind as UInt16begin enum 0_kThemePushButton_kThemeCheckBox_kThemeRadioButton_kThemeBevelButton/* bevel button (obsolete) */_kThemeArrowButton/* popup button without text  (no label) */_kThemePopupButton/* popup button */_kThemeDisclosureButton_kThemeIncDecButton/* increment/decrement buttons  (no label) */_kThemeSmallBevelButton/* small-shadow bevel button */_kThemeLargeBevelButton/* large-shadow bevel button */_kThemeMediumBevelButton/* med-shadow bevel button */end enumbegin record ThemeButtonDrawInfo dim state     as ThemeDrawState dim value     as ThemeButtonValue dim adornment as ThemeButtonAdornmentend record#define ThemeArrowOrientation as UInt16begin enum 0//ThemeArrowOrientation_kThemeArrowLeft _kThemeArrowDown _kThemeArrowRight _kThemeArrowUp  end enum#define ThemePopupArrowSize as UInt16begin enum 0//ThemePopupArrowSize_kThemeArrow3pt    _kThemeArrow5pt   _kThemeArrow7pt   _kThemeArrow9pt   end enumtoolbox fn DrawThemeButton(@Rect,ThemeButtonKind ,@ThemeButtonDrawInfo,@ThemeButtonDrawInfo,long,long,long) = OSStatustoolbox fn GetThemeButtonRegion(@Rect,ThemeButtonKind,ThemeButtonDrawInfo,RgnHandle) = OSStatustoolbox fn GetThemeButtonContentBounds(@Rect,ThemeButtonKind,ThemeButtonDrawInfo,@Rect) = OSStatustoolbox fn GetThemeButtonBackgroundBounds(@Rect,ThemeButtonKind,ThemeButtonDrawInfo,@Rect) = OSStatustoolbox fn DrawThemeTickMark(@Rect,ThemeDrawState) = OSStatustoolbox fn DrawThemeChasingArrows(@Rect,unsigned long,ThemeDrawState,long,unsigned long) = OSStatustoolbox fn DrawThemePopupArrow(@Rect,ThemeArrowOrientation,ThemePopupArrowSize,ThemeDrawState,long,unsigned long) = OSStatustoolbox fn GetThemeTextDimensions( CFStringRef inString, ThemeFontID inFontID,ThemeDrawState inState, Boolean inWrapToWidth, Point * ioBounds,SInt16 * outBaseline) = OSStatus// 20090803toolbox fn ApplyThemeBackground( ThemeBackgroundKind   inKind, const Rect * bounds, ThemeDrawState inState, SInt16 inDepth, Boolean inColorDev) = OSStatus// 20090803'~Windows#define ThemeWindowType as UInt16begin enum 0//ThemeWindowType_kThemeDocumentWindow_kThemeDialogWindow_kThemeMovableDialogWindow_kThemeAlertWindow_kThemeMovableAlertWindow_kThemePlainDialogWindow_kThemeShadowDialogWindow_kThemePopupWindow_kThemeUtilityWindow_kThemeUtilitySideWindowend enum#define ThemeWindowAttributes as unsigned longbegin enum//ThemeWindowAttributes;_kThemeWindowHasGrow           = (1<<0)/* can the size of the window be changed by the user? */_kThemeWindowHasHorizontalZoom = (1<<3)/* window can zoom only horizontally */_kThemeWindowHasVerticalZoom   = (1<<4)/* window can zoom only vertically */_kThemeWindowHasFullZoom       = _kThemeWindowHasHorizontalZoom + _kThemeWindowHasVerticalZoom /* window zooms in all directions */_kThemeWindowHasCloseBox       = (1<<5)/* window has a close box */_kThemeWindowHasCollapseBox    = (1<<6)/* window has a collapse box */_kThemeWindowHasTitleText      = (1<<7)/* window has a title/title icon */_kThemeWindowIsCollapsed       = (1<<8)/* window is in the collapsed state */end enum#define ThemeGrowDirection as UInt16begin enum//ThemeGrowDirection_kThemeGrowLeft  = (1 << 0)/* can grow to the left */_kThemeGrowRight = (1 << 1)/* can grow to the right */_kThemeGrowUp    = (1 << 2)/* can grow up */_kThemeGrowDown  = (1 << 3)/* can grow down */end enumbegin record ThemeWindowMetricsdim as UInt16 metricSize/* should be always be sizeof( ThemeWindowMetrics )*/dim as SInt16 titleHeightdim as SInt16 titleWidthdim as SInt16 popupTabOffsetdim as SInt16 popupTabWidthdim as UInt16 popupTabPositionend record#define ThemeTitleBarWidget as UInt16begin enum 0//ThemeTitleBarWidget_kThemeWidgetCloseBox_kThemeWidgetZoomBox_kThemeWidgetCollapseBoxend enum#endif#if def _DEFINEDINCARBONtoolbox fn DrawThemeScrollBarDelimiters(ThemeWindowType,@Rect,ThemeDrawState,ThemeWindowAttributes) = OSStatustoolbox fn DrawThemeStandaloneGrowBox(@Point,ThemeGrowDirection,Boolean,ThemeDrawState) = OSStatustoolbox fn DrawThemeStandaloneNoGrowBox(@Point,ThemeGrowDirection,Boolean,ThemeDrawState) = OSStatustoolbox fn GetThemeStandaloneGrowBoxBounds(@Point,ThemeGrowDirection,Boolean,@Rect) = OSStatustoolbox fn DrawThemeTitleBarWidget(ThemeWindowType,@Rect,ThemeDrawState,ThemeWindowMetrics,ThemeWindowAttributes ,ThemeTitleBarWidget) = OSStatustoolbox fn DrawThemeWindowFrame(ThemeWindowType,@Rect,ThemeDrawState,ThemeWindowMetrics,ThemeWindowAttributes, long,long) = OSStatustoolbox fn GetThemeWindowRegion(ThemeWindowType,@Rect,ThemeDrawState,ThemeWindowMetrics,ThemeWindowAttributes,WindowRegionCode,RgnHandle) = OSStatustoolbox fn GetThemeWindowRegionHit(ThemeWindowType,@Rect,ThemeDrawState,ThemeWindowMetrics,ThemeWindowAttributes,Point,WindowRegionCode) = OSStatustoolbox fn GetThemeMetric(UInt32 inMetric, long * outMetric) = OSStatus_kThemeMetricScrollBarWidth      = 0_kThemeMetricSmallScrollBarWidth = 1'~Tabs#define ThemeTabStyle as UInt16begin enum 0//ThemeTabStyle_kThemeTabNonFront  _kThemeTabNonFrontPressed _kThemeTabNonFrontInactive _kThemeTabFront   _kThemeTabFrontInactive  end enum#define ThemeTabDirection as UInt16begin enum 0//ThemeTabDirection_kThemeTabNorth    _kThemeTabSouth   _kThemeTabEast    _kThemeTabWest    end enum/* NOTE ON TAB HEIGHT                  *//* Use the kThemeSmallTabHeightMax and kThemeLargeTabHeightMax when calculating the rects *//* to draw tabs into. This height includes the tab frame overlap. Tabs that are not in the *//* front are only drawn down to where they meet the frame, as if the height was just  *//* kThemeLargeTabHeight, for example, as opposed to the ...Max constant. Remember that for *//* East and West tabs, the height referred to below is actually the width.     */begin enum _kThemeSmallTabHeight     = 16/* amount small tabs protrude from frame.*/_kThemeLargeTabHeight     = 21/* amount large tabs protrude from frame.*/_kThemeTabPaneOverlap     = 3/* amount tabs overlap frame.*/_kThemeSmallTabHeightMax  = 19/* small tab height + overlap*/_kThemeLargeTabHeightMax  = 24/* large tab height + overlap*/end enumtoolbox fn DrawThemeTabPane(Rect,ThemeDrawState) = OSStatustoolbox fn DrawThemeTab(Rect,ThemeTabStyle,ThemeTabDirection,long,long) = OSStatustoolbox fn GetThemeTabRegion(Rect,ThemeTabStyle,ThemeTabDirection,RgnHandle) = OSStatus'~MacErrors.h_themeInvalidBrushErr         = -30560/* pattern index invalid */_themeProcessRegisteredErr    = -30561_themeProcessNotRegisteredErr = -30562_themeBadTextColorErr         = -30563_themeHasNoAccentsErr         = -30564_themeBadCursorIndexErr       = -30565_themeScriptFontNotFoundErr   = -30566/* theme font requested for uninstalled script system */_themeMonitorDepthNotSupportedErr = -30567/* theme not supported at monitor depth */#endif // def _DEFINEDINCARBON