/*   FBtoC mods  22 July 2007   bw  27 Aug 2007    RPFile:  Tlbx ColorPicker.InclContains: Color Picker package Interfaces.Version: Technology: System 7.5Package: Universal Interfaces 2.1 in “MPW Latest” on ETO #18*/#if ndef _DEFINEDINCARBON#if def _MaxSmallFract = _false_MaxSmallFract    = 0x0000FFFF#endif_kDefaultWidth    = 383_kDefaultHeight   = 238begin enum'PickerActions_kDidNothing_kColorChanged_kOkHit_kCancelHit_kNewPickerChosen_kApplItemHitend enum#define PickerAction as shortbegin enum'color types_kOriginalColor_kNewColorend enum#define ColorType as shortbegin enum 'EditOperations_kCut_kCopy_kPaste_kClear_kUndoend enum#define EditOperation as shortbegin enum 'ItemHitModifiers_kMouseDown_kKeyDown_kFieldEntered_kFieldLeft_kCutOp_kCopyOp_kPasteOp_kClearOp_kUndoOpend enum#define ItemModifier as shortbegin enum 'DialogPlacementSpecifiers_kAtSpecifiedOrigin_kDeepestColorScreen_kCenterOnMainScreenend enum#define DialogPlacementSpec as short_DialogIsMoveable     = 1_DialogIsModal        = 2_CanModifyPalette     = 4_CanAnimatePalette    = 8_AppIsColorSyncAware  = 16_InSystemDialog       = 32_InApplicationDialog  = 64_InPickerDialog       = 128_DetachedFromChoices  = 256_CanDoColor           = 1_CanDoBlackWhite      = 2_AlwaysModifiesPalette= 4_MayModifyPalette     = 8_PickerIsColorSyncAware=16_CanDoSystemDialog    = 32_CanDoApplDialog      = 64_HasOwnDialog         = 128_CanDetach            = 256begin enum 'EventForcasters_kNoForcast_kMenuChoice_kDialogAccept_kDialogCancel_kLeaveFocus_kPickerSwitch_kNormalKeyDown_kNormalMouseDownend enum#define EventForcaster as short/* A SmallFract value is just the fractional part of a Fixed number,which is the low order word.  SmallFracts are used to save room,and to be compatible with Quickdraw's RGBColor.  They can beassigned directly to and from INTEGERs. *//* Unsigned fraction between 0 and 1 */#define SmallFract as unsigned short/* For developmental simplicity in switching between the HLS and HSVmodels, HLS is reordered into HSL. Thus both models start withhue and saturation values; value/lightness/brightness is last. */begin record HSVColordim hue as SmallFract     /*Fraction of circle, red at 0*/dim saturation as SmallFract    /*0-1, 0 for gray, 1 for pure color*/dim value as SmallFract    /*0-1, 0 for black, 1 for max intensity*/end recordbegin record HSLColordim hue as SmallFract     /*Fraction of circle, red at 0*/dim saturation as SmallFract    /*0-1, 0 for gray, 1 for pure color*/dim lightness as SmallFract    /*0-1, 0 for black, 1 for white*/end record //typedef struct HSLColor HSLColor;begin record CMYColordim cyan as SmallFractdim magenta as SmallFractdim yellow as SmallFractend record//typedef struct CMYColor CMYColor;//CMColor the Color field's original type is a union of ALL color types, which//boils down to the normal rgb style record of 6 bytes.  To avoid FB^3 complaining//about fields that don't exist or some such, I just did it generically.begin record PMColordim profile as Handledim color.6'was CMColorend record//typedef struct PMColor PMColor, *PMColorPtr;#define picker as Handlebegin record PickerIconDatadim scriptCode  as shortdim iconSuiteID as shortdim helpResType as ResTypedim helpResID   as shortend record//typedef struct PickerIconData PickerIconData;#define DialogPtr as pointerbegin record PickerInitDatadim pickerDialog  as DialogPtrdim choicesDialog as DialogPtrdim flags         as longdim yourself      as Handleend record//typedef struct PickerInitData PickerInitData;begin record PickerMenuItemInfodim editMenuID as shortdim cutItem    as shortdim copyItem   as shortdim pasteItem  as shortdim clearItem  as shortdim undoItem   as shortend record//typedef struct PickerMenuItemInfo PickerMenuItemInfo;begin record PickerMenuStatedim cutEnabled   as Booleandim copyEnabled  as Booleandim pasteEnabled as Booleandim clearEnabled as Booleandim undoEnabled  as Boolean       dim undoString   as Str255       end record//typedef struct PickerMenuState PickerMenuState;//typedef pascal void (*ColorChangedProcPtr)(long userData, struct PMColor *newColor);//typedef pascal Boolean (*UserEventProcPtr)(EventRecord *event);//#if GENERATINGCFM//typedef UniversalProcPtr ColorChangedUPP;//typedef UniversalProcPtr UserEventUPP;//#else#define ColorChangedUPP as proc#define UserEventUPP    as procbegin record ColorPickerInfodim theColor       as PMColordim dstProfile     as Handledim flags          as longdim placeWhere     as shortdim dialogOrigin   as Pointdim pickerType     as longdim eventProc      as long 'UserEventUPP     dim colorProc      as long 'ColorChangedUPPdim colorProcData  as long       dim prompt         as Str255dim mInfo          as PickerMenuItemInfodim newColorChosen as Boolean       dim filler         as SInt8end record/*begin record SystemDialogInfodim flags        as longdim pickerType   as longdim placeWhere   as DialogPlacementSpecdim dialogOrigin as Pointdim mInfo        as PickerMenuItemInfoend recordbegin record PickerDialogInfodim flags        as longdim pickerType   as longdim dialogOrigin as Point///as pointer to Point'Date { 10/18/00 }dim mInfo        as PickerMenuItemInfoend recordbegin record ApplicationDialogInfodim flags        as long       dim pickerType   as long       dim theDialog    as DialogPtr      dim pickerOrigin as Point       dim mInfo        as PickerMenuItemInfoend recordbegin record EventDatadim event         as pointer// to EventRecorddim action        as PickerActiondim itemHit       as short       dim handled       as Boolean       dim filler        as SInt8       dim colorProc     as ColorChangedUPPdim colorProcData as long       dim forcast       as EventForcasterend recordbegin record EditDatadim theEdit as EditOperationdim action as PickerActiondim handled as Booleandim filler as SInt8end record*/#define CMProfileHandle as Handletoolbox fn Fix2SmallFract(Fixed f) = SmallFract toolbox fn SmallFract2Fix(SmallFract s) = Fixed toolbox CMY2RGB(const CMYColor *cColor, RGBColor *rColor) toolbox RGB2CMY(const RGBColor *rColor, CMYColor *cColor) toolbox HSL2RGB(const HSLColor *hColor, RGBColor *rColor) toolbox RGB2HSL(const RGBColor *rColor, HSLColor *hColor) toolbox HSV2RGB(const HSVColor *hColor, RGBColor *rColor) toolbox RGB2HSV(const RGBColor *rColor, HSVColor *hColor) /* Below brings up the ColorPicker 1.0 Dialog*/toolbox fn GetColor( Point where, Str255 prompt, const RGBColor *inColor, RGBColor *outColor ) = Booleantoolbox fn PickColor(ColorPickerInfo *theColorInfo) = OSErr#endif