/*   edited for FBtoC    {23/12/06} RP   more FBtoC mods    23 July 2007    bw*/#if ndef _DEFINEDINCARBON/* File: MacHelp.h Release: Universal Interfaces 3.4.1*/// this definition (only) is from Balloons.hbegin record HMStringResTypedim hmmResID as shortdim hmmIndex as shortend record'~Help Manager constantsbegin enum_kMacHelpVersion = 0x0003end enum#define HMContentRequest as SInt16begin enum_kHMSupplyContent  = 0_kHMDisposeContent = 1end enum#define HMContentType as unsigned long_kHMNoContent        = _"none"_kHMCFStringContent  = _"cfst" /* CFStringRef*/_kHMPascalStrContent = _"pstr"_kHMStringResContent = _"str#"_kHMTEHandleContent  = _"txth" /* NOT SUPPORTED ON MAC OS X*/_kHMTextResContent   = _"text" /* NOT SUPPORTED ON MAC OS X*/_kHMStrResContent    = _"str "/* * HMTagDisplaySide *  * Discussion: * Help tag display locations relative to absolute hot rect */#define HMTagDisplaySide as SInt16begin enum 0_kHMDefaultSide // System default location_kHMOutsideTopScriptAligned // Above aligned with left or right depending on system script_kHMOutsideLeftCenterAligned // To the left, centered vertically_kHMOutsideBottomScriptAligned _kHMOutsideRightCenterAligned // To the right, centered vertically_kHMOutsideTopLeftAligned // Above, aligned with left_kHMOutsideTopRightAligned // Above, aligned with right_kHMOutsideLeftTopAligned // To the left, aligned with top_kHMOutsideLeftBottomAligned // To the left, aligned with bottom_kHMOutsideBottomLeftAligned // To the right, aligned with top_kHMOutsideBottomRightAligned // To the right, aligned with bottom_kHMOutsideRightTopAligned _kHMOutsideRightBottomAligned _kHMOutsideTopCenterAligned // Above, centered horizontally_kHMOutsideBottomCenterAligned // Below, centered horizontally_kHMInsideRightCenterAligned // Inside, aligned with right centered, vertically_kHMInsideLeftCenterAligned // Inside, aligned with left centered, vertically_kHMInsideBottomCenterAligned // Inside, aligned with bottom centered, horizontally_kHMInsideTopCenterAligned // Inside, aligned with top centered, horizontally_kHMInsideTopLeftCorner // Inside, aligned with top and left_kHMInsideTopRightCorner // Inside, aligned with top and right_kHMInsideBottomLeftCorner // Inside, aligned with bottom and left_kHMInsideBottomRightCorner // Inside, aligned with bottom and right_kHMAbsoluteCenterAligned // Centered vertically and horizontallyend enum/* Obsoleted constants HMTagDisplaySides, use the new ones, please *//*begin enum_kHMTopSide           = _kHMOutsideTopScriptAligned_kHMLeftSide          = _kHMOutsideLeftCenterAligned_kHMBottomSide        = _kHMOutsideBottomScriptAligned_kHMRightSide         = _kHMOutsideRightCenterAligned_kHMTopLeftCorner     = _kHMOutsideTopLeftAligned_kHMTopRightCorner    = _kHMOutsideTopRightAligned_kHMLeftTopCorner     = _kHMOutsideLeftTopAligned_kHMLeftBottomCorner  = _kHMOutsideLeftBottomAligned_kHMBottomLeftCorner  = _kHMOutsideBottomLeftAligned_kHMBottomRightCorner = _kHMOutsideBottomRightAligned_kHMRightTopCorner    = _kHMOutsideRightTopAligned_kHMRightBottomCorner = _kHMOutsideRightBottomAlignedend enum*/#define HMContentProvidedType as SInt16_kHMContentProvided                 = 0_kHMContentNotProvided              = 1_kHMContentNotProvidedDontPropagate = 2_kHMMinimumContentIndex = 0 /* first entry in HMHelpContentRec.content is the minimum content */_kHMMaximumContentIndex = 1 /* second entry in HMHelpContentRec.content is the maximum content */_errHMIllegalContentForMinimumState = -10980 /* unrecognized content type for minimum content */_errHMIllegalContentForMaximumState = -10981 /* unrecognized content type for maximum content *//* obsolete names will be removed*//*begin enum_kHMIllegalContentForMinimumState = _errHMIllegalContentForMinimumStateend enum*/_kHelpTagEventHandlerTag = _"hevt"#if ndef _FBtoCbegin record HMHelpContentdim contentType as HMContentTypebegin uniondim tagCFString  as CFStringRef // CFStringRefdim tagString    as Str255 // Pascal Stringdim tagStringRes as HMStringResType // STR# resource ID and indexdim tagTEHandle  as Handle // TextEdit handle (NOT SUPPORTED ON MAC OS X)dim tagTextRes   as SInt16 // TEXT/styl resource ID (NOT SUPPORTED ON MAC OS X)dim tagStrRes    as SInt16 // STR resource IDend unionend record#else// bw 23 July 2007begin record HMHelpContentUnionKludgedim as CFStringRef       tagCFString// CFStringRefdim as Str255            tagString// Pascal Stringdim as HMStringResType   tagStringRes// STR# resource ID and indexdim as Handle            tagTEHandle// TextEdit handle (NOT SUPPORTED ON MAC OS X)dim as SInt16            tagTextRes// TEXT/styl resource ID (NOT SUPPORTED ON MAC OS X)dim as SInt16            tagStrRes// STR resource IDend recordbegin record HMHelpContentdim as HMContentType              contentTypedim as HMHelpContentUnionKludge   uend record#endifbegin record HMHelpContentRecdim as SInt32             versiondim as Rect               absHotRectdim as HMTagDisplaySide   tagSidedim as HMHelpContent      content[1]end record#define HMHelpContentPtr as Ptr // .HMHelpContentRec/* * CarbonLib: in CarbonLib 1.0 and later * Mac OS X: in version 10.0 and later */toolbox fn NewHMControlContentUPP  ( ptr userRoutine ) = ptrtoolbox fn NewHMWindowContentUPP   ( ptr userRoutine ) = ptrtoolbox fn NewHMMenuTitleContentUPP( ptr userRoutine ) = ptrtoolbox fn NewHMMenuItemContentUPP ( ptr userRoutine ) = ptrtoolbox DisposeHMControlContentUPP  ( ptr userUPP )toolbox DisposeHMWindowContentUPP   ( ptr userUPP )toolbox DisposeHMMenuTitleContentUPP( ptr userUPP )toolbox DisposeHMMenuItemContentUPP ( ptr userUPP )toolbox fn InvokeHMControlContentUPP  ( ControlRef inControl, Point inGlobalMouse, HMContentRequest inRequest, HMContentProvidedType * outContentProvided, HMHelpContentPtr ioHelpContent, ptr userUPP) = OSStatustoolbox fn InvokeHMWindowContentUPP   ( WindowRef inWindow, Point inGlobalMouse, HMContentRequest inRequest, HMContentProvidedType * outContentProvided, HMHelpContentPtr ioHelpContent, ptr userUPP) = OSStatustoolbox fn InvokeHMMenuTitleContentUPP( MenuRef inMenu, HMContentRequest inRequest, HMContentProvidedType * outContentProvided, HMHelpContentPtr ioHelpContent, ptr userUPP) = OSStatustoolbox fn InvokeHMMenuItemContentUPP ( const MenuTrackingData * inTrackingData, HMContentRequest inRequest, HMContentProvidedType * outContentProvided, HMHelpContentPtr ioHelpContent, ptr userUPP) = OSStatus'~Help Menu/* * HMGetHelpMenu() *  * Summary: * Returns a menu to which applications may add their own help items. *  * outHelpMenu: * On exit, contains the help menu. *  * outFirstCustomItemIndex: * On exit, contains the menu item index that will be used by the * first item added by the application. This parameter may be NULL. *  * Availability: * Non-Carbon CFM: not available * CarbonLib: in CarbonLib 1.1 and later * Mac OS X: in version 10.0 and later *////toolbox fn HMGetHelpMenu( MenuRef * outHelpMenu, MenuItemIndex * outFirstCustomItemIndex) = OSStatus'~Installing/Retrieving Content/* Menu title and item help tags are not yet supported by Carbon or CarbonLib. *//* They will be fully supported in a future release. */toolbox fn HMSetControlHelpContent( ControlRef inControl, const HMHelpContentRec * inContent ) = OSStatustoolbox fn HMGetControlHelpContent( ControlRef inControl, HMHelpContentRec * outContent ) = OSStatustoolbox fn HMSetWindowHelpContent( WindowRef inWindow, const HMHelpContentRec * inContent ) = OSStatustoolbox fn HMGetWindowHelpContent( WindowRef inWindow, HMHelpContentRec * outContent ) = OSStatustoolbox fn HMSetMenuItemHelpContent( MenuRef inMenu, MenuItemIndex inItem, const HMHelpContentRec * inContent ) = OSStatustoolbox fn HMGetMenuItemHelpContent( MenuRef inMenu, MenuItemIndex inItem, HMHelpContentRec * outContent ) = OSStatus'~Installing/Retrieving Content Callbackstoolbox fn HMInstallControlContentCallback( ControlRef inControl, ptr inContentUPP ) = OSStatustoolbox fn HMInstallWindowContentCallback   ( WindowRef inWindow, ptr inContentUPP ) = OSStatustoolbox fn HMInstallMenuTitleContentCallback( MenuRef     inMenu, ptr inContentUPP ) = OSStatustoolbox fn HMInstallMenuItemContentCallback ( MenuRef     inMenu, ptr inContentUPP ) = OSStatustoolbox fn HMGetControlContentCallback  ( ControlRef inControl, ptr * outContentUPP ) = OSStatustoolbox fn HMGetWindowContentCallback   ( WindowRef   inWindow, ptr * outContentUPP ) = OSStatustoolbox fn HMGetMenuTitleContentCallback( MenuRef       inMenu, ptr * outContentUPP ) = OSStatustoolbox fn HMGetMenuItemContentCallback ( MenuRef       inMenu, ptr * outContentUPP ) = OSStatus'~Enabling and Disabling Help Tagstoolbox fn HMAreHelpTagsDisplayed = Booleantoolbox fn HMSetHelpTagsDisplayed( Boolean inDisplayTags ) = OSStatustoolbox fn HMSetTagDelay( Duration inDelay ) = OSStatustoolbox fn HMGetTagDelay( Duration * outDelay ) = OSStatus'~Compatibilitytoolbox fn HMSetMenuHelpFromBalloonRsrc( MenuRef inMenu, SInt16 inHmnuRsrcID ) = OSStatustoolbox fn HMSetDialogHelpFromBalloonRsrc( DialogRef inDialog, SInt16 inHdlgRsrcID, SInt16 inItemStart ) = OSStatus'~Displaying tags/* * CarbonLib: in CarbonLib 1.2 and later * Mac OS X: in version 10.0 and later *//* * HMDisplayTag() *  * Summary: * Displays a help tag at a user defined location. * * inContent: * HMHelpContentRec describing the help tag to be displayed. *  * Result: * An OSStatus code indicating success or failure. */toolbox fn HMDisplayTag( const HMHelpContentRec * inContent ) = OSStatus/* * HMHideTag() *  * Summary: * HMHideTag hides the currently visible help tag. If there is no * current help tag, this call does nothing. *  * Result: * An OSStatus code indicating success or failure. */toolbox fn HMHideTag = OSStatus#endif